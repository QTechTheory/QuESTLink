(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    613354,      12117]
NotebookOptionsPosition[    595963,      11834]
NotebookOutlinePosition[    596919,      11866]
CellTagsIndexPosition[    596786,      11859]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Variational minimisation", "Title",
 CellChangeTimes->{{3.914341946912416*^9, 3.914341952260489*^9}, {
  3.914342019129496*^9, 
  3.914342019660005*^9}},ExpressionUUID->"0efa4d2f-656d-49de-986c-\
5612e5acc271"],

Cell["\<\
This notebook analytically and numerically explores variational minimisation, \
demonstrating quantum gradient descent and quantum natural gradient.\
\>", "Text",
 CellChangeTimes->{{3.914257287263557*^9, 3.91425730538938*^9}, {
  3.914257460878018*^9, 3.914257463772586*^9}, {3.914394426901127*^9, 
  3.914394516226091*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"45b3a7b1-65dc-4831-a87d-a3f36749d27a"],

Cell[TextData[{
 StyleBox["Contents",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[":",
  FontWeight->"Bold"],
 "\n",
 StyleBox["    \[Bullet] ",
  FontSlant->"Italic"],
 StyleBox[ButtonBox["Analytic",
  BaseStyle->"Hyperlink",
  ButtonData->"analytic"],
  FontSlant->"Italic"],
 StyleBox["\n    \[Bullet] ",
  FontSlant->"Italic"],
 StyleBox[ButtonBox["Gradient descent",
  BaseStyle->"Hyperlink",
  ButtonData->"gradient"],
  FontSlant->"Italic"],
 StyleBox["\n    \[Bullet] ",
  FontSlant->"Italic"],
 StyleBox[ButtonBox["Natural gradient",
  BaseStyle->"Hyperlink",
  ButtonData->"natural"],
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{3.914394512961897*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"7963f175-4e7a-40e0-9b62-1886ddc0beae"],

Cell["\<\
Tyson Jones, 2024
Department of Materials, University of Oxford
tyson.jones.input@gmail.com\
\>", "Text",
 CellChangeTimes->{{3.9143417084740477`*^9, 3.9143417373093452`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"09294e81-d942-4816-9797-ec3183353ba9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Import", "[", "\"\<https://qtechtheory.org/questlink.m\>\"", "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateDownloadedQuESTEnv", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7422948289705133`*^9, 3.742294839027577*^9}, 
   3.7462632126705923`*^9, 3.746267692792918*^9, {3.8567577925725613`*^9, 
   3.856757804329191*^9}, {3.856757917634594*^9, 3.856757918764201*^9}, {
   3.856981634527575*^9, 3.8569816553431168`*^9}, {3.85698175877962*^9, 
   3.8569817647645187`*^9}, {3.9142411156074343`*^9, 3.91424111591685*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8235bd07-0b24-4f7b-90cc-0c4cf5665ccf"],

Cell[CellGroupData[{

Cell["Analytic", "Section",
 CellChangeTimes->{{3.914244337526918*^9, 3.914244338501814*^9}, {
  3.91424448787783*^9, 3.914244503381407*^9}, {3.914256365147449*^9, 
  3.91425636628655*^9}, {3.914341984916346*^9, 3.914341986187092*^9}},
 CellTags->"analytic",ExpressionUUID->"f6394066-03e0-4e47-80b1-708163891250"],

Cell[TextData[{
 "Variational quantum algorithms make use of a parameterised \
\[OpenCurlyDoubleQuote]ansatz\[CloseCurlyDoubleQuote] circuit ",
 Cell[BoxData[
  FormBox[
   RowBox[{"U", "(", 
    OverscriptBox["\[Theta]", "\[RightVector]"], ")"}], TraditionalForm]],
  ExpressionUUID->"1d65421a-edf2-4951-97c3-da4d1f9408e5"],
 " acting upon a fixed input state ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"in"},
    "Ket"], TraditionalForm]],ExpressionUUID->
  "34ba6c61-5978-41fb-a879-d665e3e1148c"],
 ", in order to produce parameterised states ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{
     RowBox[{"\[Psi]", "(", 
       OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
    "Ket"], TraditionalForm]],ExpressionUUID->
  "e76aa3e9-02ca-4f9e-92ab-f3bd6b60e1d5"],
 ". For example, consider this three-qubit ansatz with parameters  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["\[Theta]", "\[RightVector]"], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "b"}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "14785aff-fd06-4fd8-b0a5-1f8bc7aa3511"],
 "."
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
  3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
  3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
  3.914241831847722*^9, 3.914241837335141*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"f3712918-2795-4932-be87-ad4de1ee935e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nQb", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"Circuit", "[", "  ", 
    RowBox[{
     SubscriptBox["H", "0"], 
     SubscriptBox["S", "0"], 
     SubscriptBox["H", "1"], 
     SubscriptBox["S", "1"], 
     SubscriptBox["H", "2"], 
     SubscriptBox["S", "2"], 
     RowBox[{
      SubscriptBox["C", "0"], "[", 
      SubscriptBox["X", "2"], "]"}], " ", 
     RowBox[{
      SubscriptBox["Rz", "2"], "[", "a", "]"}], " ", 
     RowBox[{
      SubscriptBox["Rz", "1"], "[", "b", "]"}], " ", 
     RowBox[{
      SubscriptBox["C", "2"], "[", 
      SubscriptBox["X", "1"], "]"}]}], "   ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawCircuit", "[", "u", "]"}]}], "Input",
 CellChangeTimes->{{3.91424136200288*^9, 3.914241386130516*^9}, {
   3.9142414261246433`*^9, 3.914241468739492*^9}, 3.914241516677422*^9, {
   3.914241762292317*^9, 3.914241763903315*^9}, {3.914241829797469*^9, 
   3.9142418298546877`*^9}, {3.91424492068567*^9, 3.9142449208281803`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"0f66e853-9d54-4cc7-8e16-918b2872049e"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {{LineBox[{{0, 0.5}, {1, 0.5}}], LineBox[{{0, 1.5}, {1, 1.5}}], 
     LineBox[{{0, 2.5}, {1, 2.5}}]}, {LineBox[{{1, 0.5}, {2, 0.5}}], 
     LineBox[{{1, 1.5}, {2, 1.5}}], LineBox[{{1, 2.5}, {2, 2.5}}]}, {
     LineBox[{{2, 0.5}, {3, 0.5}}], LineBox[{{2, 1.5}, {3, 1.5}}], 
     LineBox[{{2, 2.5}, {3, 2.5}}]}, {LineBox[{{3, 0.5}, {4, 0.5}}], 
     LineBox[{{3, 1.5}, {4, 1.5}}], LineBox[{{3, 2.5}, {4, 2.5}}]}, {
     LineBox[{{4, 0.5}, {5, 0.5}}], LineBox[{{4, 1.5}, {5, 1.5}}], 
     LineBox[{{4, 2.5}, {5, 2.5}}]}}, {{RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
     InsetBox["\<\"H\"\>", {0.5, 0.5}]}, {
     RectangleBox[{0.1, 1.1}, {0.9, 1.9}], 
     InsetBox["\<\"H\"\>", {0.5, 1.5}]}, {
     RectangleBox[{0.1, 2.1}, {0.9, 2.9}], 
     InsetBox["\<\"H\"\>", {0.5, 2.5}]}, {
     RectangleBox[{1.1, 0.1}, {1.9, 0.9}], 
     InsetBox["\<\"S\"\>", {1.5, 0.5}]}, {
     RectangleBox[{1.1, 1.1}, {1.9, 1.9}], 
     InsetBox["\<\"S\"\>", {1.5, 1.5}]}, {
     RectangleBox[{1.1, 2.1}, {1.9, 2.9}], 
     InsetBox["\<\"S\"\>", {1.5, 2.5}]}, {
     {FaceForm[GrayLevel[0]], DiskBox[{2.5, 0.5}, 0.1], 
      LineBox[{{2.5, 0.5}, {2.5, 2.5}}]}, {CircleBox[{2.5, 2.5}, 0.25], 
      LineBox[{{2.5, 2.25}, {2.5, 2.75}}]}}, {
     RectangleBox[{3.1, 1.1}, {3.9, 1.9}], 
     InsetBox["\<\"Rz\"\>", {3.5, 1.5}]}, {
     RectangleBox[{3.1, 2.1}, {3.9, 2.9}], 
     InsetBox["\<\"Rz\"\>", {3.5, 2.5}]}, {
     {FaceForm[GrayLevel[0]], DiskBox[{4.5, 2.5}, 0.1], 
      LineBox[{{4.5, 1.5}, {4.5, 2.5}}]}, {CircleBox[{4.5, 1.5}, 0.25], 
      LineBox[{{4.5, 1.25}, {4.5, 1.75}}]}}}},
  ImageSize->180,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.9142413864556503`*^9, 3.914241472267993*^9, 3.9142415359500723`*^9, 
   3.914241772158445*^9, 3.9142418386044197`*^9, 3.914242871463304*^9, 
   3.914243800754067*^9, 3.914243831725378*^9, 3.9142442308652573`*^9, 
   3.9142444124184227`*^9, {3.914244928193111*^9, 3.914244949411438*^9}, {
   3.914249553286605*^9, 3.914249574125411*^9}, 3.9142497157956038`*^9, 
   3.914249791653767*^9, 3.9142514968564653`*^9, 3.914254246969771*^9, 
   3.914254446838441*^9, 3.9142551212154827`*^9, 3.914258054205132*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"93503eab-6ad1-48d6-bbbc-a03e0d0a7384"]
}, Open  ]],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s use a fixed input state ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{"in"},
     "Ket"], " ", "=", " ", 
    TemplateBox[{"0"},
     "Ket"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7e2a2b4a-7944-4def-9d23-edaa35728e64"],
 "."
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
  3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
  3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
  3.914241713636671*^9, 3.914241739191381*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"baa75348-35a5-4ec3-bd2b-7759739eae28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"in", " ", "=", " ", 
  RowBox[{"UnitVector", "[", 
   RowBox[{
    SuperscriptBox["2", "nQb"], ",", " ", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9142417456981077`*^9, 3.91424176673601*^9}, {
  3.9142449273929157`*^9, 3.914244928137252*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"7d88a256-9884-411d-bd5c-876cb49a32c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.91424176937118*^9, 3.914241773573443*^9}, {
   3.9142418256386967`*^9, 3.914241840107308*^9}, 3.9142428714752417`*^9, 
   3.9142444124300127`*^9, {3.91424493100093*^9, 3.914244949502934*^9}, {
   3.91424955443559*^9, 3.9142495741383753`*^9}, 3.914249717107777*^9, 
   3.914249791666678*^9, 3.914251496872451*^9, 3.9142542469825373`*^9, 
   3.9142544468705883`*^9, 3.91425512123638*^9, 3.91425805421566*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"cddbd871-3fd0-433d-b6ae-5ed56f60d64d"]
}, Open  ]],

Cell[TextData[{
 "We can express our ansatz state ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{
     RowBox[{"\[Psi]", "(", 
       OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
    "Ket"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "01012964-8f1b-4ea8-a3e4-77cf3fd7f320"],
 " analytically as a function of ",
 StyleBox["a",
  FontSlant->"Italic"],
 " and ",
 StyleBox["b",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
  3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
  3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
  3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
  3.914241816743944*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"0707daf7-4648-4d80-8a1d-834e8acf0563"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Psi]", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"CalcCircuitMatrix", "[", "u", "]"}], " ", ".", " ", "in"}], " ", 
   "//", " ", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.9142413874878674`*^9, 3.91424139172851*^9}, {
  3.914241539403315*^9, 3.9142415400067368`*^9}, {3.914241820701212*^9, 
  3.914241879101321*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"d2ab11cb-cbc8-42d7-98d8-ade15c3f0ad9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{"a", "+", "b"}], ")"}]}]], 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"a", "+", "b"}], ")"}]}]], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "b"}], ")"}]}]]}], 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"a", "-", "b"}], ")"}]}]]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"a", "+", "b"}], ")"}]}]], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"a", "+", "b"}], ")"}]}]], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "b"}], ")"}]}]]}], 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "b"}], ")"}]}]]}], 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9142413918891163`*^9, 3.914241473914356*^9, 3.914241540246599*^9, {
   3.914241822349255*^9, 3.91424188459265*^9}, 3.914242871514194*^9, 
   3.91424441246117*^9, 3.914244949583337*^9, {3.914249556029965*^9, 
   3.9142495741656227`*^9}, 3.9142497187417192`*^9, 3.914249791702773*^9, 
   3.914251496946199*^9, 3.914254247012381*^9, 3.914254446905198*^9, 
   3.914255121272608*^9, 3.914258054255095*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"29e20321-a308-49e4-ae55-9b4f1c7c20bc"]
}, Open  ]],

Cell[TextData[{
 "An experimentalist could freely change the values of parameters ",
 StyleBox["a",
  FontSlant->"Italic"],
 " and ",
 StyleBox["b",
  FontSlant->"Italic"],
 ", smoothly changing the output quantum state. For instance, here\
\[CloseCurlyQuote]s how the fidelity with the ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"+"},
    "Ket"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d9862db7-2da1-4b57-9282-3069c1f4becf"],
 " state would change as ",
 StyleBox["b",
  FontSlant->"Italic"],
 " is varied (incidentally, it is independent of ",
 StyleBox["a",
  FontSlant->"Italic"],
 ")."
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
  3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
  3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
  3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
  3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
  3.914242249585505*^9, 3.914242286232564*^9}, {3.914242508925809*^9, 
  3.914242525387639*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"1853ccba-c55a-42b0-810f-a8bf6cbe27b9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plus", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       SuperscriptBox["2", "nQb"]]], ",", 
     SuperscriptBox["2", "nQb"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fid", " ", "=", " ", 
  RowBox[{"Simplify", "[", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"\[Psi]", " ", ".", " ", "plus"}], "]"}], "2"], ",", "  ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], " ", "\[Element]", "Reals"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.914242306314588*^9, 3.914242331509637*^9}, {
  3.914242451543746*^9, 3.914242452196804*^9}, {3.914244945480927*^9, 
  3.914244947577635*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"8dff8e2c-3eac-4005-827e-7bb2123a32a2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "16"], " ", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "b"}]]}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.914242290711187*^9, 3.91424235489734*^9}, 
   3.914242452480019*^9, 3.9142428715888233`*^9, {3.9142444035236397`*^9, 
   3.914244412496455*^9}, 3.914244949699452*^9, {3.914249557809456*^9, 
   3.91424957417969*^9}, 3.9142497202605467`*^9, 3.91424979175521*^9, 
   3.914251496994773*^9, 3.914254247047023*^9, 3.914254446938558*^9, 
   3.914255121365179*^9, 3.91425805433392*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"17949871-c815-4c49-ab46-538ba6f8dda1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"fid", ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Pi]"}], ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<b\>\"", ",", 
      "\"\<|\[LeftAngleBracket]\[Psi](a,b)|+\[RightAngleBracket]\!\(\*\
SuperscriptBox[\(|\), \(2\)]\)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914242345277616*^9, 3.914242364771562*^9}, {
  3.914242445494542*^9, 3.914242454263125*^9}, {3.914243079147222*^9, 
  3.914243080617506*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"01a6a919-47da-44ed-8bd4-45bf152099b4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Hd2o6spEEuL7+xrKvoJDrOCrzrxUEiIm7vGWk4bDk9G+34+fkJDKbLfjW3Qu
rtpeDc8mIW8cwtV+reJQfVeS4J9PQvScB5ur1nBoMjOQdCoiIbsqn3cHrePw
WdxP1fwFCRExlbukuIHD4HyaqeZLEnJK76V/L50n6+tdlV+TEJniZA7PTRzW
YseCJd6SkPY7hruW6Mx+gTeR7z0J6Z8yLffYwoFy8EgJaz0J8WBRbOqm894t
2/qlJhJiPX7HUm4bB/nOO71/WkhIcdOSWwCdT2QUT/V0kJDmJlgvo7PO5S7m
j59IyKqoNFc/nc1VaEJV3STEkTc6dZHOjjt2KxT0kRCjb2cKtuns3aeplTRA
QjSazyuu0/nWMw/biCESMi/dqjJK5wcBCb4BIyTEyi6zoZHOKZrv7juPkZCk
OobWWDrnU4YzLSZJSNfrvYaGdH71m/211iwJIb1UN92g5+/X1/4xapGer53v
WBydj3Y+6vtEo49X5tPko/Na/dkJvk0SUnTyjWsEvR61VQIb1oxkRFFt6+wf
ev2CS77vzGIlIzYNmeyH6IxkPd39ZwcZ0RNwDveg158p8aKiNA8ZUT6j3P6Y
rs+HyP2nvUhkxFWW6UcxXb/7wf/MKvnJiLhO77tSur56V8ucV4XJyJ3xL05Z
dD9QbY8+uCNORvKSpKQM6H6JNVlPb9lPRmKGJU9xLOJwVgt9sVOWjDjKpcq/
pPut76B2V/JhMpIjxXm3YwaHtH1cvweOkZHbbWbzanS/2gnhi3tPkhEnw5Jj
T+l+/sVkKfhck4y8vLpieWAch7wVYek5XTLyKvjn4bOj9H4x+fPEEUMyEqJS
Oe/+B4d/Pc72mAUZmWmdE7o0jENpm7QPqw0ZCT8ye09zkK4XOh2mZ0+PF8I5
RPmBw2JhQEG3CxmxzMqxukXfn1tBEVNjgWRk7ZpJlT8VB8xbb1vuFhnZHHyI
fmyn7wcnHuLVUDLy6LdoK2srTv++mXR4M5KMFBv1jRs04kAUKwgippMRt8yk
OrZqer/jd4+xeEpGXgihki30fpTEJf80PZeev11c8bVyHISXXjdIPCcjdb2O
lOwiHPa1fNih8p6MjN64MfhfOr1/1kaK3K6n66UvnmCcjEPRSwO5pg9khPPt
nzCfBLqf03uMDan0/Eu9pYKj6P7w/JPsOEhGpFxFuBtv0PWisEpGMVIQDsW3
Qdv0/izepZlzj5WCHL1jQfEwwWEjJkI0fAcFYbvgGtCqj8MLdg6BW0QKooU5
FlmcxoGwzsnhtZeCqNoZGNUcxKFnmDBhqk5B0mf4517Sz4vSTBNnI00Ksrap
7S7HgEOETfyvM7oURKniyWbqGhWO9ZC/a5hQkAbXyftaM1RIa+HvOOJAQSih
Hz9N9VLhQtmuUuFQChIZw3fmBv38Ou5hJy1wl4LUEmA3ZxYVSAcyC8iRFET9
K/uVKPr515iz+yl3HAXhajB95BhNBckksditLApibrxYcNGHCv9uSvn+wuj5
3bhFqj5GhQC9w0eKGfgQPt8FpKe2E2ZOP8uJZ+FD8N6FU+2VneB6Upg3iIMP
yZUdOlj5vBNsFBjGzhD4kF2GHuPnMzoB4e9IndrNh7TvTqkSDOoErl8XNxWA
D0GKRmr2HemErOsJTdW3+BANwcOs33I6QOgqm2JWKB8ioTKhrZraAfEe15/c
v0ufn10pPOFRB9y1tw84F8OHXP/nyiN6swPcNWWk1jP4EGqetWeeWQccJjZG
qdXyIQ8ydxYFM3dAa+G86Yc1PoQk+63yhVU70JqZapi2+RAZ1UK1V/rtIDlK
EkeY+ZEkojd/MdIOYRJKC++4+JEDXzn/XpVqB9Wcqwnlu/gR+Uvud3xW2qA8
ffFLuho/kigT0b0noQ1SHi6b+YbxI8XCBhEV9a3g6rdmsZtTACFfdmue3WqG
dM3Da2fZBZHe8slxI9smKH5hmVzHJYhEk4uZDM80wRu+oMMHCIKIaZ/WoJZK
E3z9U++5JSiIKB2QO3pAsAkIEUa/C6UFkeD0K4WvvjRCxEf3jk0DQaR/nKl/
QrcRfLWzM589FkTUosV77yg1QGhZ0wlSqiBik5XEyyzWALECY303nwgi7CFu
pbcJDfBiVJ5sWiCIbA4n+/lM1cPYvdp7G9WCCJE78/rxZ/VwvqXX2+S7IHL7
tYK4p3A9XFFY31k7KIjg5UmtnRz1cDNFtERyRBCp0ZeVk13BINXV6c/6pCAy
6Tkc+ucLBt0cC+cKtgSRM0fSa/RjMPjtzb9CYBZCxhPT8vOCMJjvO/44iF0I
uXl8kLbuhgFvUQjVmCCEMC2ZKRZpYSBKzLtcQxFCXn1KVN8+jIHs9WYOSSEh
5PzpE0RzcQxODE/kx/4nhGhLUV8XEzH4///vIscf9WowMGDwf9aRcHE=
       "]]},
     Annotation[#, "Charting`Private`Tag$4509#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"b\"", TraditionalForm], 
    FormBox[
    "\"|\[LeftAngleBracket]\[Psi](a,b)|+\[RightAngleBracket]\\!\\(\\*\
SuperscriptBox[\\(|\\), \\(2\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {0., 0.24999995822845242`}}, {{-6.283185307179586,
     6.283185307179586}, {0., 0.24999995822845242`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.914242349382852*^9, {3.914242446624702*^9, 3.914242454544178*^9}, 
   3.9142428717436123`*^9, 3.9142430809835978`*^9, 3.914244412548315*^9, 
   3.914244952395316*^9, 3.9142495742280188`*^9, 3.914249722806999*^9, 
   3.914249791812726*^9, 3.9142514970841722`*^9, 3.914254247082872*^9, 
   3.91425444701016*^9, 3.914255121559957*^9, 3.914258054490631*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"969b0e1d-dfec-43e0-b590-389c6e3de039"]
}, Open  ]],

Cell["\<\
We are often interested in the observables of some operator, like a \
Hamiltonian, natively expressed as a Pauli string. Here\[CloseCurlyQuote]s \
one I just made up:\
\>", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
  3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
  3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
  3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
  3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
  3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
  3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
  3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
  3.914242659100974*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"6fee807d-849f-4451-8174-224183b35ed4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["X", "0"], 
     SubscriptBox["Y", "1"]}], "  ", "+", " ", 
    RowBox[{"2", " ", 
     SubscriptBox["Z", "1"], 
     SubscriptBox["Z", "2"]}], " ", "-", " ", 
    RowBox[{"3", 
     SubscriptBox["Y", "0"], 
     SubscriptBox["Y", "2"]}]}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.9142426200816107`*^9, 3.914242646994475*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"51eca869-2964-430f-9361-0e23d4c6b183"],

Cell["and here is now it looks as a 3-qubit Z-basis matrix:", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
  3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
  3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
  3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
  3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
  3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
  3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
  3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
  3.91424269714583*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"e36f8fb4-773c-4ce1-871f-f9f345f0cece"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hM", " ", "=", " ", 
   RowBox[{"Normal", " ", "@", " ", 
    RowBox[{"CalcPauliExpressionMatrix", "[", "h", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "hM", "]"}]}], "Input",
 CellChangeTimes->{
  3.91424266716646*^9, {3.914242699362751*^9, 3.9142427069941597`*^9}, {
   3.914242749728359*^9, 3.914242760413135*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b627eaf2-577d-49c4-83a1-60decac59489"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "0", "0", 
      RowBox[{"-", "\[ImaginaryI]"}], "0", "3", "0", "0"},
     {"0", "2", 
      RowBox[{"-", "\[ImaginaryI]"}], "0", 
      RowBox[{"-", "3"}], "0", "0", "0"},
     {"0", "\[ImaginaryI]", 
      RowBox[{"-", "2"}], "0", "0", "0", "0", "3"},
     {"\[ImaginaryI]", "0", "0", 
      RowBox[{"-", "2"}], "0", "0", 
      RowBox[{"-", "3"}], "0"},
     {"0", 
      RowBox[{"-", "3"}], "0", "0", 
      RowBox[{"-", "2"}], "0", "0", 
      RowBox[{"-", "\[ImaginaryI]"}]},
     {"3", "0", "0", "0", "0", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "\[ImaginaryI]"}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", "3"}], "0", "\[ImaginaryI]", "2", "0"},
     {"0", "0", "3", "0", "\[ImaginaryI]", "0", "0", "2"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.914242665870525*^9, 3.914242667447667*^9}, {
   3.914242701667481*^9, 3.914242707330727*^9}, {3.914242752893701*^9, 
   3.914242760612842*^9}, 3.9142428717698803`*^9, 3.914244412585363*^9, 
   3.9142449585727997`*^9, 3.914249574268259*^9, 3.914249725549335*^9, 
   3.914249791856887*^9, 3.914251497153428*^9, 3.914254247127266*^9, 
   3.914254447054587*^9, 3.914255121600068*^9, 3.914258054515027*^9},
 CellLabel->
  "Out[13]//MatrixForm=",ExpressionUUID->"5aee4448-05b0-448b-8989-\
e195b12b8717"]
}, Open  ]],

Cell["\<\
By studying the expectation value of this observable upon states output from \
our ansatz circuit, we are effectively probing a parameterised manifold of \
the observable space.\
\>", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
  3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
  3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
  3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
  3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
  3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
  3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
  3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
  3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
  3.914243039546845*^9, 3.9142430579692497`*^9}, {3.9142507910717163`*^9, 
  3.914250792118803*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"e296633d-0b90-403a-9381-fb5ce66d9a7a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"v", " ", "=", " ", 
   RowBox[{
    RowBox[{"Conjugate", "[", "\[Psi]", "]"}], " ", ".", " ", "hM", " ", ".", 
    " ", "\[Psi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"v", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"v", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "\[Element]", "Reals"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.914242777520381*^9, 3.914242778091133*^9}, {
  3.914242841500587*^9, 3.91424284749091*^9}, {3.914242901959298*^9, 
  3.914242959282929*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"e8110feb-07ff-41d9-aa40-8650b5377d9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Cos", "[", "b", "]"}]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"Sin", "[", "a", "]"}], " ", 
   RowBox[{"Sin", "[", "b", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.9142427783710403`*^9, {3.914242844676086*^9, 3.914242871780034*^9}, {
   3.914242903174684*^9, 3.914242925351899*^9}, {3.914242959592216*^9, 
   3.914242976650691*^9}, 3.9142444127898493`*^9, 3.91424496184903*^9, 
   3.914249574485793*^9, 3.914249727406868*^9, 3.914249792060306*^9, 
   3.914251497517486*^9, 3.914254247320331*^9, 3.914254447261478*^9, 
   3.914255121809752*^9, 3.9142580547233353`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"387bfe8d-f0bf-4440-a9f9-13fc75a1dae5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{"v", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Pi]"}], ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Pi]"}], ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<a\>\"", ",", "\"\<b\>\"", ",", 
      "\"\<\[LeftAngleBracket]\[Psi]|h|\[Psi]\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914242963424469*^9, 3.914243022053781*^9}, {
  3.914243090385921*^9, 3.914243117577961*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"e9b35077-cee5-4230-997a-21ba94009c8d"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
+tryhL1S8WTrdMOyKPnEK9yv+58+jjwRhwM/nfvDoIaanQf/Oh/m3nXkhvgc
9PdLXNy02i03RX+r/td8XOkP8BaNdnS7bssN+wh8ggc2y+nITeWZEt9XN+Fx
R26gB5+uq45HOXIz7Uw60Su3K49A3A8+RV4/bHbgoloPxWd2ma3hdl6v5Iuf
o3w/Tkju45YL9C591lY7mtj5Nb4H+mGn/0o7QOlJgMJvrmoV6PAx/VeAqFS0
ea6RWt0S/z63xObSdl7PTL8WIIqUmxGu1RXVeJ+Nn3PEkQOxk+L8ozHXm7aM
UXkc6M+9nXz1uqa3oD97dJBv/0XIx2OVXv1ycmZJZ/ymfwwQ8xr2LqGdcyl6
r+dH2zr0pt8MEGc/vL6q1z9Bf/2Hxbv6HXD7HdCvHFp+vlbvVfRHWb5fnPkS
+yzueeYe2sSeL/QH9NPzld0Rqekb6MtmLTnemS/0BPTetwtlX26vI/Ju0Ke+
XLyA49/NeMxPVD+0qoZTV4Q+gP5O38RsjfJfAQpP+mbjGcdP4XuwNy0zVGWO
34RdAn30qQ0Zqmj+Ed99uvmrfVB1EtDPHtS0qjMvM97zE+9r9ej9o1ZfVXne
devici0uAv3rRydEa1XHi1L6uOxJkpGOHzTjQz8R9yzlT1odUtFHrp/snAso
fcA8LmR3zRf2RMWzpT/kZJpfBv+Ei77uX1VvAf1rv/kn+tnzNeNMPzFhwc5i
WbU6Leg7VxjUbbEWj4F+x8Qxjd3n5kFqXc77GPGMOk//oXyK6o1serNuY+eb
51zxmFmH8RVdErU28lCsT+ECD+Y1U3rrrei7TnbFY/gd/14g/Oxv+1U9OVbp
hd/T5m3c+WmUwk8+dcVvoAefjkcihzt1crOe4ysGxOvjj1T0gy6lu+de3yg1
rkbZjDhT6W+PPD/vaOquV6t4PO1tMy+GHDbkLPe+ubJXfoq+3GBDDspvDxwz
NbWj/9jXKi5+4ZKDWRey5fPeJQfQg8/lQweXO3Iw60W+YligK76Fnqh+gzMb
P+n7HeNfMuyvV7/bekXyFNH48ae4gWo/Bii8wInmZR0c9FifXm0uBdp+gdSl
bfmc2Jizkr0voD+g37G8ynLHnpt1aU+RrEKyyVqeoujn1S7/o9uPu+PKCaV9
zutxNX7+b/bOgcl83OevoG9b/VPzZZrdAH0471+tjxaHgD7B+NLDnPma9W1P
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
NT/g0APIqeSKQuN0vwz69BvHJtP9Mujn5JrGdL8MfOm6p+9jNL8MPs+a1ug1
RfPLoJ+c9mqE7pdVnCXlAPsD+r0VKwQIzS8D948aGjhR88vAy9Q7ceCQ5pex
blgXYq/4m8MT5+t+GfSfGg8UvTS/DP5Yd2J/GPSE2Cv+tuKnY4c1vwz67+gn
Kzq2TuoJml8GfrV6YM3Dml/GT+wLYpf4geOuecH+4N+togtj+2h+Gfyx74id
YdinxC7x5tV2lDqs+WXQU/sA+v4bh5bV/TJw2CWzru7Nv5P3cdglrDv4wE5i
vYDDPkPOwHv0f8B0vwwcfsGsk3tz5LmgU/5B+iPIEzj8IMnTOfysWTf24zTf
R14DP27WY/046gmQA/KCJeN27liv+WWsG+IEEq/ylD6rV9v6o/wy6Ess6FJt
nOaXwT/sdBFf3S+DHvEJiVf5Dq8MflM1vww+qHtgX4AP4iISx/JOB7ft1/0y
+LSpcarURs0vgw/iMRLH8vbJXPNV+a2kP5VwTuUJml8G/0InXfMlcSlHHEji
WF5rSPVeUzS/DD6oC2G/4P9DXEriW1603JhmUzW/DD6IS1W+JOlpPAx+4d7p
Suh+GeOKKTp3re6XwQdxOPQEfBC3Qx9Aj7wAfgj4+d1xJ/tofhn4d/IRnvbk
6JK6X8Y412TecEL3y+CDPAjrCz7Im0CHn8jL4JeBN5yUybO/5pexz5Ankjoh
R55L6ooceTHpQxbRVz8G9by9X+Xp+Jn2ZmDTqwuuqn5H9a7R20ep3P3t7nU7
NP7OK8efon6i3gtqVvFGW5s/qceKx49WXjlv8yd9U+LBqwSvnXuI0D/QHzyZ
Ybqbv7qvIXLmHb7kp/JxpF/RT0xPcbCi++90qPsXIsP7RiFN1T0gdU9HLClc
Mbf+/rB6n2Tqht8L2fxJv5y43K2mj/OeMPRAff/c1knO/Thy/0UkT9SD+at3
mPE+qq/oGuW6n0XukYms958v0t7NVnXITY9c9OQelnjbu901bTzu93vS9lrX
omWMWj98/3PyfS36/+ddYk/RZc/FFc58zT7PeKv6D28iFvznnWFPseXHwKru
+4/q3qIVW/zUnf++J+wp/MqsW/2Tm7/qd21Tosg/Y4a668tYn1y9uq1veOOd
OkeA3Y34GH8kJob2W0ZZkeubVRjwn78rFGs9rNYku/tdJi9lv38qMuuws69J
X6hV2ueHgw4frCuNb6EP367Hqvvv7Hb+MXuraPsL+2Bbrb3Dz2r7C/Sbpu9M
GqztL9B7hnUpq+8vN/9To0pp+ws/B1rVP53Q9hfob0479ziLtr9AX+TMisjJ
2v7C/LBepE+bQ98gL9BDH8y+em9+c2Ounem1/QV66Bvp9+bQf+wvdY9N6jN5
d8WOc+qcyvDf/cXTZnHdUzP7de14Ru5fsr/41DwuevL+D4c9wfqqf5f7nbzr
xWun9A3tp+0vdf9L2hPsL9Cfmvj1npHaX6CHvcL6gf5kxQxbe2v7C/Swh5gP
6OfE9M80Sdtf6t5Vr5oJ9f0FP1VjfbF9+v7COvBWmXbpf7cLfDbWLzmisba/
wOfRk1N79P0FPhP+vlV4kLa/4KeOH9b/Ppqvwuv8o78LHan8Xrdb+rvTkSo+
zZxgufZ32dz3DmveMvgrPF9y1/4l/Xvi4cfMh57fvmORcYo0zfR3odU4Bfig
bgU+AxeVSL1T6/cAvu366vzOOSn0E3wwTtQ7QP+x9Khh2VVfh5KDwHwR54D+
t8HLymbX+kCA9x1b5o67P0fJTZjyjFDnFc9edBn8l9bXCvxAopUHXtjyIXIW
ATkM+Sgc64j8QfUHlp8fuUPrGwH+54+XZjrjhH6DD/REnaNL+kU7rC9OfwjZ
XwL6j3VBXDlldNiK8OnR9BxfrDzTfXsRdf6u+tUF9h3kDD4Jzn+u4q4Tqn0n
sK8xX9BH1+ub0ZoeTc/xxYICp7sVs79L+tUF7AniPPBZ81NIJadeBzrMG3aM
9M2KW0vS7nf6N0h/iMh0aUm4u08jXtkn2E/SHyuWvb1W0umLIH0XIqbFjbIO
H9I/LP6u0qi+My9yfidatj7Wtdh/+4RF+6OvFzryJ+d6YnKnHr5OPx55h8SC
X8M+on4Zfgr0xG+q/XG66Mr5r219hhxAb/pl/+/5fe7mb/h9da56rEeWxa9s
/qTPnAHHegEvu6xD6hgbx/yBN+wS/tHp7yJ95gzjx3oBb3D2TvrXbv4Kb+3x
cVhWbb9g3ojHsN7Ib/qOLJ5C3y/4DtYL8wcfxIGQM/i8L7Ts/gRtv4AecSb2
BejPt8058YC2X/Bd6BW5P8UQ30L+4OOzIuLOxP/uF464mtxT4NBn0q/Lof9k
v3DE8+Q+Asf+In2wHPuR3NfgsAOk34NP+WfN0qL/vZfBYa9IHwjf+7g6K6Lt
F8gJeRbxUxz2lvgjDnuOfaTuk5r5nco74ReIH+Gm31Hvx3LklcQvcPhHYv85
/K/KwyUfks8qPvDjZh9dGnGEze/v9C2Y9jCNWNEvZIfTh4D4DfeEEOeYfXRp
xOccM0pM1vocgM9LdbG80+dg2sk0YtCltwecvgjEb+p9AhmPkXtJAvES6ir4
eXX7pMnOeSipkwjUeUidRJTPtbLO25wJFI7vDI+rMaP0ElVHUniiJ6HPk9RS
8Zzij/oPcHWfNHfE4GGRidR8QP+s0NTFsR3d77HgO3dudX3dfIoPN+vkAeJa
zsGzf41MpPJq8LnbvXzbmYcSqDoqcNTN1Dmc/I7/lBtPbD6qLgR8zsL0sX/m
wz1hVRcS0T7T2vV+/gn1dEV/aWKPxQ4f0GPeZl1I3RcTiJNRX1J9AgfKf3Hq
5KReJFCHJPUikSzUtV7AMZ4/v7jWyzwHDBS5Xycfl7SWym/V+Tjqk8Ah56Kh
T287csb4QX/scHAtZ72AY31G/PxmvbNeZv0/QDwKbZ7PWXfEgeAzzXNh+VmH
lL4pHHVd5KEY/4sxH+s6cjbPH+19Mce1XqQ+Jvpe3zavr71eZl99oFgysXZR
ezyKHvKk9Ubo18Sdmdvd20zr//5iwYVHj47ed+8j+AdSd1V4m+oPRzt9nuY5
jr/YPjDNr0OEO/4D/niwRwGHP/RW8THrxioumFMj7mGy7u7zMPA5vqnQ2Lub
6XmBv5jye63/OfyhP+BD6uQq/pzxceN9Z/zmeY2/uD7ENX7zfMFf9NuzcIPD
H+sIPqTOr/A3FfXxxyq7G31v+dCbV9z3N4Fnn3X0Tw1X9THk+6R/W/A2OXNu
tb9Lzl8EzoPI+YvAOZRpN7yEv0+O+U7frHku6SnunO6d5h+3PJWf/LlH2S+O
fEicI8g5jqJPvynbv47cQA+8w7rR2511NO2Jt0D9hPSfi+lzUyzd/DjKMtfF
Q+Bcj5z7CJwnmvvOS2yo07qoM1/z/NRTzPnt8iJN/xWev4trviS+EuQcTdE/
era/oSM30AMfvbfndGffYT+q/oSfV0/oZ+9rs24Wa3XLEd+jcyt3/xbkinNb
4KAv9qFme8cOID8EPc5tzT7YKOvHkbeTLm7w2jL90SsL58jY1+BfP0vW9Jvy
qXNJhf8e+2GYY8dM/IGFOpt5n/qVNeBsvqCBbRKSd2MeWKf614vN+8ZdDwQ9
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
cu5s3ZZ1DODvHLZfrPBPX8z7Izg3/2HetbnOeTE5X7aqynoCcBefM+Fxkg85
r2d1JT3whHL/Bsu+bnL+zqLkOIF7SPpnpE8b9/wSbZpfJZmmb7JfgsfJfAf4
WBnP9yD9z8grf7MTN13fZD8D3yvzC+Bhkk9G0ucs+0/4xiorbg3R9Ap4EdkH
Ahx9XCcWXx90R9M32a/CC8t1B55Yxqs+pP8Z59cVp7VvOVTTK9mvwtfL/hbg
A+V3X59b1y9S0zf8vCn1HL8nkt99TfqiZV8Tv5pr+996nxL6YL8UrZTRXhdV
V5H2TIQX+/GIn4ajD/aX+ICZzvkv7D/sTFNyDgi7lEnGG7Cf+O7tImn+5/CH
/Rzm6tcSx2R/F3D0TZ2W4weOcU4u1GJAMo0Pxpl/l/eqT9o4Yce+yDwIOOxV
IRmfk/49sanpwz72/qL6I5rVn71Z71+S6y6eSPlDzrKvT7ST6wh5yvUV52W/
H3D0L4VKPQEO++ObrV8L224oHPaqdoLcNZ3+B8wL4/lE5os+qEEkf8Q4K3vz
c71t/kRvxdRN23v7a/xhV8/J8xHgsIe94017mAj3reS+gD4Mld8tKfcX1hHy
GST7J4E3k+P5Xe5f4JDPolnpPjnyAV5YymfyIZ9JjnxIP4zYKvs5geMcZ7S0
M5iXtEviCJkv+qmayboK6YcRr2R/KfCrkn8CaQ9Jv641J/uldI4+m/WlO9b1
/Kv66/1+oD9bdHqAs4+I3bbOSzuMcSaQeKI5Zj0zFalvk75fq0uhtV0d/qqf
U44ncOqWdh+1/SV/hieQdWbg8dIf/SD5w75B3rXzHTjo8Cd+xEou/Q7xg6U9
JX9lx+S4Gko+4Fvc1V/NZsh+aeDoy0ou/SZw+ZO1k/MFLvvQ2HfmW/qj9Kdk
viwVqSdL+bPo2d+UP/OR9MRfl4Y8VX1SjvOKXHfoVTU531Syn1ztIznfqTLe
AG5JPtOlvgGvJecbKfWN6D+//m39572l/pP7Any13I8k3uNj5X4kcRofIP0+
1lfeI+AryrviLmIP+SZ5v4DYQ+4h4zpib3lxad+IveULvm3f+LVv2zdO7SfG
mUbaZxJn8grfts889tv2mVP7KeNJnk/GM9CHQPndbS9d8TCxhzznJNd9DWIP
+WgZbxN7y1dJf0fsLW8r/R3pH+a4PwIc9cNmMi8g/pc/+bb/5Rml/yX9wzxK
3mcBDv7FZf5C7gfx6TIeAI6+tR9lPAD7CfprMg6h97B2y7yJxDm817fjnP/U
VWScww/JOAo4+uIQR8EeYn7vZTxG8jge98K8n477Ow8HDNr51Oessg9zJL7K
c0PPhzZu3q9JLhLc+m3WvcMeqp8Q+IbMhWLv2jjm5UPiJcgN/c8j6lbK9dLm
T84RRAV5PxHzgh8clztVrxibntTtRYy8L0nOc1U+Qs5J2TNyzot7GV0kf8jh
g8TbyXGa9R8vXujAh+T3NTkAD41Z0fueJodxxO5BDugLPSjlTPqC+DZ5Txxy
gD4nHOhaL9KHw3+R99bJ/QvRKWzA9v5b3f2o6DPsWXp47p/Gxal7Jejf+3LL
VZcm90HEXvl3b4Gjf2yPxMn7LaKCrDOT945EgvMrkjj3blDfkPc4BO5xkHsf
4mHdrQn72eMHjn68NCeL1s5vjx/1W4wfdXVyP0Xg7xQDx/jRHws5Z5Tjj6/h
qvMDx/hzdD7s7dw/IvdoRKEvf+bqOsZdJ8d9isjb4eF6v66S55Nv3q8R2WtP
LNnF5gMc/XJ7zzd74PTTqnt5sp9/hLzXRu5DWZ7y74MDPyRxb4mTPnCRRp5j
Asd9uvbtxFLnvg/GL+8rCdxXMuvwXiK31H/IGePE+Sy5b2U1kOfpwPEdnLOT
fnLRQJ4XAw+R49wbmXiIrQ+kb9BLFJD71Ny/MVa/Oz+nsddLyaea7CPK6Gme
+2OcuBeG+d6X77AdlvfIgG+Q/ULiyvN8jv5jHdHv9G++wnmdfgbMF/1L6DfA
+O9J/onkfTfgGyX/k28KZHf0U9V/jP/c/SEUJ/cZWaefjl7uq9kH9GkMi7y6
Or9mH6T+sM3ynh25X8ljDrvulRD95K8lTt7XYqGyn4q8j8eWzv5h+3HNPsh7
kQz3Isk9StY6WYLcfTT7gL6RugNmnMyn2Qf0b6B/jNz35AfkvRiitxz3ZaBv
cn3ZG9nPBlzqAysdUnbTCc0+4F24BZZnYt0+4P5F8xdNbuv2AeOp1+ub91XZ
AN+b6XT7gD6KX6++9Smh2Qf0/z+W9/jI/WKewsfVp03sPw+UOLkXxqfKfl3g
uD8Y5Z0hY6hmH+T9X477v9gXeJdujYwTiB3m6EMm95d5W9lPTuw8R585uV/G
68q+aOAYZ9qB7d7l0+wDxvPlpiueIf6Rr1mw8W0XzT7gfLbYGLPvHePEPWvM
F+/ydZP3soFL/8Lr7N7XLJtmH3AO++72eF/dPuC76LfH+KdJ/gXl/XHg4F/7
6ue6OWz+5NxQeIz5MNt3ZA9G4luRt1u1lx98zjJy7iAq7PzRL2sLd/yp+OQR
cY2H92AkLhVlRwxZG2vzIecUwmuHiw85Zxe5dx8NWJXInc8DP79wTkq97xrx
JH3nAfTP90695PAh59fi4uwcC/X+EPDBexTmuwS+ouSz5m08tX5jxJlv5DsY
5jsDvqKUpCd9JiKrfJeD9PmIFOGbpm1I534nAXgEufcHfJbn68DVidz7Hfi2
zZl8nH4eM96Ot2aQ+3qgDyD39YAvic1T15Eb6dOzhOwTM9cr2oo+/ssk5946
Odez6Hsssj/N6iD794Dnlnzy3b3WzrnPS/5+qIV3Y0jfJvPokLnf5qE9iDzv
sEuT/yz6StNb0Cep9ylBsKa3ik9whmvxg916i/t367xvvYjS9Bb0J2q7+JA+
Z75Ayo30LfN1cl1IPzmn7yOBfqpcX9I/zH2knpB+bI53nIje8oFZq7JPWn8R
8oKa8v0oord8gKQnff48sXzPityz4NflPqL31/zI/TXgr+V+JPcaeKTc19Bb
nHs+L2veOwP9z+TeGfB80m6Q+1O8obynAxz30HcfCtys6y3ydPoemrwfxP3k
vSrgZSSfbfcGjNP1FnzwXhx5z41PXOvqT8B8geM9N3I/XZT06vFH/+jHFjl/
EdM9D3oI7f6pem/tiIs/eXdF4F0U83wznfgxuVn/lPfcRaap9ZsGanVOjOeM
vP8OHOcpedf7ZXXOU8j7LeI3Ml9898wrs86Je+t5Sd0D4ymyMl/eAbYcgOM+
e9jbN95HtHt/+G7gRNd3yfswAu/PAMd4GkgcejVSfnddeJ/0+nzRj+Eh3/MB
jrxvjHwPATjuuafouKFE763uOir4XJPvCwH/KPmslO8wAAefJqN6PnbiGfO9
HV+B/U7OGUXxK1EjnfokqX+KtS2O/uHUFc13dXwF7AA5NxQ7CswKdup4pE4o
EjzK7OfwIeet6r04UlcRVnDzMfEvPtNzVTFK1mlJvUWI7p376O/PoM8Edhj8
aV5D+rqt26lcdp7U863mv9erOdjWK1LPt6KCL9S9bOsV6ce24EcwTvpd0hdt
LWvu8lOkrm41LDr99CD7u6SubsUlW1bjXLX/vOvCOkh6cu7P5kt6s98+nGWu
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
E4k=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxMnXecFEX39Wd3Qs9M98x0r2JCERUBBXPOYsaEYhZRRBSzqBhBCSImVMw5
ASKIWQwoICAYQBGzqKioKGDOWd/z5dTz+b1/zNbd6urq6uruqlv3nntqjd6n
dT+1OZfL7ZPmcnml28S53IGFXO7fai43tZbLfVrO5c5vyeV2U6GNm3K5J1Tm
t2Iud7jK5FX2D6VNOvFwHaOCQ5UukXhtPZd7tJLLnaBz+6juHXTOMUqP06+d
ynVq5HKTVf/DKttBeWeq/EOSL1N6ga69la43Xuc/ofMOkLy9fgfpt6Xqf07l
NtK1t5L8jdq3nOSS5OmSJ6j8Hiq3iX5HlnK5EWrf7pKf0rXG6by1da1Jkj9S
2fPUtot0vbG6zvGST1L5kSrfXeXvV51TVOe+OtZP53ymNj+oNt+hc5/Tuceo
/DY69o/qfFL/d1Q9B0hOdXyW2v+qzj1Ex/vql0l+WWUaqrNJ8jOSV0pyuTm6
Vi/lHRGpb1X/Zzp2hK61me6hh9Ij9Vtd+R103ZLq30B1HajrtpK8teSDJcdZ
LreK2v2myu6vvOdVx35Kp6oN0yR3k3yGjn2heh5WPfco7279tlFbr1Bea/1G
6/8b1O5Jaldv1Xkcz1/Ht9bvWZ2/hY4v1bH31NZ91TdPK29P+lj5T6vMn5J3
k/yp5NE6d5R+n0sep/Q+/b6Q/L6ufZnKPay2T1De/fp9qfz3lD9c+Q8of7ru
u5fknvzUJ3vqvvop7x6V/cyvV26Byl2h448q/VDnjpD8mORmHeylNnylMh8p
/2rlP6H8h3XuQwW/k5NU15P6HaJj3+p+v1beJyrzsX7X8I4o7dPk/NX1+1v3
eZHyP1D6oOpYrDx1a+40/VlL+Tcq/xHV84765jj121E6/1LlDZd8na5zjX6t
VG6u+m1FpVfp2JG6r4N0X2fo2KEqf63q6630Nj2jW5V3i9IT9P99yj9f6fs6
9zCdO03nrid5U7XvC13vYZV9QL+9dexetaEvbVZ6ufIu0S9Tfnedf57Ou1Xt
eULH3td5fSWP0TVGqcwopXfrt7f6ro/67EXVX9N5w3XO7fqtIPlKpTfpWDeV
OVbpdfo/Uf7FvIu6jytUzyT9f5Pq2VNleqvMparnR/XXcKXzdL+v8g6o3afo
nFZKX1E7nlYfnid5VeU9q/POldxbv4LO+Vb3cr/KrK5j30meIPl5lRms4yfp
94DOHah0NR0fqvR7lWnPu6r8Yfp/beVPlDxccnvJHfX7WccfVj2rqL1Pqa7+
Ora+8n9T/qPK31/XvUB5bZT3uNqc6d56q92PSC5JPlLyhjr2u8o/pvI38s3o
t6n+H676Mv1u5t6UXq70LP366Jw/dHwT/Ubo/1+UrqdfpGv9pPQh1dNNz6if
5I56PkvV5qPVlzN4r9Sfx6iuE9WfD0l+UO1+UOlslVui807Sc7xK5z6osodL
/kzHu+h6Z+v8J1XuKf3/hNKn9Tte9Zyqer7UffTR73qV+0Hp6frdJPkV1XG6
zpujdI7O21R5ffX/PMlbSD6B8Vd1/KJ7WEm/cWrDaYzbSmfqnD46/rzSRbqv
kyW/LPk2tW0y8wljrerZXvX017EfdI9MOLNVZivJV6m+9SSvxnuka5yt/69S
PT2UVpV/FO+b5Fm65x56FuuqzAf6fwWNny+qzh4q+5ryX5b8kfJv0vGt9ftO
8gGq/z2lR6qOnSXfKnkLrqvf32rbE6pzY7XzcMnLqZ0XqK++17kT1VepxtUO
6p/3lHeYzl2oc4/VecfpeufqWq2VNjOGKP9k5af67S35T9X5uI7NkXyw8sao
TC/Vv5LS9VX3x8qv63eYjs1TeqjSAbrGNzr2mK47Uucep/yG8sfruteqrxZK
voKxV/l/qf7xuv4BTR5X92e8109dkDtY+YuUqtm531Wuq/J/U1queOwaK3k3
1XMoc7bSiDlEZUp8y/r/EskdKp7bl6q8mpzbXO36UvnL6fdH2ePwKKW/820U
PO/fonP7KV1R58aMsTrnZP1fljyRd1jyzyo7Rr99JD+q+7pB9/W5yud1/Ogw
bg9RwwfrdyDPTL+e9BV9p3KHSa4o3TC2DvCV2jBf/+/CdyX5Y11rQdHv2CfM
RUpPZz5S+bskf6my1zLHSm7oeKuq52Xm58VKFyn/XJVvqfp9471rZh5T/lk5
9wFl6Icm5S+UfGrOz5Nr8UxX1LkrKL1D6Qi16WbmUMYKPd+lKvOHbqa93qsl
tE2de6GOnaEy6yj9V8e+Vv4/StdSmS8ln6Qyq6quNVTntWrPLzr2hfKPr/lb
pAzf48oq01rpnUo/0v2eqvv8VnUernOeUv7eSpfneUt+XvkTm6wvHcwcrfyn
Je+jMl3Vf89JnqzfHpJ3L1oH6sL3y3OV3K9gHeNIndtd5zwgeRfeHx3vrt8L
6Dr6NrvrhXxRaS8dqynvReYeHT9Wvzf1fy+lRxatJ51Z8LdwbM51zwr1r6P7
eJ9xQL+3VN+bkb/5kcpfL4wDPVXHEUV/b3zr05kj0FHVV4t5Ruqr5mb3+Wo6
NrDs4+2Vbqb+KqieTZVeqLSk3wY6NjjoBugIryuvqN/66Dmxdd3xZesavLu8
t6313bbmXVD5PZqsD6ELbVz1+5tH18xbR6H8M3mfq9NyI8ue63dSWlDGdzo3
r3T9Zsv36tjK+n8V9BrV3051rqtrjFa/ri65veTbJHdSv/yk8g+igzJ+KS2q
/GN5twf1vEX5yyl9R/nLS15e8ruSf9R9/cO11IaT9dtc+XWln6vxbyn/M6UX
NVneLKwV3pa8SPnFqudW5til+v9d+lrplU2Wt9Wxq9SGT5r9HD9kDJS8F/Xo
ue1VtJ56qq63PW1UWq16nmW+vUr/3yV5e6Urqs0boHtpvltf6b+qZz2lVzdc
50+67l2MpZL/Q3fiHZG8i85v1+zv607J/VTXrkpXUDqi4TLfqvw03n/eS/2/
ndLH+Jb161H1d36M2nO5yseqd030WfXdI6rjKLXn+5rb34R+KnkHyQ21par/
N9F5vVRmpPJ3U36m/D9rbkNKX0meqHr6qcz4Jq8RunGMOYbvUce2YF7Wb4L+
X6di/WIVpd1V17rK30/pHvq/qPxp4d1mDK0rb2VdY3ulR6v+e3kRGBNYo+m6
T6vs6crfRHXcxzij3/Iag4/X+zRW8icqs47KLlG6L/cmuSfjkMovVZmBzdYn
0AFe1LFZyn++aD3mFaWzi9YlFmosOEff78eJdQ70jbmUV7v2QfdW+rbKvlW0
DvGe0neK1hVe1bFDlT6ndInyvtf5Q/T/KXoOA3jH1M43dWwHpT/wrSmvt35v
sb7QNd/Vbwnn6NxB+sU69pfKX6j0baXv6/h8/b6jjPr8a6WDlF6k3yCVeUdl
vtTxwZJP0++G2PPbcsr/QP1SVHqD+rCqfluu6LltG7XtmybPB9dJ3iys795R
PW9HXvuhU8xt8hxwvOpokTxH7V8N/ZlxEd0qtv7cm3ZVrEefiF4UW+fpqfQY
PeuflN9f+aewQNH1h7D2rHqeOIfxWc9siA79ovf2frV5qOSDWGdIHiB5L8m7
MFY0eS7ponu5UPW3Vf2n65521bG/mRdY47D+1nldVeY85gVdb0/ln6/8H1T/
liq7lPdIv9N0fNugj+Uk/1OwftMiuVG03rCV+iNWXX/q2L56j8sqv4bq+U/H
m4rWgd7T9dZUFZ8rfbPm9VlJaUXHo6J1jC0jKz+/qp6vKtYHeyttreMrF63z
D9M5D6iPj9TzGqt7e1B5u6rMGjrvZJ33qP4/V2XPol5d9wuVb6Xjg1R+19Rz
xOpqW1fJazJHKr09tt7amrVy1WuStSS3rXi90qL0w9jjynTJnWOvnT9XO+5U
vz3P+KbrbFzxWqGk4+0bHgvKNY9TjBXYHVbQ9W/nXrFlNPw9r646vtHvOvRA
pSNUZlX9xoTxtn2QG3mX2ZjxXfL1kndkTatv8hP9P01tPyR2fitdK6l7jXOM
2rBlxePoLipzWOqxoS06C2tnyYW6x27GQOwIF6m+in4jdWxK3eNKUWmSd/mN
VC7W/zvnXP8K6v+PuDf10QY8Q8ljJbeu217RR2W2q9gmUVEbd0RfyXlcQ7c9
pMlr8wUqt7LSA5SuonP3zPlc9L5Pm6z7na/2v6Z0Ox0/DP0QHQqbTN7y7sy5
ku/k3ZT8c902klWV3t/wOFmVjrai2vljaPO0xO2frEb8UPczWk7pj3XXs0Ld
dq9RTW7Tc3XPLcsrTXXuUh17seo5aw39btGxmZnXLMwR6ObIzM0T+Cb1rq6g
9NGG9bLlVPZQvf99GEP1/9MNz6utlD8zcX/Oxiakuh5RfgfsJyr/QWSdaUhm
3W8z5TdU/jeVn6PyB6u+M7Ch8Iz1e7jJdq6ayqyq+0+UvtzkOnsrf0/V93Xe
bdon8vw+Q/IDDc9ddV2nm/L3V/6L9LXkT/M+NkPXayt5H6V7KH9R3t/nucyx
qntNpV81rCNuoXYeWHXdvdSGK1V+jNrzS97reNaV6HJPNqzDLq/rvqv0Wf1O
yPl9Hx/m2c30Du2U8zyNve2mJr+Xl0puCc/iu7rX9zWlO6jONyTvIPkZXXeS
fieoj6bXXf9GvHdF69NTubbatw5zg9KndG5H1bmh0p/yPo6+vZ6O/8t3im7E
XJS3Xv6S7nFtyfsrrej/Z5q8Xj2BMUrXnKT/j049bq1T9xqF9QzrlFcKnlPO
Zs2md2Wh6pledX/f2WzdolH3c71V38jdzZZ5vi116xK3M9aW/CxYR9XVtlMK
PrZS3euIO1Umk/yXzvteaV2/P3PWqXgXRjd77fFg2XaaFdTPv9Zst0G3nKj6
Hi/Y1nOw+mim5EPV3t9V5oec9czl1IZ1sI+prndV55lNtqFMUtmnC9ZBV9Dx
t3XsdB17SnlPFnyN5ZR3cZPbx/h5WZPttn9gx9JvV/3/a3nZtJnbOrY9cvcm
69DnBv0Zvf6F1PbBT2lXwWvPj1VmqvL7qcx9audQPdczJY/HHqx37lzJEySf
pt+aTV7fzde57xX8/4p1t+UFlV1PfXt0wbaJqXWns5SfhPcLvW1pw7bZLspf
TWX+y1nvzdd9/HrmxLp1yBsZA/PWxSn3ecN99p3OTfPW6XlOk1X3swXbp35E
P1CbZ6qO3/V7QvJrSns2/F7tTr7kx9HLeEeUtmmyTtC55PeWd3ignkVb1VmW
3LfuMqx/98s8XmwtedOG13pb0j+pv+XN615Ps4ZnTb2rysxXuhM2b8mvSN6W
NbLqrqpcW76RgteY2KTubfZ3wjeyfsPf16Z1rz+ohzVIm7rLjFL/HKE236K2
Tuaamb+ZldSW7xq2VY7FCFJ337CuYU47n/cFNavu9Cv6R+/tC9hD9P501vPq
WbBtkfluUJPXM5Prznte1ynXncdaZ3HDdsIdlL9/GKe66PiGatdXYc44RGUW
Kd1N+T9LfhB9W3JXyQsYryQvyNwXK6r97yh9u2DbQbeG+3MXlfmetaTk8bqv
X7GPY6/jXW14ftyVe5L8CDY6yes2bC9IVH6k7ush9dff2Mh0n/1V/8pKd1LZ
LvqN0T1cjp1U5UczfkruxBiS83qVdeuH+s7ukbyO5A/w16iuo/TbBRsNY53S
m3X8TNXbRvI1kh/SbwOV/0TlH5C8Pt+d5LNVpqPK3Ir+FvtdeEv5UyV/z/ug
/N3zXv+z9sdmzzd3dc72FPrmbZUfoOtuo2P3Yyehz5pt495Cv831u0Plx6qe
g/L2S71dtc77g8pPU5/spz4ZqvMKel6vqUxf1Xtzs+ch5qDTyl4PLqf0U/Xp
hcr/Qf25ddXvRk35TxQsoxdhexjQZB13nuqrhneuqeRz12J80Pu2hq53l+71
NuW/kbdN/JOG7eeX6/jpqn8DteNu7Ks8i2bb9NvpnLVV9j1d9xOV6aC8W/Av
KO3AuJGzTQHbwnxs77rHHrrGcOaTkq/L/b2l92wmc4juZUZsfXkotjrd4zmq
YwPlT6h5/llf6Tlq47Aw3r6h/+ehL2Bj0e9lyTsrfUPnb898q+sOjmzLYo15
RdXrutexVee9LttR5V6PvF5jLfdXGKexvWxYtY00j+6teldS3gfqmwslS5XP
va30b+baJvuqdki8RrxA93FN1Wu9d3XuW8xt2Ekw1sS2tf6ntv1SsM0Ee+ag
oHOie2KXwCab07nvYXdmnlL5oWpn/7zXrV0SrzWHqb7B6stiwWvS93TuakpH
6ryLWH8U7I+5QXK1YB/SRTr2reo8VWlB1/tD8vnYkCv+rufpWrfoOjuH9dqJ
usZAndtG6V6pfSg/6byEbxdbk37Xqv5ywb6q6ejKquNEddIgPcdRPE/Jb0T2
6eAP+1ztXEXp1fgLYvuaLpc8S+/GTHR3XWNB1X6hn/lGsC8p7wLs2Pr9JXkg
a6pgW+PdvlHl38BOhZ6j/klUT6R0TMPz+WK16xrl1dXWmn6fKv8U5pHM+gR6
BevwSG3vIPkZ1XOpyk/Je715neSXgm4wGd8B9vaq5/ljw1yPz+GMJtva7sIW
r/Y8WbcPEb+2biN3sfrhBeZU7GXo3tgO1T/bp177b5faDog98CClVzW7Xup8
LNjLdfncX6rsZ5X/Q+lY1XOjyj3DOqnk+lkX766Cb0qepGs8I3mq5PslP9Kw
baqR2RZ1teTtVOeMzHovNihshVzzQL5NnbtY5Z7Xue1U/x+S79H11io5H5n1
B+M8NuGNlf+P/r9P+bWK/QDN6tdtde8zg21/hMpMD7b9yyQ/F8a9z8M6/TCl
P9e8/t1TfbKNzp0Rym+ael2/Cb7u1DaBjVL7N45vso2yOfF4R2ftqt8JzH1K
b2nYzllRulD1r8baT+klzEuq5y/9nilYx2ONzHt0qeR16YvUvrl/VP4ufDt5
/3+D+uUKpZ10r7tVfW5Wtj0Tv91/Kt+5Yp859j7m6iFNXqvfXvIz4rvaM7Fe
upfSf2u20R0A9gF7T972hxtVfnaQ0eO4LmvaHfGT5m1H+EL3dg7PVM/z65p9
hr2V3lry/ILf9AqVvzncw+K67/Evlbm+6ratyThZtr1xRWzMqvMm9duz2GmC
/Rkb9pJg3zsSm2Vqm8w22CeLbiffQJui/eP4Zwco7/Vm+2zubviZf6Zz66mP
086CrtdWdT5VNb4A/RM78BDJUdDFsS1jJ/kFm3bFflTsMneWrN/ju0XXZ93L
mjcL+ir25ztK1vPx9X7B+oWxXt/gO8pbPtT/XOL1wj36vg4oWNdfyLxfNs5k
N1KV/T3YD4sqH6negtKRYZzBjvdaattRF6U3lezf5VstJU4Xqe2X6VlcXbKf
+NG8r8U8h62IeRId4D+14zpsECp/Zcn+bP6/FnuL0s+Uv1LJdtg79P9VqvPe
krEdrUq2yWJnKKW2nY5jbFbex8H+8K/q+Rv7Wmz7GX1Hv41QPbeU7M+Odc8b
5uzjvk19dpvKrKS8a6tev1yqe7pD/7/G2IUdVeeey3pPx/7T+XsWbJvF2bhP
wbbZxbreWUrnYk9V/hr6LcR2yzqIeVrp36r3S+V9g94Ree5+X9XsVXDdJ7GW
UP4r+l2jvItVvivPTO26rur1FO0ZqOMfBh/fmWAolG6H/TKyrZh7oG8oj225
oPxuwe/8Ke2KbL99SW2dreOfqj2f6Vr7Mm7oOg3s7Dn7QG/BX6yyyytveBhb
sENeX7euewG2/4r13PaqZwA2KeV3VfnrVObxnMs8rjKP5YyFWk91nKg+2VXl
Gg3rvDeo7AN8iyF/Qmq80i2sKZS3g+RROr+X2rCBzp+m/8+TvLvk2egMifMX
q71zG8Y+bZDZ579zs9uxUcF4HbA6J6sPNikYN3JCI+B41M7Ryl+senfTsQW6
lxuUbqL0+IaxXzerPW/Xjau6UOlCjkl+Qff1W2RfEr7p7/EjK/9X5f0UWXca
h55bsl/4cs4v2S8MHmh6aj/OCrpO56rzFqjOi0vGhTDufKj/P1E9l6ju3dTW
VyT/rvOGluwzBg/0scqsmLN/6O/I+t4j+JFiz9X/Ke8s/drqN1fvyqzUvr/V
0OvKnq/BGwwrGYfAuLdR1TiiT9DHSsaN8P/M1Bi455Uerfydw3PpQB8WreOt
I3mo0o9U70eSF0S29R8c2e+J/XEAuCEdX1vp1w37QLdX3x5R9fE+eraTlb+h
rrut0mcb9nOuok49UPUcEHk9PCfxfP2azpvSsE+1deZ1NH4r/OAvKP8p/T9P
9a+q8psxtijdR/9fkLNP+c+865ut337KH6T8E7H/qFyL7vED7G3gUfiGdLxP
xdiVI9XHB+MjlHyKyrev2TfeWv3zcGw73wEqu2+w++EjPrLqdesbSj9QW49l
HGlxH2BbwxeM/5c1+4mSn4xt1+yheq7J2//L+YcEmyc+5akNp22wzdZsM3wg
s6/+wya36Wqd1yFvv/IUnTs52LOeod/UlpvVhv2Ul0a2fU5quL0rqZ6D8KHx
XqktPatuJ89uvu7zdcktrC2orxgwKjX7sTdRHQ80e006MGesD/32hup8Ucee
Zl2DLU3yxowt2Juxg+q3UbPtMUt07nk656SK11bHqA1LUttfemBXyfvcW3Xs
BtX7lcp3Vf6Nyt8ib39MO7XtAtY1KvNw3v6z8/X/I0pPytuX1qVmP97ZastO
kl/iflXfHjWPqUOU307yyTnbRuapPa9jG1F7LtN7sh/rIvXNEarrHP3e0LE1
seUWvY7bAXyk8n5J7XPC93Sc8m7I23YJzmLvuvupr/K/VblU+b2Ud66uNRj7
FfaDmt/rPmC+irZjsO64UW39nfetbv/WUMY8le2k35k52z1uUXvqaucEnbN/
3XWCteha89z3qOpYI3V9Zytvbf1OUf4euvePdOwE/D16T1or/xjlfwyuteL2
HK72zFK595VepDLLs4Yt2vd3fd5+QOw4q9X8jm/fMMbk8ybjTNrUPCY8qOsc
kfec8oj+rzU8F1yt9m6ufj5O3+9mSkfX7N/p3LC/Ab9Du4b9DfgdWtS29i3W
BUdn1hHRFS8DC1qzTwJMbhT8R2lqXw4+mrVUZqOGMVcr6tzbavZNdOTdaBgb
tHPD+AdwEX0z4wpYFx+XGYfAmjxr2A6Pr+TE1HgGwJyrKN1bbTsYvK/kITXr
TPjZtmsYE7ua6tmiYezUlg1jGFi3L9ewjwN7/ykq36HFmN3jU8+tv6nM7Uqr
Yb3AuqFdi20xozKvK1kDliRvo1+k53S+0jeUv63ejadS67esuZqVv71+FZUZ
oPQ12qYyD6e242CTuTSMz6ytzlZ+xxZjcCc0bNvcV+/A4Zltkow/J6Uer7D5
D0zt58MfcUXDYw7+l9NTj+fY285NbYNjjXYV91WzL4ZnAV6FdXQbybfU7MMA
Ozy8Zl0QnyprTNYgZbVhdMPruKLkUQ2vywqZ1wisQSqZbYwD8P9mHvNL2MUk
92jYF3y65CMbtq8d1fB6+el8btmEj10RbNJaYXxrpXPXzWw3HiS5XWbMLeuI
psx43R7K/0/tfIDvUPUcrbzn9asof+3M89dyktfJbJcGzwOWarbyV1X+epLn
SG4jeX3JD9aMRwWX+mTN+FVwrI/VjHcF9/oS3yDPgjG+ZrwluMu5NetPYCef
lXyY5FvRgxr2be+u9PKa197gQUbU7E/le7mmZj8i3+DV+I5Z/0jeFEyw3r1x
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJw1nXf8VuP/x8+9Pvc859znY2SkoSgzkjJToaRUQhEyIimzrOyiISMjLRIp
hUr2ighJRpKVPbK+ZO9Sv9ez1/374zw+532uca77fM65rvd4vV9X05PP7n1W
OgiCuBgEWf3dqxQEpUwQvKmjVAiCHZIgWFEXBI+r0pI4CKaWg2CLXBAckwqC
R1X3IB2bqe5tkvdSH+0l10seq2OqzodUguAttY/UfozK16r9n2p/nOqXJW8u
+Vzd+AnVOVF1f9b9Bmkcx6ts5/og6KQ+NlVf7+qINJ6bqkEwXu1vUp3rdN4z
CoJf1ddQ1c+rfkZ/v1HZBt1vN7UdqDoHqn5Bde4Kg2C67nGj7veM6kxUf/N1
/KbzYSo/VGWzJX8neb7qdNXY0pIjxqPyUH3fqf7uVH/NJT+k/v7J674q7yV5
veqeqvKOKn9M8oN6Xi30e17XbytoPC9KvlJyB5XnVT499PNupfY3SN5b57vo
Hn8G/h8gb6H+XtNYLtC1+1V/Z5Vfr7pbqfwQld+je36rsnmqc3/Fv6+RBtRO
dXbV+B9TeQPVvUPyvmp7oPprqPufLDnS+SU6Bkp+nPr6oS9K/ltyQ/W5WOeX
a7xtJadVPkn3H6RrB0vur/u00PPeXn876/cdouMX9X+IypupfBudV1W+k9q/
p7J6/f6l+v3H6+is8QzW2HdTeXvV31T1W+h+++m8hdqN0b2mqH6ssd+na/eq
fLbKT4/8e/7T+TWq01l9bK5jteqm9ftX6vxRla9T+UmSj9Lvf0XH1fxePZPR
6rui/p5Q2Q6q85l+z1W6VlT7RNdWqf29+j07qO4nKj9Ofd2rI6Xx/qPy69XX
0Wq/u/prr/Kf1b6R2l+msUxWH2XVfUnla1W+TnUP0e+7Q/1to/6eVP3uKn9I
R6j+blGb3dT2cP2mP3R+mu69u+rfr+fzqcpPULuWkh9V+Xj1vbvK/9Cz3ELy
dNU/Rv0HKr9U9ztN91upa8+q7YNqt7vut4nkk1VnF8mH6/kfoeN33S/R/fcO
/E7w/NrqyOt8hI7JOp+v+q3UPlL749X+QdX/i/dfv7+35KWSW6vucaqzXHV7
6/475/wNjdHzOFPX3tW9Eo35VdU/VH02VP3rdNxe8u//W3WvUP/7SD5A7Ruo
fUtd20fnIf0HfkaUN9S1t3TvLVX/YP32dswhgeeEA1X+lOSeutdE1flU93tR
7XdU2bEa3xsay+06rlPZY2ozQWXXqr9Rut8IyUeqv131TD/WeJ9mvHp+D+ja
NTrfWX3/rrIbQs9nB0juquf9h/o4SGP5RX0+qr7vl9xMfV2ua401lm3V/wcq
u1nXjlZfZ2tMqyRvq/Jtdd5Y5e9IvlblPVT+AOPV+ViVt1T7zVT+ksoP4Rno
3jMSv1+Hq21z3X8H/R2n8rtVvkD1R2sMGzT+MzTmr1Q2RjITEpP6LxrzOPU3
Ur/3T/XRVOcX6jhB8sOSd9b9f9H9D9D59+rzIbUdquNz9bed2n+j9udK/lTy
NpLflzxM8heSW0j+rOTx/x74myrq/DWN4Ub1v1Z9fq7y5hrjVTqv6hnuJ/kc
tf9E7bdS+9W80/qNI1XeTufb6ff9oP/B2eqrsfpK1+b/tup/asr/7zEa/2Xq
f5yujdT5C7rf5ZJ/TPn7Ha1rF0u+RuVX63wXPb8Pdb+ndL9l6ruf6i/5/+er
87yu/aqy7dS2s+43U21mqv126u9hjW0W843K/1CbcWX/v39S24cl1+m8ieq/
p/OpuvaP+qrXtfFq+77anMV8oGNn/faPdO0EPYtGqn8+85P6Ok/3e0X3/Y1v
UffsofIGKl+q/s5WnTm6//OSf1XZX6rfRfUP1P/sY/XVX+3qJKd0zx91ryaS
D5Z8l55vY/3/n1P7nrr3Xqr/kuofpfKsygfoHrHk3flGdK1fyedf6NpAlZV0
HKvzG1AKeDfU/i3mAtXLqf0tob/nbpIPlVyv8S2uPc/NVfd4ye003vvVZq7G
dqPk6yTfyBqn807q/16VfaY+FqmP/rq2t8ozzPmhv9eGGn9ryTvpN9+deD04
Uufb637/K3htu0n3bKVra3XP7zXWbdBFVH6i+ttX/R2s+/2r/tYw36n+y6qz
b8U6CrrKtrp/D569+lij+j11bZ3qtpA8Vn3frvazVPcetWmu8bzH90xf+k2t
1Lav2nbX/Q5T/cdV/2eV53R+rOrP1/t2k9okOl+uev9l/M31VX8z1MeXqnuX
2tyn8qOZs3TeUdfK/B6V99BYxmq8fzGP847Xyov6PXerfLXOZ+hae9XfWuVn
sVbpfJjG0zr2/DdXckbylipfrrqbqs9Oelb3qf2PrKXMp7r/96o/ROUNWedU
/zbJR+nez2is/ST3Uj8LVf4Hr4POt1Wb9vp9t2tsP6vOOfp9PXS/pqqzj/r4
SMfhktuoj7tVfovqx6rbN/A3/bqOfVQ+Scc0tX1Fchudr2YNVP33C/72NuX7
QVfTEap9r8BjpP8dVd5E5UOZ//VM+qj9hTrvqfHur/LbAo+B8pvUPlL7nNok
Gv9fqn8l91fZEap/g8oHaeyHqc1Q9Eu+UfW9kPdF8js6mqY8Z7fV+Ry1W6j2
o1X+m/o9Vf1drLY7q2xf9bdA5S+x3ql8ncpX6fr2Ka8JexesU6Nbv6XywTqv
aEwDeXbqY3/d+2G1X4p+gM7IehX7e+G7OVL936e/u0g+WnUuUd1v0UnV19+S
X5P8kb6XC9TfRP2uaap/t/7nA1V+vcoi/r+6voXGdZfu10H9X1j02toxYx3k
DL0v3fWuztG1Zmr7Dv8T1X1NfaxlftB4T1H/e+haa8kr1cfBanuu2ixS2b+6
9orq9lKddervTPV3mMqeU39P6LcsV/39VP9sXXtG9Q/UeDfReM5Uf1upbp2O
W7Keuyoa72rJ++lZNNG4D5N8p/pvmfI7d676/1TtL1T9SSq/Q+UXlPw+zNEx
S+ef6zes1HgyOu+g8s6qd636G1fn9//ikp9lC74n3fMsyd0k36Xjbp4v+i7r
oer2UPuvNeYPNPY+6nNPnR+j/jdoPFdqXAWVf6i/n+q3vM7/X+cr1OeB6msK
Ojj2iOrfQf8674t+yJyg+tN07U7mMHRO5h7JMyVP5ffyPeo4APtC8s0q203H
MSq/QuP6VeObrWe4j84zGlM//ZYwsL0yQsdUbAUdZ/I96P4d1NclqlfS/T9V
n7tq/KPU5kJd26A6R+n8C7VfX/I3yrf6tdo0qH1PZ6j8SJWfp7YfYiOq/Qhd
O0/tby36+7tdbaarfppnlLVNltL5DXoHHsHWUr0+9X4mPJtv1f+WJduM2I5N
dHTX+fWx7cuDGZfqb6H7dUH/x+Zk/VA/N+i8pY4jJJ8t+WfWHvXXqmCdE91z
Ox29dH6eyiejz+kYgG2pOh3U3yj+R5IPkbxA8r2S75HcWGO+rKZ/NtL5XXp+
A9T3dSoL+X9rfFuwnqvd8ZI/099Wqruj6lyuOo/reEN9naJrWZXdL3mR5Gv0
P8sVrB+OVP83qI+zyl5P+kveDntB52+jY6htSf2drmd/ju5/p9rP4L3V/Wbr
71zJp2Nz63ykyvdU3eFqW1T5U7r2Nt+b+sirr4a6Pry2Hmxd9jfCt3KKjqt1
/kzJ9scMjW9r1V+h5zVf8hk6ri3ZBscWf0f3OEPnQ/X9TdO7d53G+72+lcl6
Hoeq7FG1O0b3f1FtvmM9Un+NCv6m+Lb66rhI55ep3n/Y0mqzh8pz2PdZ20rl
ehZFvSfoWoHt6/30DIZJmKN7/qO2UyRvnrf+tR+2Cv9D1R+kOn+p/Dz11w/7
T/V2VH8HS24ieY3qj9BHcnKxpmvp/t/rfKx+zzN5txmj85fV3/801gfU33Hq
414932Gqe4uux+gjajNL8gZ8Jrq2JXqd7r9I9U9R/U2wJ3V+s/r8TnUHF23L
36s2P+j8WpXXqWx3Xato/G+oj3/RzZhjVL637hfq+SzhO9P9/lT/v6ist66l
itbfzlXbT1PW53rq+e+v9ifqfFfV30r976n7T9U91qh+B/VXr7rL1N9O2BMF
635f8r7q/Dk9n5/U/2bqc5HOJ6h9VW0P1/Gg7r1dwfrgmzou0fmvsd+nK2vr
34f4f1jrdM8fWS/Ux6NZ/75PVber5OY56yAjQ89pzG136dp4nVdVvqim7+Q1
1o665xzJf+GcUn9vSp6ougM1nht4lqp/vORXNZ6n1f9X2Byq24P78+x1dKvz
O/qr6u/BnKTnMxx/kuRQ7Z9S/b3U/Zdqf62ubaLxbJW1/YIOgC4wRfe4XueJ
6ndW3XML1kd3U/991P+d6v8P7L+C9e0XdFzE96H6R6vtfMnb6/fEkg9Q+7ML
tueuV/tC3vevom/r992je6tJ8Leun6P6R0iYq/bbqf1PuscCdEP61/lPiW3v
vNrVq79XVWcr5nP1tb/kc9X+SLVfomtP6vf1kNxS8q9qM1rP/yXV30xlI/m2
VH+Iyg9V+bP4g1R/sORDWKslPyZ526Lt80v1/Cbo+Xyj9u9qPHU674j9hj2h
8X+nZzJcv+0Hla9SeYG5Fv+GxtlT/d2n/jbT+d7Y/DnPoR+Fnj+PZX5Wm/m6
18eq87LKu0lurfOdivZfXKY6t5b8P+R/mdWxp+S91F9J9Y/Ev1i1/nqyxrMz
9pDOf1X/56nuSD3bbzS+S9XmGGxT9X+/+rpJderUvrvazyvZJ4JvZBMdHXS+
p/rMqbyp+ttN55fqmQxV2XiV9dbv61jwes5vYP7/TfIF3A/7Wf3vl/j/fV3F
/6/D1cdO6m97fDOSf+Od03h/0/O7UnX+1vUX1barrv2tsneZd1ir1WYk/3/1
f476v0x13pI8VOMfrfJbeUd1fnhif9CCiv2pe+rvQPU9S9f+VP1N9czfT3nt
3EXlt6o8Yf7T8YTat9H40rpXE/Q9nW+v+63CftP9LtX51mr/ecq6SCu1Pwgb
ubbe44vdBB1MdVO69hY2o8of0jluihT2qcaXwVcj+Uo9y2tUkJO8OLD++FzJ
tuIsjfkofFP419RezYK3de+DdLKZ6p8neRuVtdX7thh7sWT7Z6T+npjxGsla
uSi0fJXOe6n8R3Q+yVeqj6/Vf7Fq235b9fe+6l6t/p/K2+d5lc5fVbu/VL+R
xvNN0fZDBQcw/lT9tvNj9/dJ2frB5gXbmx/pGZxTsB6JPskctlx1LtL9TtT5
66rzTOz1E90PHXAP3X+B6vRV+SvY8LrfQTqOkvyi5N6sf6p/D75i9V/S+f+q
9n2MxpbR/afq2uyMbYanQ+vo6Opv8/8oWF+6TPXP4Zsvez2+GlsInV1yV9V5
UPI3WeuM6Ozo7iskv6Gyb7Dp9XtGqc5XOv9Xz2J21nN2B9W9Ev+Xyn6QPELn
76r/jhrLj5KvqpWvwd5mDtZ5Sx33qf7nks/H5q/alpzJd15vmwXb5cuavop+
fKfkL/CRl63PUra/2swtWidAN/ispp/O0rFXzjYTthP23hTWJpUPU9kVOjqk
PCbGe3DB4/kqa51qZNljn8Yax3irnqseUD8X11sf5l6tWdN0rRf2keSDdEzG
di37ea6WfJHOb9L/56aMfTpddd5c70cHPc/1ki9H19e1CSr/SnJfnT8f254Y
pPfw2HrL+L7xKR2t8+dif2v4BA7V+XuqV806BrGn7l/UPQdIvjNle/Nt9Fh8
EWnbsOgvy/Ed6xk9ovOv8cupvKrydvg6dazNWEcZrvNZieejtzTu4+rtH66q
/QC1fxR/iO4xUGMZRExE8nfqbzfV/1rj6aa6D5Wta52pa9vgGyDmgm9W8r46
f13f88PovuhFiec85r4LdCxGV47s/8MPeBXPo+yyYTp2Ye5V/Svw9+p4SWU/
q5998Nfo/j1UfoSO7pK76bgNWfVPCPyNPcD/v7xR7QiOVnlnfD06BqvsvZRj
VNMT2zfYOej/dfp7AvNvyvbx57H1eXxD/VU+Qu/L99hLutdIxot9JbmV+pyh
Oufo+Fj1P8l6/m6s57ovvnvVOb9ofxuxnP10fq7avxk5NtdS9dYmjm/gvzud
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
owffi8awDP+e7nme6g9Snc91vw+JcUg+hjlE8kfM15KX6P8xRff8VvJVksek
Pf9OVx+76rw/PhxiGYnjZfgC2uDPlDxB9e/RtcWR47G3qK8dJN9W9JrA2nC0
5GclPxwZTzcAW7Te+sX3GuvV6uPjoud05vb2qv9ryf6AD1T/irT9GZ+o/ALV
PV3yy6r/FWuY5AskL5f8adGx4aOIB+m8M/FoyTfhu6z3msPaA6bpSZWvknym
2vfAf8i9+AYkP6t7TipYf0DXxmf/SdFrGGsZaxjrzfuSh6j+46p/a8FrDmvP
YSp/TPXnRcYjnKiyvesd7yaW01jlN6v8dr2v96v/gyTH+OeK9gU00/jfU92C
nu+kOs8B96j8T42ni/6/L2Kf826qfInKH0AH1b2aE1Ops07wd+w4EfEifMbf
q+0g8B55Y6qWgm2TPDpvHXtr1d9O8lK1f0RtXpB8mn7PsjrrrHxv4EMWMrdL
flp9n6764/LGWL2u/r5T/VGSr09bv9pe5a+o/aPIYGX4LtP2kfJ8wDdgm7ZK
O95MvLuhfvsBKm+mvl7H55p2TIr3Z2DidwWdf1ONb6vEsYmHy44/rVGb24il
pK1PncQ3rra9A8fvP9GxBWsRGCf1dxbPl7WV36vx3V70u0vMAfvi3MRYjKvx
Oet+DRJjaftL3p3YaeLY+7Ml4wm/rxibwpxIPGvTxL79+8rGc/6ga1NUfn/a
8+05iWNH+Ah74EtMjI/AV9aa9TtxrOtUdESV99HzuZhnqeOOgjGcYDl3wMdT
sE6JbokOi36fUvtRkm+S/Kl+3wyVN8n7G/pS9ziq4HjbuTqm6fzfkn01K/GJ
6vffFxmP9zvvtsZzKfpI1j42fG1/lOx7exabVPW30zswR2U3FTz+ZpI/ytqn
+J/Gvwc+Dsnr0Ok0lnTiWO1pusedsXVMdM2BKduDd0tumvc3/j/0Bx2Ts/Zp
j1VZ28R9vYw/IHbcm/g3McUlxD91/yEa25PoZJF9bvjeHkXf1/kZ6uPtOs/p
2F+jJK+X/HTgeMAyHX9mjNnoqb5HEjPg/499zNok+R/JJ0n+n+pOUJ2macfI
wGPfUvS3TowM/w3+KXxnYFoOjbw+sP6Nxz+u8ufwkansAY3vEBxjvO8qv1F9
TNfv24D+V2eb85PY8Qh8WS1S1vnWqfyKOts8d6BLqf1w8B/o9JIPwU6p8xqO
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
acl426GB8fonVf0seCY8q7cTYwVX1vCB5BsQb7qwNqeT49eraHw6uX8bWCML
XnOL5IrxjQbGzoFPa1T7frfHZlZZXJvfmoIBk/xkYt1lq7LjWYfHtgXJSeil
80k1fWIw+RGsLwXHBYkPbsraoPbrA8ckOwE8ABNX8BpJrjtzPHN9JeVc1k+q
jl0/puMM1T+D/OHAuiv63+dVx7LRCc5OnLNKjmGSci4rOcVHF52/QK4xOSYv
FO1PI/fkhNi2+0Xqsz/vH2uunv0n+Hh1fnDo/9UNJeO9yY8jHgvG9ZiajoGu
gT4INwX5YMTDP5N8vK7fkbg/+r1XdVvwjfB98Y3U/Nvkcr8WGI8ILgN8BjEz
/J8TSOzCVsefCt4z8VyDX4Z4MDnB5FhunnKu8Njaen+qnv/S0DlBq1W+R8q5
QvdXza+wWs9ramR/Or5Q5qi3QueIfa/6e6WcO7ZTyf68twP79x+ueq5hDmEu
QWfgPeN9IzcO/wa2zluSR+l8t9i5WiX11yayjw5fHfH6Uaz1OmbX2YYkf3hr
yQslr8sYH31O6LWQGBCxoKNi5y4Ss1yGfzR2btcWkl+JHH95mrks4/yQqfiU
itaPtmVt0fFknTHd5Eecqt/XodYfuZFDQtvCxLCIZZ0dGutMDItY1uDQugI+
S3yXjYi36Hx9xnwMJ8bOvdtG/S2PjA/YV/WL+r3tE38v7WvjPYj1TPc/ooav
JJduCvpqyf6yxqp/XMl5RcRciL2cHhpbh48EX8nA2Lrevbp2WWS8ArZ4KW/9
Gf/iML1L81S/CnY38dz7DT4w1T2M8WX8/ixR+zYq/0Pl+6nNWyq7ueS4BvEN
sPvk9ICfI4cJe4UcGvCM5DhgT51fcux3Z/U3G98a/o68MbJfqO6Q2O/mPPwF
+i1DQ3MjLNc9W6ruueisgWN0xOr2T/zs0HnQffheu9SebxeNdxOVP6i632fM
v4J/ZQH+5rz5Vt5K/G3iqyI/ivjXIyr/NeP8FuJlj0r+I+N81XcSv8v48uAr
6UcMSGVb636v6X6T+d5K9hdviW2oY0DeOiX8NMOr9v3iQ8aXPCC27nhWLV7O
/FdW2WnoJLHxGV0DX2M+ZI0gTk+8nrXjp4pzQ8Awke8J5wD4dtagzol1FnAC
4AXQZYhp3RU457er5Hc15kVp6wQLQ+NxZup8S9bAxHif+5nPJR8mua+O9nnr
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
D3IZiBnCT/l/OcviMw==
            "]], Polygon3DBox[CompressedData["
1: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
sXfaCZ7fyHbD9+nRRfZFnv8DDHHlXA==
            "]]},
          Annotation[#, "Charting`Private`Tag$4951#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl00tIlGEUh/Ez4zhdzApaBZJYEBEZuQgKtIWECbnJoItTYEGLWtSyyYEW
XTCiSCgtMrtokyXY3Y2bFrUs6GKWlzJXQUkgRHQh6jcFfnOe/3PO+36v72jF
7gON+xMR8dxzvyiiwFm1HjxQi0sj5nN75DQuxzl8c17EC/2V8lG1jbvFjeAa
7rRaPjcizzfIq/EjnMFt5s7ojxZelorYp5zlOrhPXIpb4l2H+HQyogqfwGX4
qbnF+uflHvNV3DNuOXeD6+cueFcdPyBfxc34Ce4yd1c/J28y/4q7I7fIW2ZG
DMkTMyKmPFvl1/JFc9fnOA83LHfK2/Te4MMlEZ/lt3g7N6Ku4S5xo3gt7sJL
rW3SH+Mm8RdPRh6XL+v32n8Z906+Iu/Qe4+PWz8tT+Cd3Ad1fBbvvJv5Sfme
8x+TG+UG9/SSOyivw49xBg/5vWv1H8p95tvdyXp+BZfnurksV8l1FL5rvBC3
4nPWduon5RLzq+yb5du5j76rIq6C28sNywtwEx7EA9ZOm9son1TL7NvDj+Fq
7oj6x/wprlKeKuyNF+FWa3P6u+RBVYwWtbnwTndhq0iqpYU7cIYEdo1R785u
y0ps8NGPZ+Pf7tfVRS3Xx/2SLYle/BP7iR8+0mqe+46LcY357tS/P9OoxteA
Y8RXfVcS32xSl/j/v/MXUh9q8A==
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzDkyBGAYhOFvAlUSjLFvgXIA8QgISexrQiAYGQdQCJVLmAvY19AeEWIY
s5TADYgoPBO81f139/91L65MLCciIoOqmohkXUQ9dmojXuhCdUSOPup6kxGr
qYhh/gnr2LVLy0b4Z6RsG7An75cX6Kg8h0Z5pj6iiX7SfV2e/3Z3TP/KX/CX
2PL3w+bAZlv+IxuvbHAvH9RfyZp1hzZF/HpP6PPo0bfoWnGkK9Csf/PyN75g
k7Zf857ki9jAsW2fbIovoc22HSfyAXmJTsvL6JAvudlJv+iprsT/uTtTuclf
87e4wZk+KwvbWf07Hvghd+/0XbpzmzIS8jn9puwfmeU/QA==
        "]], 
       Line3DBox[CompressedData["
1:eJwNzzdKhFEUhuFjGhWzO3ABilkxhx2IacwOCGPjbEBcgHaC/YxxC4beHAob
wUYMGLDWSvApXr7vnvfcy//XpTIjK3kRkUaiIuIezzitjsjWRKzXRpzpzWhF
C174bFVEPr9UEjEqG83b0IQ3ftW9nJ0CLun8igeU8ivclF6vnyNt50L+yMPK
iG33CvVpO2OynbvEZlnEEb/DF5nP8OMy670OvhNlmDX/k1vmj/o7rpxzdjfM
rvUe9KEXH/yuNxN82v9MyC7zfnTji19zb89OMTfn/IknlPMZbl5v0G+wbOdW
/spj37vvXom+YGdSDnB3GMQJf8CXmi/ySZnz3hA3jEqkzL/xD1DrOY0=
        "]], 
       Line3DBox[CompressedData["
1:eJwN0Msu3HEYxvF37JxnlARNCMqIc4lYSCxdgEuwQlRRp8QMce6i3bPHphGJ
OAvVRW/AseoS2LgDn8WT7/scfv9Jpmbw68BYIiIm6ENhRGdRxB/6TAvJiN/F
EVslEdWpiEN3Vtahe8Z2zOCVvEp/gPN8m/w//vTuSP7kLvHtE3eO7NWuzyYl
+6dLyt9oR7eIKWrVz+kubT/yf/MiZvkW+SM24wxe6Cv1Td5O8dO0wX+ndeq1
W8NdfdLvNfLXlKZvtufeb+oqbPbdk7IG3QP25/pf8Exert/Dcb5ef48/vDuU
37mLffvYnZC92PXYFMludfnyDG3rslhAn/RfdKe2ZXyj7pd7VFanu8FaHMFj
ealN2maIH6YVfpWWqctuCbvxHSlQOj4=
        "]], Line3DBox[CompressedData["
1:eJwVzrkyg2EYxfHXoDH2IbHEktIQsUQkscTSKlCiMjRCUnMPJB0XQCc1ZlTc
hrWhYlyC31ec+Z/nnPO9SXK/sl1uCCGUKdkWwlpHCOu02h7CVlcIE90h/OGo
ropXVKNfm0PdAz+iu6EV34zL6rLh6I7eoWZZUVfkl2lItxTRbq+F15118u5T
TOi/+arvEvgpq+CzXRk/3Cf4joO2absF7z3SYiS7Au7a5HFDP2A3z+eooN/U
1VtD6Jef85d0QT/6A/t7vk93TXn7MdmtLO6es8lSkyyny/CzFNNNY9xuBhv1
WX3F/9yRlbHX5iv6LV0M32TH+GRXwlf3Eb5gj23KLu2tO5qijN0klvQprNE/
8MkxZw==
        "]], Line3DBox[CompressedData["
1:eJwVz8kuQwEYxfHPTiTGJ9AUe2tsSEhoG5qWKAmRmOnwCIadjYV3kHgM82wh
8QDmrVms/Lo4Oef7n3PvbRMzpWyxJiJmKVkf0d8YMUCHDRHvvKtFh7/Jg9ha
U8Q6NocNuXf5Ee/G5uWUnLJN07Hci3/xBV2aZ/Byc8RUXcSJ+9Pd6l7Uf8j3
3v9A2557xU9t9vGEvGQz7L6V0/pHu6zuDPumJL5sMyJ36nO6PJ1Xe75R67fw
nHvLs5s2K/Z59x6/4D3Yqjwqj9sW6FLuw394UTfGJ/CK703yP36F/cptcsnm
R37yjRd6pmv9AdauL+sL7js5U/2f+mndTfUd1IFXbHawf9WePq4=
        "]], 
       Line3DBox[CompressedData["
1:eJwVzskuA2AUxfFrg0jUsDEUCTHT6jNoi7IomhgiSMSaheE9EDa0S2njDdjw
CsLK+AaEF/Cz+Ofec849X77+nf3lvbqI2EamOWKrxY7ZRMSmmWmPeG6LmJKt
8xrpOzpN36CzNeKTPuT32VO8Nb0HbPCeZDN6q/QpVjDpptdtTlZx82F+82v8
CfzSNX7FvMIFSt4Yl73bj2U9+nleSW+3KWJMtmhfQo5fNNPuHt2Pyoq8BvqW
HqGr6PDGG33AT9qHefN691hAPT+rV7CfYA5DbrrdZvXK8lfzi3/NH8QPXeWX
zUuco+CNAdmL/UjWpT/Ny///FWf4A6wrL0c=
        "]], Line3DBox[CompressedData["
1:eJwVzrdKA2AUhuHjJoj1BiQi2AXvwsnBSTBGE3FwUUjsDopdscWyONquJPbF
chX2surgk+HlHL73+w9/IjPaPVISEcPoKI/orIjoxXNVxGl1RL4m4sW+hBUs
I8kXKiMa+DMkdfrMBW4Vi0jpLMov9Bq5rNt9si7U8pNcTjZnf0VW5838Ne91
Lr1rso/ppMw17h2FsogH/opvlo/z/eaxe+v8BhKYkNfJj+Td+gP4kJ/L9mSf
9m3sYgdp/trNFn6jVN/clOexhUF+2bsbnVZu0v2MrAd1/BQ3JZu3fyGn823+
mY86t9612ad10sU/cD/YxxN/x7fLZ4p3zRP3DrhD1GNWPqT3DwiRP7g=
        "]], 
       Line3DBox[{3390, 3742, 3801, 1104, 3209, 1797, 1089, 1655, 1103, 1796, 
        1086, 1652, 3133, 1651, 3389, 4543, 4620, 4102, 3752, 3388, 1649, 
        3199, 1778, 1101, 1792, 3207, 1082, 1646, 1098, 1791, 3206, 1490, 
        1997, 1996, 4775, 3387, 3739, 3800, 1097, 3205, 1790, 1079, 1642, 
        3128, 1096, 1789, 1076, 1639, 3126, 1638, 3386, 4542, 4619, 4101, 
        3746, 3385, 1636, 3192, 1768, 1094, 1785, 3203, 1072, 1633, 1091, 
        1784, 3202, 1469, 1994, 1993, 3744}], Line3DBox[CompressedData["
1:eJwVz8cuRQEUheFtRER/Aw9xMdO70fUGykwv1716nysTEhHRggmRGGjhEUgY
8ATM1ZHPYOXfe6119jmntKM/2ZcVEb3Ulh+xVBixTCcFEe3FERd5Ea38NfMm
rVNOkX5JxL25RfZIx/plvDNes33BjUUq5B3J5s1z1CSbxQq91dyIQ9mte932
G2yUv/+/x3Pl+MvL4KteGn/sY/iNDboVetPuPdMMHehNYZfOJCbl9Xrj5gna
lydl5/6rjr9i3vj/Fsp2s0f/zlwre6A9/QTvlFdjT7uRoQLermzMnKJq2QiW
6Y1ivnxHfu1mJ+8Kq3TezGuyBH7xUviiN4qf9hH8wErdcr0ht55omLb1BvFS
PoBb9AdZkkAi
        "]], Line3DBox[CompressedData["
1:eJwV0Ekuw3EYxvG3W1HaHgBdOIQxJOZZy5bE0oI9CzPlJNZchBNoq2oKYq4Y
Pxbf/J7p/6ZpdmE5t5SIiEX8JiNuGiKuEdjn5zMRF40R3emIVXShyt/q1nWz
qYhvesabxw/9YXOMfbtP/sqtS/Taf/EFJG3P9Z12GfmDt8Lv6XK6KXzQZXla
P81P4hS78glv1v6dzuur7o/LLrw12Q5a9K26V7oiP8cbvY05eUnf4f4K2lHm
q7o13Zhbz/SodwQvdM3mCAW7x//f5l4JPfZP/BbqbM/0bXYH9RFFelM+LB/E
A13SpXwzxA/gBBvyfm+z/R2dqIvo44vu3///12jSHeIP3FdFwQ==
        "]], 
       Line3DBox[CompressedData["
1:eJwVzssuQ3EUxeFdkZDS9pyWNm4DNF5DmTGUSEwkdRm7vEap6xsw8g5i4DbD
Y7hTl5GR7wxW9tq/tfb/nPHVzYWNXEQs02gx4pf2SxE/5hgdFyLmyxEPacSw
fd0+Yg7RCv6sOyuboRf+SL6Nl5OIqs431ey38hp/KK/rVfgvqspuZBf8gSx1
N4WdYk3+D0tk1/ZBvMOn2T/ibe8sYveyAvZJu9iHWaQ9nTn5nbzPvmbvN/PU
xB91G7JpeuLb8i088d0enfesm4/ozd6VTep08280oHfl7pzfkZXc1LETbInv
YDnZpb2Cv/Jd1MJb3pmgM/oH+NcvjA==
        "]], Line3DBox[CompressedData["
1:eJwVz8sug1EUhuEl4tDSlmqFCTpwaLkTM5GKc6hDYkDiAoSxxAh1Po6UCBEj
EbfAdXAPPAZf3rXfb6/95y8sboyt10XEmvSmI/ozEfupiHrzAS5mI5pwqi2i
j5vEAh7y3+0RSanZaeDepVHGdbtcs70BPMQE/+vunXR4I8Hl8K05IsVVnbdw
hpuWtPnB7qx5x3tH+rL5GOdwUPcon+516ee5E13Gd05xSJfEUV3RfGbO6s6x
wrX8/5udIreAJazyP97LyJOdHPcheSnr9rhWeyW8wC4++Jr7eW+kuE68d97k
s3jJbeMSX5EO87P9ZfOVbgKvcQWH+Rf5cqfb/ip3o+vxnVsc0b3KH+omLyU=

        "]], Line3DBox[CompressedData["
1:eJwVzjkyRGEUhuFjCM0hCWUJtqCNmYRMaapbaTTKuAGKXJu1WWIeMnZgF+yA
xNieG7x1hu89/70t6XzfZFlE5LBYE1FZG1GBJf1jdUS2IaJk7q2PWEMPoi5i
RL4iO9fP68/UUyzo/zjPKLibNZerZUjx58wP3m3l/tp187ar3Ojv7U/sjzDD
e5M1uTk2H+IDd5yD5Pv8Kc6APPRFu5J5GrecYbs22WTyP/hFHjeyjP23vMv7
q+jEj3lQvizb99a4fk/dxURyz3nCOm/M/INvtPNz6rV3m7mf8g5eCkXZl/lK
tiPbwij3VdYo2zZv4h2XnA01zc9w+pNbtZC8qWZxwRmSv+AfSWVDqA==
        "]], 
       Line3DBox[CompressedData["
1:eJwVzTkvBGAUheE7tmGYhdoSha0Vv2EqjKhVksE0FCrDJMQWIjGxhuiJUmFf
SkuiE/wcj+LkO+85996ve3JufDYRERN0mInIZiPOKENH+CUdMdYW8dsasY8r
+MC7RyV5bS6ioBulOv5ZX5b387tm0u4MpCKq/JNuGu/wLd4ucx/2vvGjrs/O
kOxCdsXPy7foHXfKm+1s4wezp3zF3Q2c4k+oiTbxvb5g/sfeGl7C695VmpEn
3B7RDVMNf6dfkPfyy2Ya3UlSXraCb/VT///xDd4O+ZvdL3yj67E3KDuXXfIl
eZlecbu83s4ivjZ7zBfpk/4Au88vTQ==
        "]], Line3DBox[CompressedData["
1:eJwVz8kug1EYxvFjh8R4BWpnSFDjbbBjacWH9gaExKqJIbFSWnuClph35llb
U4RrwDX4dfHk/37/57zn5IuNJocSFSGESNK1IYzVhXBWE8K0+RyjxhDiuF0f
wiq3hWuY4X8bQuiQgp0Z7kNmZViX5rrtjeMFzvFVfM75Fnf0cK3YxF2aO/kr
nMccvyNd5qL9vDnl3LV+w3yDuxjpSvLlXEy/x93qUt66wwldLw7qJs335ft1
D+WO68MDO1luH9cxy/+5Ly4vdha5T1mSEV2G67c3hY+4zFfzeefb3DHAteNP
pf/nnnwv4BF3WP5v86vdY/OzbhMLeIIJ/k2+nWl25ylX1K14o4RJ3bv8A5BM
Q0E=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz7srxXEYx/GHkntEDEQpxWJRJkVikzgWA3VKKeVy0nEZZHAMJrdEyWAV
RpMQMtkYMPgDMLulxMvw7jmfz/v5Pr9O3XCqfzIrIibwlhvxmRfxhSTmyyLe
dWuFEV1FEetmSX7EQUHEiTxiJweHco98ZNbwpd7t2T3XjfGFqNUndPVcSi5H
H9+PBLb1HXZO3biQ03w1zuSk3Mif+91r58a81s3xdVjlKuRKDPrGl/mDBa4B
+3xWcUQ2xr1f1GV0Teal/VG7V2aGu3f7Th7il/kWPOimdI/mup0q7tb+vW6F
b8WGPq1r5jbkTkzzs5jBrv7YzrMbj/IW340XeUl+Na/4D/NJ3uES2PSuTW7/
/z/uf5u/2OMG8AdZ1j3A
        "]], Line3DBox[CompressedData["
1:eJwV0b0rxXEUx/HD4uFSrhEDJo+DwmIw8Be4JYMik8VTNwODiUU2zJZrUwqh
MLo2lPkqyt0Ul3QL8foNn96fcz7nfL+/h7aZhbH5ioiYo3JVxHAqIlcdsYn7
WMLPdERPbUShJuJd/UE/svO6iF+swC8zf/rPZkJdSWm+lRqpLN9xRjs/hMf2
+vjFxogTPmM3RRM0bvdCr4G/xJS6aLYO62nLzoh6jEbpWu/QbIbvlOXtTPM3
eCCblGX1Z/FW7wrvsFk25VlezTbxLbTI3+MSduG35+7AUnI2dtM6v00b9Cvf
c8Yun02+kXNz/Ir7Hvlld3XQaiK7L3qtsl51ke9Pvp35ARyk0+R96IwK6idz
+SS382b+IfkHeCRbk/0DWZ9AfQ==
        "]], Line3DBox[CompressedData["
1:eJwV0EsrhAEYxfEHZRiiRFZDkwULK5f4BGZvZ8ckKaKIrWxcdsIHkFs2WFOU
YmWnGRuFkojYuExS+Fmczv+cOc/7vk06O947VhQRQ/SViPgpAxURv/yDv9Ni
TcR1ecR+MuJTLsIrvJiXVEYs4zv8hA9sMrxWTtOM2zq+ZlNKbTjJ+/XtuJNO
3KzrjrxzVr+Jj3GV52zgB5tzm2q5B+/pMnyX19OgmwH5mbLU4jahm8Apv0/y
BrcpWtK/ylee1yhP4TObad4qn+I3/IrvbUb4vLxKc24X+IVNE23hZj6s38Y7
9OIm9//NvmFBf4kfcZfn5HHBpmDT/f9f4VvdIb/hHTTqJid/U5763P4B5gk9
jg==
        "]], Line3DBox[CompressedData["
1:eJwVz7kvhGEUhfGrEGtFozSipVIorIWIMJEIpV00wjSWEgn+AltUIkGDEAqJ
imJmJFQSS6OgUWkNld9XPDnnnnPfO/OlJjIDc0URMYO/koiOiohORFlEY3lE
A7qrIn5k29hBtW6L3lRG7Os2+V70IY1ijMhPSiPq7ba40YomvkfezrdhD324
Qxo1ui47R97fun1Iv8wPunHzrv6RH5RlzRf6TXpOh2Sn/BmGzaPJf8BU8h3e
jSU3MG+epBPJb8pr7eft3WNDl6NPsgNdlp/FHDKow7T82Xft2J13YwHHfL98
iV/EIdbwjXWkdNd2Xr1/c/uFFsyFpDf/0pz5nf/UHdAPmpdd8ldYNq9iBc34
B5w2PmM=
        "]], Line3DBox[CompressedData["
1:eJwNzj8vQ3EUh/EjiL9TB3sj5hJJsRWVSCpEEyS1UdfWjtqEhYRYmIhYJRUR
r8BiU14AYzFampAwWHyGJ88533PO7970RrVY6YiIEv56ImYHIvLo7IsY7Y8Y
TkVkuKXvwsxgxJmsWz2Eu147PGFnRJ7lC+QwjazZinxOncekfpELsiWe1z94
I+WbX95uyL/5EU9o4hmrdhfM1njTzTqXkKjLvIUd9TaP2Uu4ra8hcX8pq6uP
8ep751y1My6v8BVqqOPGbI93cas+5GV7R3yv/3Sf8b8/3r2W/3IL73jDB07s
Fs1O+cXNgf19TOEf4icwlg==
        "]], Line3DBox[CompressedData["
1:eJwVz78rBHAYx/FH5M6vxHJKKaVTNmWwYdItlNSRRSxKRxLDIcuVstxAcbIY
rRivlB8Lg4FSBpQ/AKMu8rrh3dPn836+T32755YnlmoiYhG/iYj6hogE5pIR
W+0Rf7rDpohMc0TJTHFnjRFlecFOEufyuHxhpvk2707sXupyfCt69ZO6NLci
p5DlpzGFA33GzrUbV/Ia34UbeV6+NbP8g3kv57keFL1LyR2Ydf/H/MM214dT
vrYlog557wu6gq7fvLOfs3tv7nKvbj/Ju9wg3uRV+d0s8Z3ePdp91hX5IRzp
13UD3J48ig1+C5s41pftfLrxUv0nP4YveUf+Nu/4ivlR3ecmse/dsDyCgvsV
M/zhhJvBP2HWPA8=
        "]], Line3DBox[CompressedData["
1:eJwVzj0oBWAUxvFjweUafCxsPhYMXIPFNStMBsOVgYkSkUGSm8HmjjbJyGTy
tVBsvgqTDVEUZXCTS/IzPP2fc55zzvvWj04NTBZFxCQVlUb0lkdsYg63sID5
yohUWcRdIuJL/U3l/EEyIoml+GmmGJ/UJZigWr6Z6v735KtutPI9uOd2mp+u
itjnB92soAwN253RP9avUZ9gld6L+WqsoZy8T52hfjrX2zU7xLfKTu2M8We4
LRuRzepP4LXeEd5go6zgb+P+9G6+Qd1Ei/wVZjGFP2baMK9uxw5a4dcoR7/y
DTfW+Sze/7/Lz3vzgZ/zXgst0JLdV70U/4Zd6i+zaeymQ/6CjuhR/Wzuku90
68P8LZ/HHdmy7A+2pUBX
        "]], 
       Line3DBox[{2050, 2317, 2819, 1527, 4292, 1528, 970, 1307, 1305, 4303, 
        1551, 984, 2346, 4736, 1326, 2825, 2365, 2828, 4705, 2366, 2368, 1003,
         4197, 1345, 1342, 1579, 1022, 4220, 1383, 1381, 2842, 4709, 2409, 
        2540, 2410, 2091, 4616, 2432, 2848, 1601, 4327, 1602, 1051, 1427, 
        1425, 4338, 1625, 1065, 2461, 4743, 1446, 2854, 2480, 2857, 4713, 
        2481, 2483, 1084, 4279, 1465, 1462, 1653, 1103, 1503, 1501, 2871, 
        4717, 2522, 2556, 2523, 2141}], Line3DBox[CompressedData["
1:eJwVz7svw2EYxfFXLHWJwSYmkm4dxGW2VkWVmUiKSLSuf4FLQi02gygiHWrE
gEUisViqNRiU1aCzSSrx+Q3fnOec87xP++vLrk2vtoQQ8miNhTDYHsIQutpC
GKHDSHaH0OwI4RRn6NUV6UNnCBe6E3Mak8gghjn5lXsJu0k3xjBqTsnHzSkU
kcEzptCjm7Bz6f2T22Xa4Gu6Rf5Y/2qekVX4e/0RvaOzskT0m/w1srIFzCOn
G9Ate5vDNr9C80jL4/ar9mo41L3QN1lJVzGvYwObiGNJXvdt53a3onu4MWfk
u+YdlFHADw7Qr3u0U/f+w+13+ss3o57/o1X+y9zQleh39J9kt9E3Yo8vYB+f
8n9ONkBl
        "]], Line3DBox[CompressedData["
1:eJwVzz0vw2EYxeGniaSUSNSmHXRph+omQbuxiYhUwtah8RId6iVhMojBUEIl
IgYRNvUFMBqNEiYWqS8gwqZcHX455z7nvp9/myqvFquREMIK5jpDuEA2FsJT
Vwj7dCQeQo3OyM/wzT/o3rpD2O0J4ZVOyk9wbs6aK26a5nHUkXKTlF26W+fX
kJcf4Iqf1yXokf6j3XunSYf1ezjWZ2RpfNp50S3zz3RIX9Dv0KRvJ7CERWzK
0/Jt9NktuZ2lOXmRDsq38MhP627cZHQlbzf4Ad0GDs295rLu3hxHFVF3/bKc
2zF+FDF5Bad8pP2/dXd0yhu3tEO3gJq7ljd/8W6noZuwc02/on6DnT++hYKd
PH5k/150NXs=
        "]], Line3DBox[CompressedData["
1:eJwVzr0vQ3EUxvFTBO2loiIMRAibhMkgaSNSJgNNBAuJwdgmFvwHGhFilNTS
tIvNaLBg7NLEZrQbDeLl0+Gb5+Wcc393+rBSKqciYg+7/RHNgYgG2umITzmb
i7jMRJT4W7zon5HoN+Q7uzXMJxEfclp/xq/xc+7W5Vlad/OuO+bzdJIWzSbo
jdmbbgknunP65BsV/QI/bmdVP0ZraOl65X2+jRHkcGD/1azHbFue4U+xpd9E
qvOefO1/rzDkjUf5bzhihx/lE3cZLNp/kJf5QdpNV9x30Smz+84/oKw7ohfu
v+lXX8SveUH/Q6v6ur5A8/gHj4IptA==
        "]], Line3DBox[CompressedData["
1:eJwV0D0oBWAUxvFzdXV9pQibK4mifGxMBnKzMFC6lAFJuCFJoSxKSQkDykBG
k4+NwWyxWth8ZLCZZPC7w7/nnOc557z11k8uDi0kImIeY0UR5/gri/gujXgu
jjgoieiqjNinw7JT/KofZe9mts2+0QH+Ec70bfp5O1/6DA7RZCfNu7S3oV5H
N38PF+qsLE1P5J902Z0P2infyd+Qt/Fa8WPmVZZTv9AO+RbqvJvGHGaxaqeZ
v4kqc9P2Rmk7P0sb+Gt4Uo/Ibu20yCbdvVHXylZwoK/QT8ke9DVYQpm9al6n
3V51D8r5ORzn/0uWpI3yezrozh1NyWewKy/kJfN/aOZa1q++on+piAkz42YK
vJ1ABn3owT8szTT2
        "]], Line3DBox[CompressedData["
1:eJwVzjEvg1EYxfFHk4q+mhQNUgsGCSaJSQwiQnRqIpF4Q5cuWHSVNHwBYtBR
NDVhYTMzCot0YbMbfQB+73Byzvnf57n3TjeaW0d9EZHS3kDEfTHijj4LEb96
aSSinURsy9f0jr9REa/pN2a7tDAY8aMneEuuyvP25ujB/Ld+Kq/yKb5ubpJf
OfvClugYO+PP9k/wRXnCzBpe4R36wA74LtbjYzRK++ZfneXxuj4jtyjFdyiX
vae3/fWSyt540QNP5Yo8ZK9E49iynSdsQx/m/dnf8TyfdfaIFaiJHfILdyR4
ZHeaWcH/9HP8FqvyTfoHAH0nZg==
        "]], Line3DBox[CompressedData["
1:eJwVz78rxHEYB/BHlHMo6SiD4dhPMambhD+AM9gui4izKJTJmZCyiEGim86P
MhhYKGwyWRCj1EkmxeR1w7v3r+d5Pt9vemJupFATETOQbYwoN0UcJiJ+IQ/9
rRE/9RHfug/dn6ylIeIkGbElW9af0sO6ISjr6+Rr9Do08SP8Gc7YS5lPmG+A
lGwX98hz8gF8xSftXeMxvOntHC7pz+lRus29I2iHPJ8zW6s/5m/dfJBd0Jew
Te/pJul73aw3VnBWlsEd+k8oyIvw5NaN2aL+mZ7WTcGj2bR8h97X7eKsbF72
gg/sdsq77HTDoKyED+Xj1W/HFb6v+h5eqv6T/1nEd3gB97r1Cn2wym+Ya7b7
xn+59y6r0J9Qov8BZag8xw==
        "]], Line3DBox[CompressedData["
1:eJwNzT0oBHAYx/HHdHfe4gadSVeKWVF3pWzEphjOTdjUGQ2E5UphsShXNgxe
JmfBikEx2sRAknfKxmf49nt5nuf/z45PD5dqIqKE/rqI3fqI7WREMhUxQfPp
iL9ExK/Zk1lKn0G1NmJDN29+xA+ZDeLATUKf1q/Iq2jSjeiqNOe2xazBTSMy
ugrN60f1g/RMbnJ3Tov0Gc0Yw5add/qBAjLePUQrJuWimyp/4d0r+Zg/wTq/
6XaKvzab9U+Z9uq6aNb8BXP6Zdx559Ju2fyenzYr4cZuu36Dr6BPnpFv6Z67
Nvsd9jsxoNum+/qC/pR+yjl3X3SRviGPBXzjB/Po9uYDerAkr9l/5D+9+Si/
8m/Y4f8BqZk/pQ==
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJxkvXdcz28XP07IjiQzM9kr2fQ+kRCiqOwtQiSUTWYUochIZWWVUcmI3seq
kJF2SoO0lyRl9b1Onev7vX+f3/3P5/G4Htd9vc515vM8z/VOlyW2061UatWq
db1FrVp1xH+f2m35F+IRrpxVcuHa1I7vlNe8/lVVVRWDrfuMdtptrijrtrr1
4bZtIeZrrc293jYJhjxf2ORFXWfFQKu5qhsmFOG3JourDtyNhfYvg5oOevNA
oXckKHD0olxUNva78WLnF5jSRS15oFhXqze5SqxDVnnFeFp/nrP/Z6g4p/8O
r5L1E4rggO7RnU7inIW9dA53F9/tN7b3YvFdaHNydKWf+G6C+tZqOTc+uyjk
vKUct76qWs5wqxbndMT+Hn2mepKcAywcc26I/bkZF+vT+eXloE5yNul0HUnO
7X1Grx8g5Kl9ZniSvpDznMXUPs+FPMOK9zvoifUGEWGJo4ScTyItwsPEumlT
wz9031F5D76SnErtCUqSs0pveaNu4rs/9ZxPkZw6xr1/0Xejc2v0ueYAyalU
KCfUyLnl+Nb6Z7sVoLnK+H8az6PxX0XbR7OrEqDrhh7fCuanY48nrhd/dshF
/00LGugviQeLzqZ7U5wioM3izIc35hfinXWVw2Kd4+F6OxOL8KxsaF6Y1PBy
vc8YUbVs03fveCjSs/PoW1AAN5fsnOLe2Bn8scHa7QuTQd++b3nXp3EQrhn6
Nzf4K1guzIgekZAJI6bMqLC9loMbMppkjf8eD2tXbuy+NyUd4pO9FpCcI/VX
nlAXctY2W1FvjpBzTNMJ3YqEnMHD6iWXCzmN1O/VIzlhjcemeCHncp/9qn5C
zk+jjo8mOTXbFhwNE3IW6jxv5Svk/P3x0iKSs2R//BOSc1eKRvooIecUW9/3
24ScPd/n9ugp5AyJeaROcsL9h2tIzs2pM3PXCjkjm27ONxZy1i539SM5N7R+
Gkxyuq493LuZkPNOwN1pJGcb46p19ukFeM4tep+JQQzutLuo3gRj4PIMw5sz
VuXjLsdBl1L0I9HVdq3FLPVUcLV00B6fmA7peyLU0sKjUNOtzYG4jFzoNMCz
dFSLQni1rFeEu/47TArpFbSxeTw4L3y1qGhyPug8GmWSMugjTtJN2nf1fiwk
7EyufftqLFQuG5Y0+U0uui3oesfjcRo0m2yUUhiWhQ8ax5xeEfAZDTXtrpZX
JsLTgWqWJGefyAUjpgo589oMrWos5Jw16I2OuZDzZNjm4yTnl7fxFyyFnOd6
1GtgKOQ0mX09juR89vTo6gQh58JOI7+QnPs+RaiQnOV5jhPshZxJ7xzuk5wb
h73snizkLPdZOpDk3B7cNylIyGk41rE9yfnAblXpSSHnDc0d2QVCzlube++y
FnIuc/VZ/1PImdGiwyiS07dZfiHJ2fjdqwKS81ZI8McDB3Pw4YmN7v/mROE/
105NmiZ9Bs8dAQkFzol4y/3PiZ3LcqFL+40LlPqpoL3iq9+aDUpw/KxyfVdh
AdhFrlZfO/EjxO5Pn1Na9hWcfl3qGXwjGTTKcyf9evAZLDf7Rw9JTocpueGm
Ia2zcWXuuHE9MQVGmFfljci4ByPbj9zw0qQI6294X3ZIyPOncXu8MSgaO027
ku/tWoCrpilOz7KJh0eBy8eRnDvenOlXd24UPn/le7qJkDP+4sEpxULOuC7z
n+wQcn5ro98bhZy5Q2IPWgk5F3YMTyI53zqf+LBGyNlr/PeR34ScMSsDvjwU
cr5b3O9TpZCzXdiC70OFnONKgnQeCjn7aGkv6iXkPPKxRW0DIafRW9U5JGes
lV9HZyFnl8TE0mtCztlL+pv5CDkX1D3SgOR0tm99a7+Q862vMqKhkHN6QR8d
krPKbvQDIT8c/9tnS6O5UXDzrsHlRmK928Ks+n6DouHGqIq64hyoGN8/ZaY4
p/vLz/ljM+6hWp/3U8R3oWDFgxH0XYeNrubDk9PRwnaw44PW2eCzyGkY6dPB
KaPz97KveF/F1F/oHw89azaI7mX2/u/lVRuUeNl4y06hByz/9baurdDDyBeq
X0udE+HRobfXty/Lxbyjr7NIbzf9XKY6CTlfRdRPE3oGs90hrRsLOU+F9Iz1
F3Iaa63zEXaBt45pq+m+j3e9ixst5Oy0Q2U5yZmwOaUZyfm7Z4reMCHnXZsJ
fkKf8Hrp9fY9hJy/r7wzKBNyPnUe++2OkBO6vvEhOVtaNH+5Xsg5VuWeCcn5
cKjvOJIzfPGAdSVCzrld1uwU9sXhQbXbk5wd7nzMJDkP630ZVzUnCpRDBruQ
nOezjo4Tfg6jVwwrE34ONpGLbpOf+zVzvC3iF9zaZS0Q8QvnDLQrKC5OFN1a
GHw1FuPWzR466U0u7A+c/emUiKOgRfUaFU/Ox/5/t8QlDfoIb6/F96C4K8va
iSJOceSDZHMP/Xfg8dglnfLJ9hsuh8cmpqNBo/E7csKjwGVKhnm8iOvmTyYm
iHwFmh7a4Zn6kdD56eJMC5EHTP46LiQ5D87wA5Kzk/rbpyTnx8ETLxcJOdsF
u25eLuSEa2V9Sc7r9vMP3hFyhlxpXkZyXvqg7nlayJn/d2aQyA+YMLPw90ch
p9G4KdtJztTfae9ITvMno9ueEnL2dB88heQ8Fv3nqpGQ03vn0nvZQs5Hxqts
Y4WcTh9xAcnZu3dqAsnZflrlqZlCznVq67eSnDi5k4vIw3Bg2YhYkvPCrtEH
RN6GzOWpjUTehs6zFk+YK/L21QcXX6y5lgM/t7u8m/o9HjPbfb1Jef5yxxOe
Ok/j8M+WV1r5wV9R81eLn8NEXXiXPWeHqCN4M3q9zfHGzmi2YE8i1bvDD8PL
XmRl45RWc0JF3YEGvps+Ud1xvtn0WqxTBAa9rgWiTsGrdsOPxog6FT3KYEzh
/HToG6G/WdRf6HqpYcpoUddGjWo7gOSM3v5oo6iDsKlA4y/Vl7+TvGNEPYKI
Pp1fTRZyJt1+3ZPkDNVLWNlZyPnizOsGBULOoetGzhsu5HTc/2M6yfk8Jycx
R8j55fJXhx1CzszXPUJEfcRl0evuiDoOvz4NLyM5G5eFB30Uci71WFgq6j58
mH3emeS0vthZTeAEmDwuAiqEnA++B6SSnBo5PxLOCDn7HjqdKnAFbDkUHkhy
1qr5n2Ni+xrctM6xBofI9ZL+5+4SXvrd940d4RZer9W/d6Py9YTr1GIXEM6R
69YfHhsRrsvc6jiccJFcn14+xkbgKLAK1n74/H/WnR8X1RK4Cz531Or0P+c4
ehmM3kl4qZVt6jq///ddx//vf0v+ux//s1+ej/85X8qD/5WH5Yf/ys/3hf/c
V+oH/qMfqU+F1CfrH1n/KPXP9kK2F0p7sX2B7YvSvuwPwP6A0h/Yf4D9B6T/
sL8B+xtIf2P/RPZPkP7J/ozszyj9mf0f2f9R+j/HC3C8oIwXji/g+EIZXxyP
wPEIMh45foHjF2T8crwjxzvIeOf8gJwfUOYHzifI+QRlPuH8g5x/UOYfzlfA
+QplvuL8BpzfUOY3zofA+RBlPuT8CZw/UeZPzrfI+RZlvuX8jJyfUeZnzufI
+RxlPuf8D5z/UeZ/rhfA9QJlveD6AlxfUNYXrkfA9QhlPeL6hVy/UNYvrnfI
9Q5lveP6iFwfUdZHrqfI9RRkPeX6C1x/QdZfrtfA9Rpkveb6DlzfUdZ3xgPA
eAAlHmD8gIwfUOIHxhvIeAMl3mB8goxPQOITxjPAeAYknmH8A4x/QOIfxkvA
eAklXmJ8BYyvUOIrxmPIeAwlHmP8hozfUOI3xnvAeA8k3mN8CIwPQeJDxpPI
eBIknmT8iYw/QeJPxqvIeBUlXmV8i4xvUeJbxsPAeBglHmb8DIyfQeJnxtvA
eBsk3mZ8jozPQeJzxvPIeB4knmf8j4z/UeJ/7heQ+wWU/QL3F8D9Bcr+gvsR
4H4EZD/C/Qtw/wKyf+F+B7jfAdnvcH+E3B+B7I+4n0Lup0D2U9x/IfdfIPsv
7teQ+zWQ/Rr3d8D9Hcj+jvtB4H4QZD/I/SNw/wiyf+R+E7nfBNlvcn+K3J+C
7E+5n0XuZ0H2s9z/Ive/IPtf7peB+2WQ/TL318D9Ncj+mvtx4H4cZD/O/Ttw
/46yf+d+H7nfR9nvMz+AzA+g5AeYT0DmE0DyCcw/IPMPIPkH5iuA+QqQfAXz
G8D8Bkh+g/kQYD4EJR/C/Akyf4KSP2G+BZlvQcm3MD+DzM+A5GeYz0Hmc0Dy
Ocz/APM/IPkf5ouA+SKQfBHzSwrml5SSX2I+SsF8FEo+ivkrJfNXKPkr5ruU
zHeh5LuYH1MyPwaSH2M+Tcl8Gkg+jfk3BfNvIPk35usUzNcpJF/H/J6C+T2U
/B7zgUrmA1HygcwfKpk/RMkfMt+oZL4RJN/I/KSS+UmQ/CTzmQrmM0Hymcx/
Kpj/VEj+8/rbdubUh5poqRdRnarzxKZSR+SrqpdRL26JvHcv69h4qkd2jw96
Ud6zOxnW8aDIP3re/qtURJ7vFFn7OOX58FYfHb6LfDVpf9xBqkerM/qmUV49
1+L9JepnR11uoxcg6s4E9YUalJ+1W73dSH26k+6/Z1R3up+ZpEn18dZ01wrq
o49ptPWn7/bfm9CUvqu92eEg9bPrA6LqNhDf/dviYAf67t7zAfk/xHdbvx5y
d5v47ul7P248Ed/tXpaxl/p9m886RVTvRry46FshvhuZXVeL/PmyxkILaOIM
6eH7J+0U/txN552zlvD/wgtm+woFfmt7bWsM4bfLW56+pLjWUiu7P0XgN8/z
1tl7RLwc0A/Lp35kh17MmRYCv511ez6D8Ntbt8yGFL+a+QOdCTc+1h3bo0zE
xe15q8bTd2PXf87JFrhx886u/oRvD9Z3edxFfDfaz/Q04dv75jPW0nfb54U9
pD5xnd3C0Gniu6oVe2woTgOP5IyleHn478eA5uK7q6uae9N3J6/fO476QVPd
dqeuiO8O/ubYnL77uFbwzv5vrinaPK0aohD+U0fpHPhM+E+zE+VterTxUHZT
nLQjPxl4ZLg/+edCC/Lne8qYdpeq+eeSDzX+/OGXQTMdsX+E/hdn8mfrWfuG
0P7Iwyff6Yrzp1bsvUh+++vhYyT/PLa/bztaj3+3tRnF15XF2bq0/vLCsFPd
xDm/B/y4St9drN/9JsXR3GE13536o4ZPXnW15rvCTY+RnAUT9prTd5sFegz2
F/unF3fQGyDOv1mn4Svqg36pLjKg+C1Mv5ZGuP3xyL0llD/79LzpTnnpUP81
6wlvJ3y9NE3oDXpOWXaF8qFh622p1Efc7DPl4ySRD03f9F1Fel5jkz6xm8Dz
DS0Mj+SJfFjY6Vcm9R0uzbIOEf433L11npvIh4FORpcoH/p9a+hLfc2RqjNf
KB+6mq+9Qd/tkW3cnr47J8bxofATmJ7Xal51Ht7jUEi89KDC9NgJ4rvzZrT4
Sn5Vp712607iuyvWjNtCPMA43y6TKA+X3nBcSN8d55b/Mld8Nzvp2hjyH3z3
3Yv4ugkGTjohAle4mD0xpfjaOEdvBuHDhMNhr4m/WjrduojisfEFs52E0652
WjqjvsA5jYdt8CY86YuOX4hX3GU0rYJwznrDoSMp7uy3eWkQjp0btMOacFfv
fln6hGfmNs0IJT4TG21dRXime8x2JX23qOm8VOIboauVD+GrVvN8utJ3U56e
b0k4NsNa8bC2+O7vqgJ1wlcL1Z7fJtz7rluEG3234Ej2K/puoG5+KfGir88c
cycc1a5jg66UH3gdeR3lOp8DfA7Kc/i7wN9F+V2WE1hOkHLyvZDvBfJerAdk
PaDUA+sNWG8o9cZ6BtYzSj2zXYDtAtIubEdkO4K0I9sd2e4g7c5+guwnIP2E
/QrYr0D6FfshsB+i9EP2W2S/Rem37OfIfg7SzzkukOMCZFxwHAHHEcg44rgD
jjuUccdxihynKOOU41rJcQ0yrjkPKDgPgMwDnDcUnDeUMm9wnlFwnkGZZzgv
KTkvocxLnMeUnMdA5jHOewrOeyDzHudJBedJhcyTnFcVnFdR5lXOw0rOwyjz
MOdt4LwNMm9znkfO8yDzPNcF5LqAsi5wHQGuIyjrCNcd4LqDsu5wnQKuUyDr
FNc15LoGsq5xHUSugyjrINdN4LqJsm5ynQWusyjrLNdl4LqMsi5zHUeu4yjr
ONd95LoPsu4zTkDGCfB/cUINrgDGFSBxBeMQYByCEocwbkHGLShxC+McZJwD
EucwLkLGRSBxEeMoYBwFEkeN3ezYrb/Ab5Yq22zI7n3Vzq8muzc+PTGA+pet
73ZlEQ9z4JrBRepf9sVN1af7Xjn1+QP10Yn9Ir80JJzzqo/BKJp3mNeyoX58
QDP7BtQXf38yafE40ae7zNIbT+tPixQTaL376O71Rgh5jvpv7Ef4yvDwiEuk
hzXXb+4pFn3WrxgDe6uAz1jco1Mj6ge7OiVqkH4Sp/scCxL552qBYwrZpSo3
0I76oDgvlxzio5aFTPWnfu3HoWcbqG/abWSZm6MfiY3L1i+k/i5k1rlxdqKf
nahnN5z4B+35lkriHzYlGQWUCT0n++3vSHlPaaxuRPbNtndKof7x3v6LawrC
o1B387t44q/smnrHkB4uBCmH1RN60CwdN5P07xtrFkz9Xf8KzUWn9d9h7Mmv
S6i/W/rrR32aR/zY2eQJ8UWxtSJNSJ+VKw0sxwi9ba/zdjrp50G56SDSz47W
QycrhN6u+y9fSOuHai/tQOtTv23IJDu283eaRXne6sZcp+5kR6+vR2jusGPg
6bnEgwkjxJHePDzC9H4IvbnGH4+7JfTWZpD+JPKrgKSn1X3uQPfWXtW807rP
Z0hvf5ZNLiC9PZvlmUB6a+ma7Gcu9DZp+KEuK4XerLYMXkl6W9F3107S24pZ
a0dTHV9kqfOd9Oa5Y+IW8s8FZZpPDYTe5q3dP7hQ6G3+AqPHxKfZWEw/Qn3N
LqcjbpQ/252f5ET5s1PzwpXkzz3tznoR39XeW/ma9PnkYYkv6dN2ZLAn8YRm
EaN/kj7TD/5IuyX67k0vZ6UTz2YSaFV8RvTdJScOJdP+0i6nzruJ/Udd/I8T
D+AwzdiYeLaZbvN/0n1PmPofo/teb1XS9d7VWGhWHvbcWJxjsOpDNPGKmydN
2TpGyD9jfLsR6UL+QvPJCxKF/LpXp+gR7zcyNbov2XHWoGPaZMexp5ovIT5B
/afnQZoX39Ro/JJ4xTlv3k0lXnFdpcYH8p+4gkOvqK9vWL/fUOo3j0V49yZe
+o+b00vie8t+qd4hfrLH683ppP8DI67up3O2ZuiEU3/tFVE4mHjgDvdgaDUP
bDnhPvEkGmcvdCU9bHW+qUt6aHctL4/04OBdsYzm0c1MLf6S3jy3e08OEPd1
GbJjN+13vHjoGO2fFh96cpy47/Y1w9fTXHtzn9jNZC//ST4pxMcu6DZ+BuWB
L9H1NtN9t4Q75ZKfNPO2OEv37X/q4jbie6tKYBXxvYM1dBvRfR1qaWTGiHNm
npmykuY7n401lxK/3XtqWhjdt3aLncPovtGv9UrpvtdCFSPonN5hNiFR4r5G
ha676b577RJG0n3V1/XZRXb0vmrkSvG+J3NfMNlxf4uJg6jumGprGpiJ+p6u
0/w21Z3mnn9ulAjcklc6bMxj4f/l6tOukP+PGbh1LdWvJ4vq/1YTdV/z4bDn
VEccLFZaEK6e19G0K/U7gZdwFNWLLD39pw/rblXoXTykRv1srN+B99TPzq87
+CrVxypX3+bU1yQey2hPdSqyHVQSr1g2zv+XqsgPLVJzFhCus7A0fhLjFAEf
5ynm0r2K3F2G070mlVQmXhc47cScVR2Jt8y4amVKeXtjtmVrktPkbOYymhcU
TsjbTHJ28q63lPjGSjv9R5QHztYaHE14T+e+4Riqg3fx+kji889E/uhFesDc
3NeE3+497X3gvtBD0s3GLYnfa3nRX5vwfJ1+ZmrUV36slX2e7uup/ivsibjv
I3XfOnTf1OOKZsQDnOpw0obq8nGjx3UIF6XGXBxE952v73qU8OTK0U6LCMda
314STfc9vFzlTZK476F+Xmp0X/XE73p03+F9RvvS3LwCPj8gXFrxq1U63Tfn
qN4Tqu/Gr5++oznO+rRz/em+D2bMGEu4Wt/SNItwtVu8xT2qF/VGzrLUFnim
vJvOc8I/dtpe/QhH1am39xK9B4hKjjIgfF6wOuQI5clpn7ZU46JDeq4x++a8
VmwfVIOLWizNWTFI4J8uI4ZvJ3zVLuLkN8JXz2xmTKH3NsUhKWHEX13zcykm
v60fnOQ4UOzf6xQ+hHBa8Wy1WrT/yOCgM1QXNh/6oU512XXBJjPC1Qm++fpP
hT4Px874TrzKgHMBa0mf+Q6dTbsL+T8bBtkSHjvh2DSY8JipmtO9tRuUEHS1
9XLiXQM8HnajfLtoYQ2ui+9FuM5b4ZZSI/+vdol3CLeMs3w1VdRHnFJWaE1+
3lmzdSLhw4XDww6Tfi4sut2Xzu88dcgLqiNDvodqEh6ot+j0ddJnx5B1bwjf
7jALvUj52bjhiPWUn58m6bWl+VSh4fIjxI+ZqA4uJT2cdzDT0hP7G1uOaUb9
dfseq3cRf7VDc1kd0sO2orb+1MfV8/77ifK545X+I0KEHs5aDf9HevgTVNmf
9GDivPgd2fGbnsYV0oPriN/BZMfupze6Lxd6UM/56EF6OLD0cybxzzPb1uih
03OrXt+inykPONXowa4g7xj1fV2OxTd8IPTw87Dub8IJxfoPiokPOTDetoh4
vGujS4YSzm9m+ONQtPDPC5EaxsRbvnYemEP+OdXJxTNZ5J/cP13iiSdU/Twl
g9Z7nD46WtQF6F+cczgzPAq2ty+LJj75xMaQ+sQ3ui7UmU/99bmCd8HUL7z/
8m4kvSOyGvntYrp+JJx3M11J+dz+fe07xKvMyzasQ310o69HWlN/ZHjrcxjN
ifw9UrYRzxzS6fU0quN1oiusqG+af9hjJvG3nY769KC41hsQNjBQ5PO/W17W
J/55rbpyPM2b7hxOHk99TeR8t33Er/Y4q7+b7rvPakUw5fM+UXPUiT/XLJhp
Sfm8JPLWyUShhwrP9X/ovn3DTn+h++5uFH00Tuhh6NDnXUk/ba5lfqX1o51r
zxL1AkIfqYZ/EXrY0GBHIdW1jqtnj6V+7ZuX2irC7crQpj6kB69m459Rnq80
8btLejBukqNFeT71mzKju9DD+ntjWxOPUWSxPJD6tSuvb4TQXM9v0P6T9I5i
m7fnPuLbK8z+WlIf1zWy9nzC+cWNQvxJD28vbZh9U+hB9+SuMNLDH1WHulTH
A9/88yI97Fwd3I74cPNaLpGkB9/yhwtIDyET3w0jfv7Cobc3SA8zK/xe0byv
5eALxif038HpEt0FhB9aeNY+QPUuaPnBUJL/cVpQOcm//80zfeoj1A50O9pS
9BEjTVqHU//Swf+BPeGrlcUVTsTPf8wpLKU6penz8Cu934i7dHIJ6W3i1qe/
CE+qaSyqt0z4+Tez3S/Iz+v7Gk2u9vO6WnOJh7Hau2o88T+btutnUV9T3Gia
CdXBbt0iPWhOobJmcgKd73y7uTPh9nbOJy6TfVs8dHOke+1yd6pDdUS37o3r
1Dd9HlGYQHpY7qAVRvOL1MaXl5Pepjc/60v+837dnas0N5/kpJJC8T4scv4n
ivfbT8YbEM5c8OVOA/LP0Z8G5ZFdGo3bNJPqQjf7r0PJ7hkGiTlk95ZqTZNI
n7XsVNROCn3aPvj4inCI7g7nf6TPofDOj/SZP0HLkPD52BE9rUmfOjdvdg0V
/WBeVVAP0qfbhomv6X1OcuymXhR3+92Hp1fPZ1PtetoIvVm2VrqT3i591HIh
vbVx6jyF6qBJbNxkE6G3q5kzV5Of2HU1sCa9qfxTfCa76Dy+n0t6O9lGmU56
K2rXZSe9w/Hv2qEv6W182o05pLem398A9blDLozsSvWo/7s15+4KvR1PK7hG
73ksG33OprmPQ52oj5Qny+psaUl627ot+CPpzcp952SaH52c0qCY9PbbanEw
xXW7HfFAfuI/Sv0b2fHEJM13JM+qPq3cCFckB78zpL7bplHraNLnwLUll4qc
E8X/525Dmrs9zg55THM3+S5iiM2+KqpHE5fbV1IfZ6J4uZD4JY28PgU0j1uQ
fH0y1WXrCwkmxD9bjfnehOqFQm3uD6oX/yzG7SVc8aJP/X9UFxy0f96muiDf
aaQvrsm7Wuk1+fb5x3WrqU854Ft3Ec0Z1fINW1OfojV8yyvCAxpRpgdoXunc
cWAi1UEp57I1VYlUZ8+oR2+mulkvMKLNN3Gv+3M1hxAv9zt270H8n3vxfpT7
39vl9SMerH5wrZcCz6DBCW8nkr/jxfJLxIMdG1gWTf31mFFxkT3///IrpfxW
f+ZZDBfy//02bAvJ/7ZqRSHNSf3/9NIj+X1m2nem936OxveW/a/8rGeQeuZ8
gpxPUOYTPgf5HJTn8HeRv4vyuwFRWx1EPwgX/6yaQeulmbp9SZ98L+B7obwX
50ngPIkyT7J+gPUDUj/s/8D+j9L/OT8D52eU+ZnjCzm+QMYX2wvZXiDtxXUB
uS6grAvsD8j+gNIfOD8g5weU+YHrFHKdQlmn2N+Q/Q2lv5nlLl80Sujt0hTv
av5BpcxChdbZn4H9GaU/c50FrrMo6yzHBXBcgIwLzrfA+RZlvuX6DlzfUdZ3
zufI+RxkPuf4RY5fkPHLuAIZV6DEFRy/yPGLMn65TiHXKZR1iusgch1EWQdL
Z7+7T/vHjPYrJT0nzb7fm/Zz/kHOPyjzD+c34PyGMr+9jIr+R319htn9dHon
M+nVuQkkJ+dP4PyJMn8u6XlEg/RTOWd8KL23edrcoxHph/M5cD5Hmc8ZZwLj
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
+fDPL0g/d7olGdN+rl/A9Qtk/ao3+eNK0oPW+8PlIj/g2QiP4yTP4lbTt4vz
YdYLFZfj4vy429vvkh82cjb7TLjlxwTLZ6S3smnFHrSf6yZy3QRZNycEP3Am
uziP3D5G5D2I//3hMMnzK2BfQ5K/eZu6FifF+Z2XbhlA55s6R5mTX+U2vxVJ
fnVwU/ZzsiPXa+R6jbJe837k/Sj3c90Hrvso6z5/F/i7IL/LcgLLiVJOvi/w
fUHel/EGMt4AiTdYb8h6A6k31jOynkHqmfEMMp5BiWfYjsh2RGlHxkXAuAgl
LmJ/APYHkP7A/gPsPyj9h/0Q2A9B+iHjMWQ8BhKPsT8j+zNIf2b/R/Z/kP7P
cYQcRyjjiOMROR5BxiPHO3K8o4x3zhvIeQNk3mA8iYwnQeJJzlfI+QpkvuL8
BpzfQOY3xqvAeBUkXuW8CpxXUeZVzsPIeRhkHmY8DIyHUeJhxs/I+Bklfub8
j5z/UeZ/rhfA9QJlvWB8jozPQeJzrkfI9QhkPeL6BVy/QNYvxv/A+B8k/ue6
CVw3UdZNrrPIdRZkneX+Ari/QNlfcD+C3I+g7Ee4viPXd5T1nfEAMB5AiQe4
3wHud0D2O9wfIfdHIPsjxiHAOAQlDuE+C7jPQtlnMZ4BxjMg8Qz3a8D9Gsh+
jfs75P4OZH/HeAkYL6HES9wnAveJKPtExl3AuAsk7uJ+E7jfBNlvMn4Dxm8o
8RvjPWC8hxLvMW5Exo0ocSP3uch9Lsg+l/EnMv4EiT8ZrwLjVZB4lfto4D4a
ZB/NuBcY96LEvYyTkXEySpzMfTpynw6yT2e8jYy3QeJtxufA+BwkPl96ptbA
ZZsz8Kip79ixkyNw7nCDWa598iC0vnlMYc8MjJ3YfMrFtl8hQuOr5mXiozw6
Lftm+kyZpL17u+WLDNja7Ve6uVcezH6oq9pWIx+1ZhfNud8kGkce0+nX4nsK
vFlQvGVP2wyYWuiU9GlpDrbXtJnxakkCfPHtfWyvWA/VdP+XItZN6rW+T+vR
ptMTy1p+wVWxXe1Pvv0CLVRmeT6YJ/xtdrReVVUOHgrL35NvHQKXXfJ+Tgj6
AgWJu4zKxf52e2LUT4j9q+ru8qH9hTennaD91+YWdIoR+5tmj641Uew3NDC2
by3kzNr/cIpSyFkRvO2uhpDTQ8P32CKhh3bKVOu2Qg+1f7Vq6C708HiNum+J
aaBCY/MCrVnivg+Oz4ucIe67qIOt2762Gdjtd8ACIT8omwQsIPkXqxQmlIr9
a2sbpMx4kYEW/Z5csBT7J+i4zqJ1lXk7v5mLcxbP8s+xEOvnIz62LuqZAb7u
129eaPsVz2xY6EF6NkrU2y70g4HJV0YIvcGAYaq/X4rzXe66uy/dnAE6817Z
dJgcAed/j317TMh5evK6bt/E+e4LO9efKb47dtW6fWSXuremRBSI83vejNG5
JM4ftb5XKzo/x+DrJ6EHCLJ1cBN6gB8jbtQme9lMNnqUL/afVT1VRfsfRK6p
3v80/qRXG7F/td9ATWFfCGnxM430ZhXbZnWtWrnYN/LI9ifWIWit4jWD7CLf
BzrErP0wXciDg1NnzBTyaCyJaSz8Cpxrr3ESfoXzUy9V3zctyLMRnVNgdTgt
UZxz7NWkyf97jqfDtD8W4px9dq5DSW9ep1v0Wyz0UN4KFQqhhwUDWp4gPfA6
8jrKdT4f+HyQ57M8yPKAlIfvBXwvkPdi/SDrB/6jH2T9oNQP2xHYjijtyP4D
7D8o/Wdtvsdh8uenVj/Ougt/Pjx2Ywr584bL2Y6kn2yPPj6pQp6wR7M8xgt5
rtq8qPwp9k/64TvMTexvo+2ZTvt3xSzLoP3WS/qPDhf7+/644U372e7Idkdp
d/YrZL/C//iVkv0KpF9x/CLHL8j4ZT9Xsp+j9HOOCyXHBci48PkeWUX+dmzZ
wMXkbz3H5VTrn/MGct4AmTc4ToHjFP4Tp0qOU5RxWpSmfztPnN/PYk7SZfL/
zoHV9uI8AJwHQOYBznvAeQ//k/cUnPfwP3kPOO+BzHucV4HzKsi8avlxsVWJ
yJ+J5n+vkJzLN0SvJTl3DtdrQf4TkWoeTHYxOjGmp7o4p+j4hlMvf2WD74C8
RztGhkPWTXu/g+szwblu4G5dgesGqc5qSbguobX+GcJ1+zv3nPDqVzZueLL2
6jaxf7nfidq0v7ZnSrlYh2Vzv7ttEeu1AoJmOon17xeDR/QX57iOWFtF53iP
Tz9K5wwvVmZHiHOKrllF7RL7dz2wtDgk9mvfb6RpJfxkhqFybSfhJ9/+zbp9
VNxrycHUAXX0C/Gu+x7PF10isdbJqaYFA+Oh4Yygo24W2XhIo6xHSc5nfFXP
IPOgZjysMLjU/WaTT3CwWee2Zbdy0SflTdKosETo8HKcz74f9xWVL7tnnzuf
hfuXJHz1OZ8FeXFqlSstHyteKdOfxb1NgGf5BzSN7xbC3+8Dg9atyIfzNtO/
NF6QgM69fkU1XZAAw/PqjDXOvKhUbfT4VITYH3FEt2Cy2N+2ZPHXF35f4dMh
YyetK+mYYd7Qpd2VdCh79cr+qpDHb01K5g8hz/M2pzVInh7XP5wL8/uKw0qy
mtH+G1FXNGj/0cyEue7iXssNW4wpFvcK89Q/R/c6e+FygxvinCiTFpl0ryFq
34aNFuc8LxneW7XUR3kgreZeLbbU3Mt+wpwr44Wcj4pq7jWkhVP1vaYOXT+X
7rXkVOeAJuJegYdeequJe/0xPvJ5jdBDy4+Pqu81Y0XNvfRMx5iHi3v9nrPv
dHshZ6rpuHNthZyhpi/dSR7r8Xlt6V4WGhuDRwp51HRK+wk9YEkP/390r32f
VquI/x8cfzL++7zsAqw9qK/JwWOXcHvnwmHf5gi8XZ73Mlz4Q/PYtmtOCH9w
KBsI5A8cX8jxBTK+7qVMWEn+rHxnVnpP+LNJwcKHLYU/98prkEj+7KTtO8BV
nLN5jOsY8kPV0YvzvWOOKcO6WSfqaxfiipuH0tTsP8LAgPI+84U8RrVWXjwh
5Pmm3kynRMgTONO8pzgHDcy7jDsmzgnoZJtP53A+Qc4nIPNJpwCfzcKfod1R
r1luYn99VdOTFBdOR68sWqt/XdFcq+a75ddqvlseeOjWEhG/iywDDQxE/NbX
6+1Afs55FTivosyrsyd5+i2kuHCLHD1axMWifv8Cjov9nLeB8zbKvO2wwHul
bt8PuMeqGA3KCuBR6e+xeT3jwKe+xbx1+teVSwN7ugh54E+HOL3mQp4K2xvH
9v64r7zT9H6Wl/CbeYMnZHmL/24Z5rCG/PCF05shwg9hTMKSzeSHyz8/2Wk7
6bDCs4FrQif/fLyt/3vtZ3XRF9xJGEZ6C38cdXbfyHBcmKhxmfSg5fRiHvl5
r9I+x8gPxug+zSI/5/oCXF9Q1pc5Ew5nkx2DG1oc2CPOMUwb9Iv0/2jU4Jbk
h5HzX7WhcxpcXmBL5wS1P9JzgLhvk7/7Oo4R91Xr5KVO9+1wOE7/fMwxRdtH
Nfe17Vpz3zSd1U/rlvooRneruW/OpJr7el0zu0D5pGj2LS2RTyBTz+oJ3bf/
9nveMcN8lW1q19y3j6LmvtGvDE5RPny2KMnOUcg5psjMlOScnXopUsiJSW+X
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
iWKbe96g36sGz+7Qkn5fbNIpy5Hkfzt40pMXYn+Mc0Yh7f/rccSV9pdvW9+J
/h7UioAdQO+0G9W7PYXeafdvfHkXvZN8XqfPt+r3/4MPfid5ek6sfZB+NzGk
SY+j9Lv7ha2drtA7+eSFQRvp3eOvxMAWysbO2GHAplJ6V3z8QKUNvbfvMdXq
K7237zCiTiS9by+9/DyQ3oX+cbzQi84PS0wrofOf37mVWv13G64FWdPvF55s
VJ9O56uEtPGh8185j72yXJx/6YuGefXfv13fYDqdnzX32xl6P3+0wOMBnW/l
EZpOv390bq23jt7Bfu12exe9D9w6UMOc6qNTu1zdayIet3V1M6R4jJmRdzPB
KQLKB91pQ79zWT2y4DD9zqX5vnkf6JyP7z/40d9J8DNTbUnv/QabLG1P59Qv
v5niKc4Z12WdJeWf0bV1L34Q53jPN7Oicwp/7T1O50h8u8+oyVL6fVN77xUl
//vvC7QaYXOm+u/jGVt8o989nfRa+JfeVU4x1ehDfydn1OX5pRRfapXfbYl/
6/ZG/SfF18HgpT8ovtr8yGllLfx/+b1O/tXvNvV1V9N7zp/lryJoftQzVplE
uLdnrafphFdHf73wit5zVg11CaP48s9S20PxVW/MgAMUv08rtbTo/PEn1WZX
83tRv0asE+eHbZy3jc7/vK2BH52v0yq82UBxfsP714oofr3yOuTR+WwvYHuB
tBf7G7C/gfQ39gdkf0DpD3cv0CPne1gZaz2b/L987etuFF/sb8D+BtLf2P+B
/R+k/7M/I/szSn+euOTFa/r74du1z62n84/uL/pF8XXJy9NQxJdi/pzWDel3
al7nlhTT79Q4fpHjF2X8Pjk6a6KIL4XJy0HVf+/llEu7ARRfnE+Q8wnKfMLx
DhzvION9/6X1Q8j/G+yzT6e/12FWpXGb/J/zCXI+QZlPvEMPLCX/X36zTRrF
1w5Dmwb097E5XwHnK5D56kqbzofp/PLy2iEUv/HLvefQ+ZwPkfMhyny45+LJ
iXR+fv5ld4qvF9+qflB8uSxUCaW46Lpw/DP6Xc+FeiFtKL7Mh55bTXHx0d/v
9zMRF2cVDu5FIi5ijTfsoL+PdENlSDr93RUrS6OR9Peom068cJPO8fH4+pd+
b/Wwj/pNOsdpfsEgOue584Yr98Q5Rw3Mr1CcXnV+aEd/V8p0WHzf6t+pdfmk
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
kXecjzyDHXm39sxamCTnyMhzZJRz5FZjS/OWu6Py5F/7uHNvo8FszMvNDiIv
Zb9Pc6a8eu5Q4fpv4rtHNMe9ozzGPBsyz4aSZ8tMDO/jsTkfTU8nfOqy7haG
qI+JUzMRfU368Hh6f1hcT3MDvQ/pe6TzM5rL8LwVed4Kct66epHnCZ+YY4pv
di8DaK50ffHtQ81EvVicXnpu5d8MnFTYqtPnWVmQ0aRdhULUhUUh+5ucy/ZQ
mPWwNetrkQ91dm9RaSvqSNCdT1MIJ38/kLSP5k0hZ12q500q81ek07xY/9rr
XvTdpqqVRvRdngsDz4VBzoXbnti0kupRv+IP5zPEd8916byLvutv80G19rlc
aPu31o78nmlw7ozd3mbL42FL3dQZNO+odWPjCqq7S4trNyG7362lNmCZsPuX
DBfjqcLuE4MO/NISdue5P/DcH+Xc/+v8zd+pHumYtEom/SfH+u+jusbvCpDf
FaB8V2D+yndCcRNfxSdNh2o7Om2qseP9xObzqO6f6wSG5D8nfTRHkf8wH4vM
x6LkY89t6XXmpLAj/sbCAcKO9W9qBDYTdnSxaryS3p26OSyLp3cvjb0qQ8mO
/B4A+T0AyPcA7cJ3LLDVv64ctbLGjsPm19gxauSfIauFHc+XHO5K+kwf2l2V
9NlkTPuGwf0ClFfa1NjxxJYaO2aPV2lLfdaqgJ9e9H4pfMKh6jnpnQDrZ1eE
HadGPS4jO05s0+EyfZffLQC/WwD5buFGp7VR1sKO5Xlzvch/blZo2BEO3D2u
1L6WsOOd0X9LC4QdD04JUW8u7Mh9JXJfif+3r6zpW5H7VpR96wPLw0vpHXVA
oz2GNE/3jT1YjbeZtwfm7VHy9vvWtLtL70g75s+MJHyelaOsxs88LwCeF6Cc
FzCfj8zno+TzWQ/IekCpB36/BPx+CeX7JbaLgu2C0i6sfwXrH6X+2V7A9kJp
L37XhPyuCeW7pljHQ66EWw5Y1b1fIXCLacNbvuRvKl6z7aMFHpucGzFe4Gbs
vmCTFeGxD+Pub18t8JjR8wYDutK//5iof+KPwGMXWz0xJxyVVu/Qzp/iHNeH
G/ZQ/vnz/tVvwmNnnu4LE7gZrY33xqoIPMbvwZT8HgzlezD2f2D/R+n/HC9K
jheU8cLxixy/KOOX4xE5HlHGI793Qn7vhPK9E89xkOc4KOc4nH+Q8w/K/MPv
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
5ThcTRqewOXsb3/RGeVcPeqk5sDl3HFqmlzC5WiYjYxHOee/X57Sg6+n7sml
tXE9m60atUGdr2eL5RqtAzLTmP2noA9rzpeymzt76Za5p0Gg86eeFZ9TWcjE
JU+v/yplszomTna4nw7m37um4f4OrPKPxf1tYuc/EuXc+3pu4joux0979rq1
XE6s5uxOKCfXe+CPEi6n2chY+3guR29jwWqU86DbsKJUv1Km0B+/O+h6Kqgt
T3pvqJUJBumZd3c6vWGrR1766RRfwCp2Bgwx6v0a1rouCsL+Hb1m6ATz/keC
7rU25v3fP785eTfvr3PMYvdi3t9+xq262H/W4twsrZQy+OYaFNv1fCo87NXg
Nf6tr3vlzNrpZRB4/fXH/J8voCD43LTX/O/5rIWdtvqUgVedi6+9FzyHuCGR
GnE706C5ypEKlONXK3Il/nv1i0Yn8W+h3/tMlBMSv3Q1ymnhrXiNf3Na59qg
nH/+2J9FOZtD3O3PcTm1fC4WoH6L01Txx/VXn9rvpRpft6vz4EggXze9cT83
4PrX0Unfheu29Pi2nZV83azbtliE658UqaI1k69bk/vGc/pzOY+cW3VHOXmj
XMNQzonHBTnruZwHAamtcf1fna6zH+UYbk6fVsblVLef9hnlGOh1VKAclyn5
vrieAyNr7djE13Neynx7XH+/JxcNd/D11B3+uJELX88fNokvDfl6nt9SRw/7
+4xo3GYz778iddFGI94/JnX/Rdyvc1cnRi3h/TcP+rMX+7eIdLmJ63YqI3mO
KV+vUftHJOO6VYbWrMB127Ou0rGAr1e9jn5dcf23GwcWbuHrpr1oc+Zavm7b
ul29iOs2e3iPVJTjaV5ugnKqOswPQzmza7ofRDn7bNa8x3+/q13ji7j+i5b+
aoLr7965ZzTKmRYYpIpyZk45HYL1Sh6Kr02wDqX/m4ONkT8pM9g/Dt8BsHqw
aSm2FzcanK3ktTr5qmJ90OzOvslY973HrGoE9o9OdknEepbi6y1Msb/pgn0t
sd01aUR75LUsV1bMRv7kbLraKPR/9XLq9TKbnMJUvz2YComlbHmJX333+CwY
7Grw6wvvn1F9KBT771I/Gov++w1F84cmvD/r5H4f+7+9MCXQjfcP/LjVXMU8
nl0/VqOD/QMuB/1B+TNO3BnYh/fX7+p/RcH7H+7cvq0H7/9jhXML5NNe9D43
Bvt3Luq0APt/W5zyHMcz2s3UGOV/rP7yD46H6Ci/gDqz6+I7fttMB/3Bd6h8
7LrENKoMSOj72mfUU9UK1tr4t06fvv++0+h3y23NL3zH70yLHwp8h0e9eazF
gvdLFMsKRP9TnUT/J/MNPa7V2aRwv9PkG/bXhfMzsX/wm9fXNLn8b2sWGWH/
wj3JKdj/q0fhqkTeX6e3SSn2X2C0JAL7b9arGreUy+/uI/qv3CX6D3sfmc31
GOR3SLzO7xGcsg20w/PfwtFai98LGDFh3xh+L2BzTtwsbPcsSF+4gbfrevWa
iP0fvzN6iu3rB3of9eft9S82eoPtO/2mpGH7sK5rDf70i4cv5em9cT27jkmL
w/W8cO3g1tuZd+F70+sLP9iWscvvvJevcM8Ce7CadarWKXb3n0t9dXPL2ZZF
is3vrqTBwcsfWx3j7camm6yxPfF2+HBsfx9d3eU8b09Omt8Y29X6L4Ei3n4n
0nrUQpN5Nz6M6F4n3L6CNTK7fKO55Qu4Vj+yAOUfntW/A/bfvfNhFcopWO13
eWOhtWW4lehfp6vob9Ej7nT20PWKoMhm52b7VrDK1Vba42enwtQWtqHe0xcl
zI4S7Wu8RLvkJ186OzdHOXvHjpyDcuS+r3MR7dtHifbgFMe4Y0sL2KL3/VvN
2lnEbp1dPXz/ST5fp58G3aMmJ4xo8d7BqWUFG599turY05dwwPWMxhm3I4qu
rRvOUM0vZ06VDywLKtJg7yyHaZFLC+DHQq9HDlzO3l7fRqIcH+/um/C785rp
q2c1vf2cDa+1rQt+d76VgVf6pk4xiqpQd/eJYWWQ3LU03iEhG1xHvrdYxn/3
4+ixvfnvQr+gPnnH+e+aBGeu3NIpJqHMp+cQ7H9jTkHATN4/vZl4nzBszpjo
cbpnEoatEO/mXcs5/+g4n9e6QVf6z+TjmaT+xArHc+3pz+kuXP7assvTcV4P
FoxpiPL7Ju1YaLkvOKGbjpjXVZrXomkNgMuB0a2qolDOlayjI1DOOvNGvXBe
lYemPtDk8yo/Oijfjs9LvcZSexuf17QFH5rgOAuiMsbM4uOs2/tdvR78dwe6
+/TDeSX83PsEf7fLq+Z9N/J5LT94KRL7j6j75csM3n//jGNllfncfsfEmPg2
eMyWzd3kntMuGyIuLArC/Jzpf+XnyHf8yv96x+/BLmerD1zOW+3C0SjnlbV7
nWwup5lX7BnMezlKeS/zKO9Fvsu3hN7l86V3+RrHmHZ33ZPDZhbN/WDtWAQK
70YLD7TIh319UrYW7N6juDX6nbubfjmYFGuabFqZCdnfRtUrbZwLGW+NlqXV
LoINo0Y+uTUnHx5qQ1VgcDFUDzv9s679U6aZWzyzUUYB9HnaIMmNy3/cbvST
UVx+c7NOuSjfp8tRh7K5fgmtbYT8qDdC/mv7zFXFXP4rHc196Vx+i+ZBtijf
3nJbyAYu39siyFGFy18YO+c5yq/Yuu5mq5FpUPfYI6+NrqXQ9s/pC20HvILY
4E/X69juSPD9dEjji3MFTNWOh8zUVHhZs+tsm5FpbMbxR4eCef8Tv7uk6PD+
23qf3xsUXMxcNn5tpmr/FEJmek1oyOUrXr65qMXlx072LMb+L3/UcsX+eyYU
HbV3Xano+UXId2kt5J+K7Xm9NZdfWKNnhuOJqUrTxP5+LefVRvnzK9qcVufy
60VU5zTg8jXm2wT2US+Gk8FJbRbOeQ0b2yfrdqvP/aMjilv/V16NfJfYgN4l
1qX34rblPB/bl8tp0LtkyAIuZ2BimJMpl/Ps/FMVzFfp+Ve+inx/uJDeH95O
791V56+JWzKqBL739Nb2mvGMhX6PPmnWmPfXh36Y72H7V76Hz86g2vy+sL51
Tkbz+wIF/cvTUQ9ccn3m7czlZOaE6LhzOXVvapihnLWnW37GfIxdf+VjDM87
OR3laH1+DFyfQJ/DA/TtuRyp9z6ZHkzl94gNrDViCN6jv/Xhvv/qw1pWEeut
8D7eKxvkgfdRtue0aLsM5YwY3fu5w//I+Vt/yvYJd89boxyb2cfnopz+Dd7n
H+X6Z/Fk/6uoVx2ueCv1z6A/uy+d5vqzz4JSP9QzfmOPrH3N9UzNobcbUM90
yrm5FPWMucN3a+xvJeYL9cV8WT+a7xsdi5+ot0fFqeRg/4jOyaOwv+a6ewcG
cj3Wf4mQn0LybXfvcOH94WzAkNE4npMVx5T62U/sCxiKfWFvaV/mn/sZifrn
gU5H4w1cb/x+euoh6g3VrChl/sb5v/I35LuIxX+9i1haeUsF9c+ou9NGoZxP
93dPz+Jyzm7PyMW8iN+UF/GC8iK20zuHJvTOoTy3u794tffg+mHlTpdtqB+O
6Z7ei/oh+UbO4Xdc/7TPKu6C+qFj8tPlm7l+UD/U9WkF1w/+62PavOT6YdzO
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
MA/SM2f+igeNo/nGUpwijeIUXYhXmS/ySyFC5Jey4ZRfekPoQ7gk9CGT+rBi
YcOe2D6qg5MG5o08Tnjhg+3zj5g+TuZyBk6sTEc5a6au9kE520+k38XzD0kn
WvLzz/5pE9gM+6+lOiZzqmMqJD08UOA0uCNwGqwlnKZH/HZ94reDif+c9bEY
cB0MFO9vYN5an19f+qD8K0v71sV1U8zPCuL3i6WMHHZZmafx4tLI6e5ZFlYB
nkkTmj3/l9/WJvnfU4T8nSTfqMfPK2gX/OOMF3Tl8j9kz5uO8odR/VRbqp/q
T3ZH/1OxWujY5xYa20/+xw52EXLAW8iBjySnx3JlvjQLFfnS8J7ypUuF3WTm
wm7CD7KbDmK+zFTMF3rTfB+L+bIuYr7wjObbYu8g80sb0+Nb3l7GKnfn/Tvf
lsQnGxKfvI3ma044OZtw8ipafx3q3576b6D+KUsvqu0YW2Dhq6Zd87/2OlTs
O/QT+w5htO/LRT45UxH55KCeLfLJ0wXeYIQ3YAThDTpvbKw4b/CIzpu7OG+s
mzhv4EPn7aw4/yxBnH8mz7/kFRnxit3o/JuK+8jsxH2EMXQf74r7yGzEfYR1
dB9Xkd3fSHa/Ptl9hcBdECBwFxtHuOubqC9gVF/AFlF9gYvAdaxM4DrWmHBd
odBvMF3oN/ab9Jv6J6V+gyVCvzEv0m+naL4xNN/pNN+7ZsXK/bjdYn3U//Jv
fYV+Zk5CP4MZ6WcPoZ/ZeaGfYSbp50vEy+0gXu4+6Wd/cx2l/DsPo//D7wUS
ntlJeEbi2HKBh0FV4GFWRnj4oKjXYMdFvQZjVK+h3l2Jt9lhgbfZGcLbicLe
wUBh79hasnfWwt5BrLB3bCfZu16ifgQSRP0Ia0r1I7OFXwB+wi9g0i+4QfPd
RPO9SfNdQfzYNOLHPpD93SvqWWCwqGdhFVTPUl/4LzBS+C/Mn/yXNQIPwHKB
B9howgOLBB6APQIPsGGEB+YLHMJmCxzCNAmH+FAdlsphUYcl66bTBc6BbgLn
QD3COR7Eq4QRr9KccI6OwFFwSOAoJnHUAIGjIEzgKFZFOOqJwGPMVuAxJvHY
aqrn6kT1XNLvi4ysMD7lmQl7zXYF3L9RwnTD7s3K0U+HkkC9HjG8/YKvV/E9
3m6UfTIP221aXLLudvQtW+93NexEXj5EBHzr1sIrH6b17rOlO2+//6m8OpK3
N1y8rCu2034xZ8IPd2m/OgaoDY/1zGQfVRq4cfngm2EagfIPivpECBL1iewW
1SeO3JlqycfDohIMmvBxwtpT1rrY/5ColwQ3US/JIqleUvojL8kf+U3+iAb5
HSHkd2iQ39FVyIdYIZ9J+fXEOOG7GCdbQ+P8bNL0Fc63xM18P863cXSxKc7X
pG9Imx68PSjNWeU4b1/hNNsE22NJD1wmPTCJ9IDaBuU6sxixzmBM6zxc1InD
HVEnzlpSnXiC2C8WKvYL5H5pibp1mC7q1tkgqlu/8uGpe1TTQhY+Yk0bjK+l
rvk8GONrza42/oV5FxtLFkViHLamNHAX8tWZqYeUdWd/qO7Ml+rObnw/ht+9
VRwT372F+/Td24f3linbC6g9ntqnC54ZeguemT0mnnn8ghaxGGe8cnTaVaxT
a7O8ogHmJZra7lbmE1IdB8g6jtSzEe4n+Pinnm5uifG1Tndt2uD4Ty0vzUS+
fZiuGcM8ST/vPg1w/E5POhljvRvx6kzy6pdarDo+gss/JPJgYQDlwW7Pvq9s
p/xYkPmxvoLnh0DB8zNX4vnntZw+Bsd/Z7SWMdbrRQ29MhHjzu3MQr+0GlnG
0qrO/3iuf5Nt+76yZ620bHi5JK6ovXMpM/mxOLCmJgnWmvnUHjo8D5o5TCvD
vDuql2GyXkbRwXpYay7HZHG+5wsuJ/wkJGE+Z6PRo1ZiPm29WRH3qricA/cb
v8B82rw3N2ZgXdt8qmv72U7EPc951w31/3o54aL4PjjY0vfBH4YOUrZHUvsC
ap8t4pgsR8QxoRHFMbOfTqzAdb7aZvM9jAssLfM4inGBT0u3+GJ9AdUrMVmv
1Eucf1grzj+T5//cYHNLjGtQfBZkfHa76tSbdT4dVAwS8XR4Q/F0p5snGLZT
nB1knL3hemW8mOmKeDHEU7w4W9dDA8fZ/t3tMxh/WWN91xTPww9xT6FA3FPW
iO7p6ZiO7zFvtun9H5fT9G+C76a2GZhXoF20SlnHt4Dq+Bypju/O41nTMe+I
6sJA1oVRHRl0FHVkcILqyJ6rFIzB85Nu12Qc5juFlYdaKeMs4dnmGH/vkNKp
7yv+uz0GFzjh/p6or66s+6N8AybzDd6JejfoJerdQIXq3YaETIkdwuVfqwk9
+YHLP2Ud0x7Pp8zTuL3twX/wrWxvXC/7P7yN1ij9mEi+nkEzLj5H/TDwjL8p
rufD+JrBqB/mxk6NwLyCcM2pE5R5WV2dlXV27ajOrpzq7DyvjNvtzPVA5whl
XQlYnhd1JTuC2yjb51B7D2rXEvlU4C3yqdhFyqd6ZVRkjevZP6jN63R+vwL3
FXhiHsKIqFXKfAyqiwRZF2nb7MNpPA9r74z5hvrBqXF+HRz/D//sDngeWmXr
Xkb9tvN63Xt4bpsM2zgV6/sof4zJ/LE9JbvmjOTy9URdDMRSXcz0uEJlO9XL
gKyX2STy2eDTCWU+G1NQPlurx12Lcb/arcsYj3WFRtNPJ+B5SOt4KQf1Q8vV
ll6Z/F5r6ib44nn7x/2TK97rr/N963zj93pIk6+bMZ9/YMxjZT4D1Z8yWX/a
R3OZKeqHXK3FX7O4nHmvAprh+Xk9YKMq1tesc7ww4iOX8yMgYAbqh4QlTZR1
fM2oju8z1fH1KHrmto7rgS5dhH6cpCLytMdWN3TH9rbUPo/amcjXZXtFvi5k
Ur6uS/HQPrjOSx6vYnjv+oGVI65zx6v7fLAegep/maz/dRQ4AW4InMAkToj8
eFtZP0h5yCDzkKtCr1eo8Ht3SeSTQwHlkz+yaaxspzxzkHnmI0ReNIsQedFw
gvKiXxkssMXznHUwLhLzDJ/5h5XgOG0FnoE1As8wiWf27xj5HPVDepP1fXP5
PR0Z52iA+/VoScc3WLf4MUPULdpT3SJM+aWM51KdNcg6a6rLhkuiLht6UF12
pfqLAjz/vjOa1sM4cvzJpRfw/Oz3VdFH/WA3IuZCHv9di+WGVzA/J+CyvrLO
kfLtmcy3p/px+CDqx8GN6sebHR85HOVb5uyYh/mK5e03bUH9kH/kSyG+t3C4
o5oy3/jDnW5+GAe0UjMdhjikoYOPPuKfVjH7bmRzXNEudJjbh7l+Cav1StTw
XQjX5NjmW1ZmQsWPKZn4bsz65NgrmEeRe269BcbvUn/PHI24zvTo7A2Il9Ie
rLVEfLKvueOp4t17FJ3bCTmfngs58f4pw3q2KgHDKOORTtHPoPXNK4PHjs6H
qv5+oRi/3r8wshvmXQddTVbm+yWcWLprmuvKBHrngc2gdx42dd7n1oPL+Zz1
xtqFy3m1MZmhnCadTVfi+yTT6ho1dORyygetUcZbz9xog+9RKOg9CibfozCs
td3wi6aFpWlVI+U7YB0O31a+AzZXvIPBPMQ7GOwjvYOhX8tRp5+G7Y1FP0T/
iOOi/7eDync52BbxLgezpnc5rpQfG4Xx3NaHchdiPPdHT29l/FrW/aVS3V8X
4p/vpVtO4OvD/lTuyVgU/YzNMjAMxXkZ1Hyfg3Ht3T9nbMa49ptdT5Tzorwm
oLwy0PurXm881etJnjy+hZt+Ly4/8WNu2nwu/+fgZs1RfpLIE2PTRJ4YRFCe
WGHkBTXUM19uDDXCesOn37bXQj0Tk9Th4MB9wQp6jwXkeyyaIn+PDRD5e+BB
+XsOBe08UO+9VG3yDuuDrs5WMUO996a9Eb4bk9BXvBsDviQnZrnGAXzHI7PD
jig8t6kDTd7jufU0HWmGeHjfk9IwPLfzglr/wXOrljvgejk/tyf2FNngeYt7
+vEJ5nsMil4eiud/7CsLLZTjMNT3uDLfvvnqfnj+t7dP+YXntuv1nz54bqN8
x4YV8nM7ebeQ0+elkJMo1g1ixbrBD1o3U7EvbLvYF1ZI+/L71qhIe35u6X0k
tpTeR3ok9hcqxP6CA+3vDXFOWAtxTlgVnZOL7TbhO04KeseJTaF3nAxrNT38
WdPiRt++M5Xv400PG698Hy9FvB/FCsT7UawJvR+lX2vl5b4atpaufUT/9P2i
/yPxnhUrEO9ZsfX0nlVDcY9ghrhHUEb3SNavXaT6NReK020Q95HVzVbeR5ZJ
9/GTuNdwSNxrCKR7LevOqN4HSv+qO3OjurNwiideFnqDmQu9wdqQ3tgp6nSY
tajTgdFUp7PS40sIntsOTadHlfDz1nKf+kasc8za3djJkp9beg8N5Htoh0Vd
Fbsm6qrgNdVV5Txw+IPndnxip/mVXM5Cw5VX8PzXOjYM34tLoPfiYAnJyQjt
rba5U4xCf0vtA5gf1a/nhvYO//89N4WVfpUy/iLfczPx9Dz65348s9Ot/wN5
le1barshr7JzWdVQ5KlaDShU8vz3hqf0Qh7mSGlY5BZ8X2514mLMd1JZsLZI
KV+8i6KwzghQ8vPyXZQf5yKU7W0Wzv1P+2Lb4OihQxNBd7SWkl/6WuRfH/ml
daL+nd0S9e9QRfXvBx0HdGqc/oJV7tS6jXXlccMtXyBPdVvMN8FAzJd1pflC
52jlOy05rgf/837dEorvXKT4ThviPboOtlus+iCetV6XFonrMMS8dyTyb7HH
CjIwbmuU0bE7roPHxwQD5KnUxjybi+/S3Agbnoy/e61xyFTMo6P3ZxQj/nTF
92cS5PszLZrdVra/tO/zn/Za6T9dhuP7AEM+OyvrTG8188E605niPR92W7zn
w+bSez70HgKj9xBYK3oPoT/TGoV4adC49xMRVyv6nFD6U0PE+0IsWrwvxK7R
+0L0DgPTEe8wsIX0DkPRJ+tRiGdi30zoPo3L0X00Wunv6Nf6gPf3Bt1feEX3
d9Pq2BqsL+5oe7sA+UNvs6AtuC/2F7PUG/D9OuJ3JAbjPidatixA3tKw1vII
rjcs+wm9AVJv/DIueqfG5TQ6HR+HvOuJ552HY//HU4+1b8TlnFKNzuH7zt7Y
/j+2vjuu5+97XGZCtkJZRXibGQ3VIRnJiKyiiOyRzCQVIlv2zsosRSGKbpkh
RUMlFCUtZKaMfvc8z3l9vm9+7796dHt277n3nr3u0g7YT4DjpMKN4+Ob2a94
vXwGoN+7dPQyZ/SbOXeDk+inWsNx7Xkc167Mflo7sWA5xgftbabWx3jK0oY1
X+L3+92fIh+OZj4sejMfVtk13fQdjyl5mC3MNRDfhhGfB2vi8zCF+Xxj+2t6
3+Kuw4KTpy5hnNS2zXHAuNgE2/R26B92vOK4XKnvbmW9D/EqWe3MNSlHLFiO
CJUcUa37qyLdDNe95ffPAcxXjCA5BWkkpyCN5ZTLjTTHz3LdfZBRDePF/Z3d
aiM+37X94I9xvaW1WhTguosc7E8iXevT92I/fS/68fcP6HvB34v5/P2jPufW
lcr5l46qsxnpJWmHaQbuS2d3labY7yW6/JPiJ8+9YjUP/dLh45VzEIvoHMRQ
PoepdA5iEp2DqMfnYOQbF/NFzu/5BV7g90uu11ToMXj0khfmcn7/qgkK33i1
M+kV8oed1H9PVKf+e8KY++/1pH47gvvtiBrcb6fY+V499D+0Mb2wH+0453yt
uojnDagfoDhN/QCFH/cDfEx9fgT3+RHx3OfnxuGyekh3CUnaS5HuWu2KMsJ5
9CqloJ5mznoaHGE9LYbwGYIJn+Et47N6RwX/hQbhvwhk/DeoVKIv9cMbrB9C
K9YPRxB9wQmiLzjP9LWX6FG0IXoUy5geJ3N8fyrH91X9G7s3+LkD4ya6U+x+
oz88Y663P+L/Y47L53Fcvi7HhQdnVn2E/Q1Wu0EI0tfmedb38fvshu9Q345m
fVt8YX37g43CJ6NjiE9CKPPJn6TPgxfp85DL+vwW4sPQmPgwDGI+fIb4MBgQ
HwZP5sPryy8ofLXEqMGZf8s1V/Zvr2X/dgvm84WXLrpJ+8KC7QuxgO2LjSTX
on+SXINv00iuFZD9AgFkv8AXtl/mkNyE8SQ3YSfLzW0kN6ExyU14xHKT68HB
gPOjWnF+VLvIWlPc970Aq2dvbLA+d2SY33v0o6rqr1O4/lqV59mO86bsOW+q
gvOmApoXfPOQ85yOjm+PddM1rI5MQz8257tCl7/6bo3tttvBzfysxabS9Zj3
KyyLKO83cE6uMr6Bx4fx+OJM6zaDfQphdftDu1wdM8SXoXFf3RwzwCk9pwTr
r9leFip7OeHBBXfsQ8h5rUKV13rwR74a5jOPf6DpVhL4Unjs1KuPduik0Yve
Yp+l2C8ZwVjXvNIv9jH6YfpQHx5Rk/rwQHfuwxNAdqvoSXarMGa7NXDxwjz0
Y/SlfGYRzvnM9w/+eIPjnOcsVHnOm4INjw2S+4q64XB8gdyXbku/KovkvgxX
Obpg/eCIVdsffZRweudaFCCcQ95e9UU4b+gd0Hkm4cy226SN9u8U6jskYqjv
EIRx36HDZNeLaLLrxQC2659r3VL6mxVyf7ME9ld0nPGPUgd9m+ugVe8VDlq1
YQX2N+N+C6Dqt1AYZeCDftGD7Be9oOrjZDtO6bvC/iWh8i+tN/269WfuXguu
gxCqOghj8vPAVfLzwCT28+STnwfak59HFLOfJ538S/BjueJfgrrsXzpA/iWI
JP+SMGX/kuHBEeXov7q5cIcf+ieTwpuPRf9ABuQp/qveL9O/PN2RBG/67w3G
83SeVeGxqm+x+DxnerVLD9eKvamLmjev/RL8o4597nbijVi5854h+nu3JAd2
RP/Jw3PGSj3mJ67HPM31mAde7K9z6O0eC66vAVV9zeyuNTsj3w6qv8oF/TbD
X3RX/PyTyb8Hi8i/Byr/3t/vH23l94/yqmXuRb9HaVbdf9DvcWFIJS/EE+1j
R23QT6Kh1nQt7uvg1Ecu6Idp07alNu5rc9KXkny5r9ULItfqyH0lh7UJw/jO
qd4749FPdahyJ8VvnPT+aSeUU+ru2usRnq0WW0tQr2tFflTwIT8qmLAfNeuv
94zS+D2jmtSnRVhQnxZRj/u05JI8FRtJnop3LE83UN8YcZ76xoia3DdmLMl3
cZXku/jI8r3m/Fi3xZL/xNs/P491bZ6t86OQj6nq7NS4H5qq7jL0bEB1jLut
nX5rI/K9ovgKQ+RXXGcKbf7qezb2eJ6Tq+RL5rOU+xW9HOl+A170moTjpjwO
PL5gLAQgXVseP26xUNL1/E87FyG/0rX2von1dOz/Fyr/f+2f6wZj32auJxWq
etL3dL8im+5XhP55v0KH7lds4/vtTn32xBVHpc8eXOU+e67khxflCYofXnRi
P3y1Jr93SryNZrwVKrw1NPdTxrm+WKjqi/dptdfFfV1Y4DxU8imxKXjUKrk/
MCL6EmFEXyLxT/oS/Yi+xAumr7nUV1C0or6C8Jj7CoZQnEKU3lPiFGIFxyna
T3Y/gv3lGnF/OUPuL6d1viDm3/VuyVzvdqH3Ck/sL8f9oEDVD6p29d7e6Kd1
Yz/tUOZjPTz6nMa+MRwvE6p4WbstsRPKJL/i/gNC1X+gH8WtoBrFreAAx60a
UtwKQp2UuJXYznGrlhQvgyiKl8FGjpdlULwMSkqVeJlYwvGyTsT/wZH4P6xi
/m9N/B/CiP/DW+b/6zpMCka6zk6bUdZF0nXHGq+XN5N07Rnww8dQ0nXppIG9
T0i6bnN9Twek69U1z7/F+BTLKVDJKVf98eXYL5r7WoCqr0VZUsQX5FdtygcF
IR/4fvQY0TvFK2EoxStBFa/8+92ot/xu1C6Sv7CQ5C+s/FP+wgWSv+DH8tfw
q5c17qtmcH7uVLmvOefb5yp8OMgTMO58v0GDx4FyX0aaLRS/usXGtV+QX1k6
ZiWMkfCML/6l8E9BcWHYQ3FhUMWFR//1DtRUfgcqhPrIifnUR0785j5yRmQv
iy1kL4sfbC+fJ/8AvCf/gAhh/8Bw6ncniqnfnfDnfnfHyf8gtMn/ICrnk/9h
CMEPRgS/sGf4n5IfBk6THwYWsh/Gj84BkukcwJjPoRudGzicV84NFvO5Re3x
XoV9b3y5700I971xuX1U6Yfjx+Nnedy3x1MlTl2d49T32Q8fQP11xWLqrwvO
3F+3arKCJ6BNeCJKGU/cyB8FS8gfBS3ZH7WI8BPUJiv4CSr89CV8hu4ZCj5D
D8Znf+oPLEZTf2Ao5v7Atcn/L4aR/198YP+/Se3TkyW/EjcamXaQ/Ffs3zV9
I+pXTv30wpG+draxbYn6VXOT7isRDzluAs8obiKectxkb1ybzIGS73W95nJs
sZxnyDLjvsj37uQ8OmK1/Q2cmF2+4MWVXDF+WsA0h7in8PqjmdIX6CLrpXms
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
KPn5Wpyf/5nz87+TXioSSS8VQ1kv3daxm5IPz34nofI7DSI9WbQnPVl8ZT25
WrMuStxBm+MOnTjukKvuoLxfw3FPUMU9Ux91V/LP63H++TfOP79EdhDsrKrY
QaI+20HbnPz/yANX2XEOZGdBkL5iZwk9trNSPZoq+dgN+R2ZMZyPnbvshcB7
2TF2Sw+8l5UzrBT51Yf98M3YD5/Pfni2W6Eq2a2gsltV9Xq9uV6vwpbq9VTf
q/H34fx9On/fg7+vwvV9+Ue7K/nb7DcWKr+xia1BBNqnGrZu1igvDMbaKPLX
gf3w29kPP4398KGUVyCOUF6B0OC8AiPKWxDmlLcgRnPeAtD8UI3mF/o8fyGd
D2ym8xHL+XxKH+oqfYp0uU9RW+5T5MT+xtbsb5zM/sbKPxT8h5uE/2I44/91
ol/4TPQrfJl+u3zPVPrw9OQ+PD25D4/q/frD7PfIYb+H6l11A35X/Qi/q+7N
4y3+em9dlf+84a/8ZxW972F6V9lNqnfDV/O74a78bvhlHl/+13vi3P8cOv2V
p6rCh+qMDxcZH44LkxB8h6sXv8Olw+9wab3yMfn3e1uh/N7WM+uPUfgO0Vd+
h6iA3yFq+P6Bzb/fG/Lk94ZWP3ve+vPmeBCZ8KWabZG4G+KmMUHvJRwIOf7H
+1/avO7VhgP7/Nf713eNHaL+/f7RG143pZX/sP96z7r9X+81l/B7zb90vM7/
1zvO/f96x3klv+PsMvLj1v963zn68uml5seLxMeSezad5iYJlwOv/cd6P4OU
ofqOqHelNdC2QPt3lrPBE+V9qDFtE2oNfAFT3tS9lNG6EJzWt6uu5vcUNpxv
O8/JNk/o2Rs0KFqQA4t7lhzxG5cOk94d7dX+aZE47XvjTVBqtMg7op0ScOgl
+Hz1sdaZVgRBJyp1n9k/Cfq/ebAreWcmFL3q2URTzu/lM1od5y/vp94J569S
J9PfUc5vO6tXx2I5v97UytY4f/UDKzfg/B3G5G4LkPM/GF6+HOf/1at7sPuw
YnHT2DpAW6SAVeJSjRYrUqHmok5TcdzIpfrdpnLc3/LcPBwfP0TZL2zrruwX
KkbSflfmbF2F3z/M16uB33+dk7MWvx/4IGELjuft/8cRx8edM/+kK8ctB9I8
Na1ontfjaJ7WFzdGHrHOAxP9OWdPFb4UJzbNjYwtz8b4VdtNXkmifetdRbde
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
60+SH8JWncCqeL9ZB3cbIfxxmvNPvJbw7ztxJXGKhL80KWb0bgm/ZqDZ7lkS
/okTb1ZH+PfWy2/aS8KvmbpsC8JvYBAdj/AveALCXsK/R6d4vOSfYrNueEuU
g439Qy4ZSfhN4j12p0j4b9/72DpBwn/6zIhVCP8SU73V1yT86fZ+mQh/Qafg
Qbp3H4iD+UXDJN2B3qcBLZDuqtXbf7mNHJ8U4Phd0ikMPH/LDMe3mM6SRkH0
/+wFlf5cXlf5HibT90L1vcFEaPhw1W2zDWwXvGW9/ben5UMTOQ/bCyKXx7MI
HjhE8AgVPBl6oa0eyXlUevs3XvcU7Utk077ES97XMjofcYDOB3z5fKpm5GdJ
vQV+2Feeg3pLTp6JDvLzS1cLXyOdaq1uHe8n6TT/iGkdlC/5dI9iCt2j2Mb3
GEr4IOYTPoiljA+zCa9ES8IruMF45ZV82B350oQZdc6jXBu44OkEXPfNAvPm
Uo5A0WuTAavkujqW9Rfjur0J/0VDwn+RyPjf5kUbQ0lH0WeJjuA309HRKo/8
Jd1ZvCO6gzpMd/xesAW/F/y//q5zi6rskXRtUUZ0LeYwXc9ds6up5APR6cQH
xAnmA+s9DjzC8SHEN+A3841XFXWQz1iYEp+B6cxnzONp3aSqX87+u7/rrhc3
tRDONsTHhCnzsTO/dbwk34tuTnxPVGK+V7fIchLyh/hv4Q6VJX3V/PWlWpGk
r0vEP2EN8U/4xPwzop6RC9JXn+dqw7IlfTX9/c3RRdKXKb9neoTfM+3IcdJd
jy4b7JB0pz4gvvY8SXdlI2JTDSTdBbcaPKGPpLuxKxpPzpZ05/ux3CxZ0l0+
8X9II/4vajL/n3Zmpx/SnfeWDv+kSrqrvHn5YaS7MJIjYERyBKqxHPHc2KIT
8o3iGRkNke9NMKozDvd1k+QR3CJ5BCp59KKb+tMmcl9BBzXr5sh9Zb45VI58
Lzb54GXkewevjTo9R8K/uW/FfoS/aKr2REMJ/8JBb24h/FUWtnRG+F+T3IQ2
JDeFDstNn0nBpb0l/AffmkVlSvjD69etkyjhP0HyF3I7KPIXClj+HiN5LTJI
XoNKXp8m+S5YvsMylu/F01OXSz1EfO7v3hD1EL11Y6JRD+mR6nJsnPczsa3M
I2xVSaGwuWH0u1/7p3CW7CCoSXaQuM52kDnZTXCG7CZhyXaTH9lZ8NhbsbMg
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
NpoSTk9T51L0zy/OyuiJcN5uUVmg/HX7rV5HygXYfTJlCcL5pnyuhtU/8dd7
z/WtQLobNH1JGfL/0LDTl+95p5il1p70R1/Kus6h6WfGJ12fMq8iHfn/wfpJ
7sjHrsZlFQ+Q80yjcbGPxy+V1DXGeQqu7P6jn/mhgGb5p+U8PWhdGMLrmhA+
iDeED2IZ48PDgoEzGrU48b84XTnHmy54bqw5VuqTsUtKW62W+mTi+GPxqA9H
UnwQBlN8UIzn+OBZiidCEcUTRWeOJwZQ/BGuRCnxRzjN8ccvWWnvUJ9sUT2+
GPXJqT1C1qE+WTB+cbcdbmf/F6drwnG3NIp7irEU9wRV3LMKxUlFMMVJRTWO
k9YhehdlRO8iguk9dFK7lU3lfgP+ius9enF/uJTzYsyVrltRf37T0SkL9/uL
4rbwjeK2YjTHbV0pzgubKc4rvnGcN5DiwhD9TYkLwxWOCydmzMzE/faackwL
/eHfl569j/tNySqcuknul88ffvL5d6B4tGhB8WhQxaOXWGUOQ/12WuKi8qZS
X+22Z3KQEjc/bL8kSeq3lgX3Bkp9WnRyWjYN9dtBFAeHlxQHF/YcB/+deP8H
6rdbY33vSH1azLZek1JZ6rfziO+JDsT3xGHmeyePrHTHdSv92rcd5/n6+XNX
XFd3yWyjdLlu1tc7tnI94eK+xFXq9aBBcXzoTHF8sZ3j+Cfzlw3FdcuqLqpT
Ta5rtNRNB/Xq3iRHxCCSI2Iby5Fs4j/iHPEfoeI/3lUfeyFd/zKOnOMj9cyW
z9u/QroeSnJNLCK5Bl9Zrh1uEhBVIfXMCe1OfTkj9cwqTns6hEg9M//Vyd5S
nkYfJHkKKnn6u7aSzwBjKJ9BdOB8hvEkx6ERyXGxneW4V17/9UukntlvStVE
1DNb++lod5B65i7dzp8wXna2p6ET6pmbXLSaIt9YSfkV4izlV4hhnF+xj/QW
YUJ6iyhkvWVBkrpAfluuEbd8pdzv534eAbjfYtKXRO1vir4EpqwvXQ66NO6H
3O/FwDNHzsr9RjVfPhr3W5E9pY/U06JZT4PurKetofwQMKD8EOHB+SEzST+E
dNIPxRbWD88NjEn0kPtd0ttgJ+436EZ+G9xvneNmphjH/BC3NEzySRHSqswC
93uT9ApxlfQKcZf1ikukD4sVpA8LI9aHW9iLR1L/if5I+g9sYf3HKNxP8Tux
/xZU/ttw0s8hmPRzWMD6+VLTqOZST7OoTXoaNGM9rZL+09UpUt8bGGRYG/U9
39LUOajvRfG7pe78buk0frd0vvr5h6hHrSC9UQxlvbFzDr3/UrDG6493i8rI
HhGxZI9ACdsjp6000K6JZrtGvGa7Zvg4szT0kzuRfitOsn67Najw9n99b1ir
jsL3rVzqn/n3uwbPkmcqfrNk9pv9z39O9hfMIftL7GL76/wArxFSn4/OIX0e
drE+f8q2QvGzsX8evrN+rtZDsftgDdl98J7tvrfu/X2k3WHhS3YHvGe743rl
ge2S5Dk/MqtxGM/5msaEkXjOVvwuan1+F9WG30Udf1F/hrSDLFqSHSR02Q7q
oabs12L/r6Iz//bjXSc7V7iTnQv92c41nTEM7eVotpdFOtvL1p4rxyBefSN7
TSxle61VQueY//reqf1LpU+0Rt/Fyb4OD6JXGNK69Ud8XIl+Qo6PCFV8JI3s
erhrpNj14kcHsuvrkl0Ji8iuhH/Yrjzctk6EtdQ/dWb3WIZ69Z5HBR6oVy8k
PwOsIT8D3GA/Qwfy/8AY8v+Ayv9jC6N/DZfzhL7za4nzjG6btg3nsSU/Cfwi
Pwn4sJ+E/WDwnfxgoM9+MP2Tc0aj/IoJ8+8TLOH3aXnRCfkJ+zfgG/k3IID9
Gwv6PNNOknxp7reY1OVSv3oxq3gL8qWeFEcWGRRHhs8cR67/YkxfpIvUKxcK
8b40V1/ZhX6tqhHLsqU9LqbeHdQU9cAZ4b31kG+cKQ6fgnypSorzINQD2zft
poN0Pd1u8BmEM6PP1TeYVxZwfUdVhLPjxmPpyCeHmIXf85TwPG188DHCM4ni
6WI0xdNBFU/ffP9tEMIz5tKjMKTTC9ZvNZC/3e/r176ehMdr9OZ5qO9luWhb
IzzLh81ah/iflO46CfF/goPlHfSbraRxkUjjYhyPP6Z5YAXNI17yPFtpXRhL
64ozvG53gh+MCX5Qwe/c5f6Z35FPxIfY3/tQfhndsMlBfj6LzkEconOAvXwO
QXRuohKdm9Dnc6tN5wzOdM5Cdc4N6V7gKd2LqM73soTuF8bT/cJLvt80tyyr
cgmPYx81K5Qvxuu6aIZKeNoT/ghfwh9YzvijY+dZ7iXlfrDuo73VpdxP84q7
jX680KUz+6VJ/SH0kf4E1Fv6LugRMUbqDwn9E86inuBx4+UI1BO8pzzzRP2k
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
XvWlHY5/P7t4Bv4+64Nabfy7x1/jLjwOf/lhbrCfobDtnFisg+vBdXAfuQ6u
7l91cN/ZX7GA+i8JH+q/JFpy/yVDskeEDdkjoh7bI+PYr5XFfi1T9mtptq73
n/4cT/ZrlbFfK5f9WmvYz9OX/Tyb2M/jSf0kIYn6SYpP3E/yB/WrhHjqVyn6
c7/KR2THiSVkx4lxbMeNJTghmeAUVgznJB5P4vE+PO5LcIpiglO8YTgZfvGe
xz/w+Kq/vs/n8Yl/zW/B8/tXHhfzX+9LLqH7FbXPKfcrpvH9Mj6IyjzuzOMn
yZ4VO8ieFZWukz3L+Al6hJ9iCONnGx5vw+P9eDyW8FPcJvwUqvpNxltxh8fr
83j0X9/X4vGWf81vxfPfcv+A9GhxiehRjGN6bDlj2n+O2xEfEBq/FT4gujIf
YL4hKog/iI483pT4jPhIfAZeMJ+pQ3xJDCC+BKnMl2yof45oSv1zoAX3z3lK
/BB8iR9CJPNDN+J7FleI78E85ntXiU/CSuKTcJf5ZBOqX4Y0ql8Wb7l+OZb8
xvCN/MbClv3G2a77Db9KuXay/897KNdMNscr9VbOxP8l3Sn8H7yY/7cgeSEu
kLyA2ywvvKivkXhCfY3AnPsaHSY5BQYkpyCI5ZQGyaPovSSPYDfLI2OSX2BN
8gtasPzyoPp3SKL6d6HH9e9qIYp/HvqSf14A++fvpuo/qpD7euI75hTuK6pf
mVK/tuj3LBush1rk6R6M+djZad7fsK/Cy3c+b79hnVScx7ggOf7ObUprzEP+
ETnF+N91YT+5Luwr+Z2A/U5whv1ODd/9Kn0s4Zzq4/YG5XXcbl0rhHMH6S0i
jvQWoct6yzPST8Qt0k9EGusnKaTPWPQifUY0Z33mKulL0JH0JVGb9aWqPxX9
CqxIvxLdWL/SiWxp/u86r65c5xVIfjnoQ345WMd+udqNt45G/Ln59dBohP+4
zz4nhP8l6ZNiDOmTIpv1SRvSG8W3boreKI6w3niB9Mzo0aRnis+sZ14iPRYE
6bHiJ+uxk0jvhU6k94ohrPcaWVc6jHJWfXXgjYNSzvaxOz1zmpSzL6nvoqhC
fRdFIfdd3Ez+TNGE/JniKfszu1LfSBFDfSPFZe4beYr8q+I++VeFyr/aLGjm
d1Pzu/Crvn3MS4nPNyxXLEiV+Hy0j4NzlsTbX60tOiDedhN625zkvkLIDyw8
yQ8Mm9gPbP5gf2l/OU+O9oaJOE/RwbFDcZ7vPxPd0b/963ffTzi+d8eW1Th+
z2FL/URJ782b0Pw1rtP8u8j/LKqQ/xm2sP/59JMdXZE/37tSQxv5c9Kt0Goo
x4wa3N3nva5AJF25fAjz3mcdjXStZpMJb+ZqxaK8G94lSR3tDo9RHZsjH3vF
4xN43JvH/7mc+OG/7Lume0f64brHvEyGYDxu4NhXRvj9mFKtwT5yXesD90Zj
v5RqfeMNMD//lMVTbdQfal2o0gftvkM1Jw5DPeI4j2vz+DEed89cothT/7A9
NZrtqcdEp+Ia0Sm8YTqdRnQtVhBdQzrT9SjK84frlOcPFZznf83lhjfCX23j
lkq4nt/dZifxJ8dBRDnFQaALx0GOUb2qqF1NqVeFHlyvWp/qXuEd1b3CBK57
Tad6BGhF9QgQx/UIDkd/G+C6AY8nJOB6xS0KFuL8HN8Rmyi+A5s5vvOD6nPF
carPhRlcn/vrkFLnC7ZU5wt6XOdbhfpDQij1hxQ/uT+kXtqit1+7ZUCNLjfv
xwx+K0600ts9uPwVjJoVumekdyzsv6BuURxfIGao75n+bPZrKItV+l6CPvW9
FFbc9/Lg68H5ZXIed92+qULOk1EtYTbOs8rt2DkHOY/dgk15RXIeY43243Ce
Xo77TI0l/peH3f2GcsFm9fOqKBeSHG9dfS7pKHDc8yFor/VdGFYN+f8ait+J
RxS/gwscv3u9OM6kn5ynzoNvO3CeZx8jstEefGxYKaqHpKOcvSHt0U78fPd9
E5y/nWZQo4eSjm7a0PzarjR/bYpLil0Ul4T5HJdcR3qg6EF6oNjMeuCx/IQv
XvL8L/acfRHrj44emBmD925P9win6R5FEd/jGB6/yOMfeDyd9OHofqx35bLe
5UB6uJhCerhQ6eGu2a0C8d4PvFwxS64n2k3wcMf7v0p4C5qEt2Id4+1lHtfm
8Y08/onskf9Pz1En+1S8IvsUbNk+7Uv2rPAlexa+sT2rTf1sYRX1sxXfuZ8t
WPWI/y7xYWbJQFPEh0uOGnutJT50cF320U7iQ9iNLW0RHzabXXmYKfEhnvr0
wgjq0ytUfXoH7FV/9FPOM/na7QHRcp59LS/PxXl2nphdzVHO82B2vYRCOY9G
t8HXcZ6BYV5L0W6d1+5tR9RDVp1y6eIl5UiXz73Gov04euuIPagXZRu5a+I4
94sWLahftBjN/u02uus2Svki7Oq71DubcVU01XIsdZHy5dE/73qNlPMf/RCh
hvPsj9v0HuVU41n39qC8K4jwEriuT6ORw3F+Y5JTQp/klOjFcqp9nJXyfs07
zpfYzvkSf/f73cL5Ek04XyKX8yWyOF9Cj/MlzDlf4jTnSySVGHfEfAkPzpdo
wfkSIzlfwp7zJS5zvkQ3zpeozP17n3O+hAbnS3zjfIlVnC9xieq7xWKq74YQ
ru9W8c+qzD83ML7tonorEUP1VuDH9VYHXItbYD1mXtvYT9gnpGzrEyXeeovq
08VZqk8Xt7g+fQPV0QugOnpoy3X0Kv55mPnne6avHVQXJqZSXRjEcV2YQee2
k57Ide++TaiEdaC1vrZZiesGUx8AYUd9AERt7gNg6v1gINaXRfyqq8ituYfq
ayO/t9u/WPP5yEwx8Oe0h1iX2NrzSjDydU3iM9H3ic+Iuv+vsCsPyyl9/3aK
wUiypChL2ZkwVO9jiSyhb0hERHYSqSyhFcMkRuGr0pTKGIoZa1TPDJHsISY1
jZ2SrdSYbN9zv/fnzE/v1XX9/uq67uvpOed9zjn3/bm3zw09E2fnVER6bNaD
B2MeUL7YL6qQ7LVXx5nOuco+V0rPXyJ97enpW0z7LOTvXSTz9y7M8L0fWmxc
QfI5me3/ovP0dzC/TvK1rTwcbiv7xHyc+zv9f7PNJ+Npv0zWq5oDrFdlf+jV
Hz1izOh+HE0vRVE8xPnM+mmk93I3L2uZr+yTUpqZS/s8X738Lf2+GNZ7IpP1
noiG3ms7z6KA8Gd9+0N6FE+LqLzqS9/Fp4S/TtN38SrdyIdwe9CPD5xJjnkN
ciu+O3VeQ5pFs+H0vWwzC/GNV74Xi9SGCyl+EpG3I4q+64E9Au7R93VpWEU/
2uet2dIPFP8Myh6+h65bc8LpHST34jiMtCzVxmGkOeIwbTgOoGmMOooPiAO8
0amjCIedRX2ICEAdRRniEuD5kQtRR5GK+MZ0jrdkRKGO4jvEW+7r1FH0Bn5Y
gDqKs6ijeI74D/iRZC3UUexGfMmQ+cok+MpEEvjKupoEHSAeubayYESw8j6/
8dZo64UGMn+a3Mr8afIj+NOcmedNjmCeNyHA8zbs7annxJuxZmuxM9X/GH4K
d6V9Apl3Tk5l3jm5HbxzxxmXZrRjXKr4+4xLY8/vfEy4t0vO7i6FynuVpTfD
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
IP8DKkHd3A==
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"a\"", TraditionalForm], 
    FormBox["\"b\"", TraditionalForm], 
    FormBox[
    "\"\[LeftAngleBracket]\[Psi]|h|\[Psi]\[RightAngleBracket]\"", 
     TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{406.8717812436806, 307.28366121118324`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {(-2) Pi, 2 Pi}, {-3.147304729620999, 
     3.147304867565549}}, {{-6.283185307179586, 
    6.283185307179586}, {-6.283185307179586, 
    6.283185307179586}, {-3.147304729620999, 3.147304867565549}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.7972036887938718`, -1.7726272061625237`, 2.2534089040735896`},
  
  ViewVertical->{-0.47412365786734223`, 0.46764009013634694`, 
   0.7460023479505683}]], "Output",
 CellChangeTimes->{{3.914242974388842*^9, 3.914243022382869*^9}, {
   3.9142430994286747`*^9, 3.914243118185281*^9}, 3.914244412885537*^9, 
   3.914244963262951*^9, 3.9142495745755568`*^9, 3.9142497289751987`*^9, 
   3.9142497921575937`*^9, 3.914251497652585*^9, 3.914254247411696*^9, 
   3.9142544473533688`*^9, 3.9142551220175123`*^9, 3.914258054828668*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"7360fe82-ce04-4854-8c31-9389d980c481"]
}, Open  ]],

Cell[TextData[{
 "Often we are interested in the minimum eigenvalue of the observable. If our \
operator ",
 StyleBox["h",
  FontWeight->"Bold"],
 " is a Hamiltonian, this is the ground-state energy."
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
  3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
  3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
  3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
  3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
  3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
  3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
  3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
  3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
  3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
  3.914243320618903*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"ec7b25bb-513a-49cb-a9eb-dd8f12f87f91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", " ", "@", " ", 
  RowBox[{"Eigenvalues", " ", "@", " ", "hM"}]}]], "Input",
 CellChangeTimes->{{3.914243331756195*^9, 3.914243341198434*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"d9bb83e6-c084-4cc5-b036-f2621d4fa2d4"],

Cell[BoxData[
 RowBox[{"-", 
  SqrtBox["14"]}]], "Output",
 CellChangeTimes->{{3.914243332867366*^9, 3.9142433413201857`*^9}, 
   3.9142444129112988`*^9, 3.9142449652504883`*^9, 3.9142495746033583`*^9, 
   3.914249792183197*^9, 3.914251497694446*^9, 3.914254247438211*^9, 
   3.914254447379599*^9, 3.9142551220420227`*^9, 3.914258054853801*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"1e5112d6-e710-4278-ac42-b7c2928c9017"]
}, Open  ]],

Cell[TextData[{
 "Alas, our parameterised circuit generates only a strict subspace of states ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{
     RowBox[{"\[Psi]", "(", 
       OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
    "Ket"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "438652bf-0766-475f-8911-cad5e40f88dd"],
 ", which is unlikely to contain the true ground-state. Indeed, the lowest \
our circuit above can produce is:"
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
  3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
  3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
  3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
  3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
  3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
  3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
  3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
  3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
  3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
  3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
  3.9142436063341427`*^9, 3.9142436083150873`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"19cc4069-4064-4f22-92fb-2481423a0add"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MinValue", "[", 
  RowBox[{"v", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9142431540432796`*^9, 3.914243156136237*^9}, {
  3.914243206324499*^9, 3.914243225366912*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"7dbe3228-0101-4efa-adf9-416766a4e1a7"],

Cell[BoxData[
 RowBox[{"-", 
  SqrtBox["10"]}]], "Output",
 CellChangeTimes->{{3.914243211798624*^9, 3.914243225646736*^9}, 
   3.914243464726685*^9, 3.914244412979056*^9, 3.9142449668099747`*^9, 
   3.914249574669767*^9, 3.914249792246426*^9, 3.914251497832224*^9, 
   3.914254247503573*^9, 3.914254447446115*^9, 3.914255122300161*^9, 
   3.9142580551456747`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"d3e2619f-0093-439c-a862-9f80429cd53b"]
}, Open  ]],

Cell[TextData[{
 "In principle, we can add more parameters to our circuit and increase the \
size of our accessible subspace. Here, we\[CloseCurlyQuote]ll add introduce \
additional controlled rotations with parameters ",
 StyleBox["c",
  FontWeight->"Bold"],
 " and ",
 StyleBox["d",
  FontWeight->"Bold"],
 "..."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ7f7FavIlzbeOb5/2rgTRYlPrN4LofXeYtoPoDSyW
+0D0kbvH94PoiKhn50A0n5D9JRA9J97kGog+LZ92E0RXOeXdB9Ep58Qfg+hC
7aSvIPpcTfAfEF26x0jyMpDWKjwuC6IVQtPNQPT6ji/mILrOU88WREu0VDuC
6KtLvNxAdOUifXcQ3XRS3htEL1mlEgii/Yy6YkD04pamBBB9sP5jNVg/i30d
iP5gxzAHRPOdE54PokWEmZaAaPfGtxtAtM/GU4dAtJEo12EQvceg6hKI1lsl
dgNEeyx6/gBEyx3a+BhEHxKZ+BFEW7u2fALRAOFZpXE=
  "],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"1b7bf369-8d13-4100-b886-bec931e7bad4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"u", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["C", "0"], "[", 
        RowBox[{
         SubscriptBox["Rx", "1"], "[", "c", "]"}], "]"}], ",", "  ", 
       RowBox[{
        SubscriptBox["C", "1"], "[", 
        RowBox[{
         SubscriptBox["Rz", "2"], "[", "d", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawCircuit", "[", "u", "]"}]}], "Input",
 CellChangeTimes->{{3.91424136200288*^9, 3.914241386130516*^9}, {
   3.9142414261246433`*^9, 3.914241468739492*^9}, 3.914241516677422*^9, {
   3.914241762292317*^9, 3.914241763903315*^9}, {3.914241829797469*^9, 
   3.9142418298546877`*^9}, {3.914243503009447*^9, 3.9142435259541073`*^9}, {
   3.914243781309751*^9, 3.914243841360817*^9}, {3.914244220865003*^9, 
   3.914244227367405*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"c06dfd65-3858-4fe8-96ca-b059c7ea2cb9"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {{LineBox[{{0, 0.5}, {1, 0.5}}], LineBox[{{0, 1.5}, {1, 1.5}}], 
     LineBox[{{0, 2.5}, {1, 2.5}}]}, {LineBox[{{1, 0.5}, {2, 0.5}}], 
     LineBox[{{1, 1.5}, {2, 1.5}}], LineBox[{{1, 2.5}, {2, 2.5}}]}, {
     LineBox[{{2, 0.5}, {3, 0.5}}], LineBox[{{2, 1.5}, {3, 1.5}}], 
     LineBox[{{2, 2.5}, {3, 2.5}}]}, {LineBox[{{3, 0.5}, {4, 0.5}}], 
     LineBox[{{3, 1.5}, {4, 1.5}}], LineBox[{{3, 2.5}, {4, 2.5}}]}, {
     LineBox[{{4, 0.5}, {5, 0.5}}], LineBox[{{4, 1.5}, {5, 1.5}}], 
     LineBox[{{4, 2.5}, {5, 2.5}}]}, {LineBox[{{5, 0.5}, {6, 0.5}}], 
     LineBox[{{5, 1.5}, {6, 1.5}}], LineBox[{{5, 2.5}, {6, 2.5}}]}, {
     LineBox[{{6, 0.5}, {7, 0.5}}], LineBox[{{6, 1.5}, {7, 1.5}}], 
     LineBox[{{6, 2.5}, {7, 2.5}}]}}, {{RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
     InsetBox["\<\"H\"\>", {0.5, 0.5}]}, {
     RectangleBox[{0.1, 1.1}, {0.9, 1.9}], 
     InsetBox["\<\"H\"\>", {0.5, 1.5}]}, {
     RectangleBox[{0.1, 2.1}, {0.9, 2.9}], 
     InsetBox["\<\"H\"\>", {0.5, 2.5}]}, {
     RectangleBox[{1.1, 0.1}, {1.9, 0.9}], 
     InsetBox["\<\"S\"\>", {1.5, 0.5}]}, {
     RectangleBox[{1.1, 1.1}, {1.9, 1.9}], 
     InsetBox["\<\"S\"\>", {1.5, 1.5}]}, {
     RectangleBox[{1.1, 2.1}, {1.9, 2.9}], 
     InsetBox["\<\"S\"\>", {1.5, 2.5}]}, {
     {FaceForm[GrayLevel[0]], DiskBox[{2.5, 0.5}, 0.1], 
      LineBox[{{2.5, 0.5}, {2.5, 2.5}}]}, {CircleBox[{2.5, 2.5}, 0.25], 
      LineBox[{{2.5, 2.25}, {2.5, 2.75}}]}}, {
     RectangleBox[{3.1, 1.1}, {3.9, 1.9}], 
     InsetBox["\<\"Rz\"\>", {3.5, 1.5}]}, {
     RectangleBox[{3.1, 2.1}, {3.9, 2.9}], 
     InsetBox["\<\"Rz\"\>", {3.5, 2.5}]}, {
     {FaceForm[GrayLevel[0]], DiskBox[{4.5, 2.5}, 0.1], 
      LineBox[{{4.5, 1.5}, {4.5, 2.5}}]}, {CircleBox[{4.5, 1.5}, 0.25], 
      LineBox[{{4.5, 1.25}, {4.5, 1.75}}]}}, {
     {FaceForm[GrayLevel[0]], DiskBox[{5.5, 0.5}, 0.1], 
      LineBox[{{5.5, 0.5}, {5.5, 1.5}}]}, {
      RectangleBox[{5.1, 1.1}, {5.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {5.5, 1.5}]}}, {
     {FaceForm[GrayLevel[0]], DiskBox[{6.5, 1.5}, 0.1], 
      LineBox[{{6.5, 1.5}, {6.5, 2.5}}]}, {
      RectangleBox[{6.1, 2.1}, {6.9, 2.9}], 
      InsetBox["\<\"Rz\"\>", {6.5, 2.5}]}}}},
  ImageSize->240,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.9142435136001062`*^9, 3.914243526417243*^9}, {
   3.914243824176556*^9, 3.914243843973693*^9}, {3.914244227683625*^9, 
   3.914244234066877*^9}, 3.914244413005087*^9, 3.91424496860903*^9, 
   3.9142495746957073`*^9, 3.9142497922788773`*^9, 3.914251497903743*^9, 
   3.914254247530281*^9, 3.9142544474711847`*^9, 3.914255122329575*^9, 
   3.914258055327875*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"12ff5d5f-1533-42ec-8606-d9d52a436654"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]", " ", "=", " ", 
   RowBox[{
    RowBox[{"CalcCircuitMatrix", "[", "u", "]"}], " ", ".", " ", "in"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", " ", "=", " ", 
   RowBox[{
    RowBox[{"Conjugate", "[", "\[Psi]", "]"}], " ", ".", " ", "hM", " ", ".", 
    " ", "\[Psi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"v", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"v", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "\[Element]", 
     "Reals"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.914243528816141*^9, 3.914243582058407*^9}, {
  3.914243873490925*^9, 3.9142438757503653`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"095c394c-b384-4eec-adf8-b6be198256a6"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"Cos", "[", 
   FractionBox["c", "2"], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "3"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", "+", "b"}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"b", "-", 
       FractionBox["d", "2"]}], "]"}]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", "-", "b", "+", "d"}], "]"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", "b", "]"}], " ", 
     RowBox[{"Sin", "[", 
      FractionBox["c", "2"], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.914243530406804*^9, 3.914243584925617*^9}, 
   3.9142438797016993`*^9, 3.914244237050564*^9, 3.914244414485156*^9, 
   3.91424497252159*^9, 3.9142495761395597`*^9, 3.9142497938162727`*^9, 
   3.914251500727788*^9, 3.914254248932271*^9, 3.914254449020267*^9, 
   3.9142551238793173`*^9, 3.914258056861362*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"22882494-08b2-444a-ad47-212d34e1e83c"]
}, Open  ]],

Cell[TextData[{
 "which enables producing states a little closer to the groundstate at ",
 Cell[BoxData[
  RowBox[{"-", 
   SqrtBox["14"]}]],
  CellChangeTimes->{{3.914243332867366*^9, 3.9142433413201857`*^9}},
  ExpressionUUID->"9ea66a3c-df7f-49d5-9d01-c578ef8c4c8e"],
 "\[TildeTilde]  -3.74"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7f7FavIlzbeOb5/2rgTRYlPrN4LofXeYtoPoDSyW
+0D0kbvH94PoiKhn50A0n5D9JRA9J97kGog+LZ92E0RXOeXdB9Ep58Qfg+hC
7aSvIPpcTfAfEF26x0jyMpDWKjwuC6IVQtPNQPT6ji/mILrOU88WREu0VDuC
6KtLvNxAdOUifXcQ3XRS3htEL1mlEgii/Yy6YkD04pamBBB9sP5jNVg/i30d
iP5gxzAHRPOdE54PokWEmZaAaPfGtxtAtM/GU4dAtJEo12EQvceg6hKI1lsl
dgNEeyx6/gBEyx3a+Bhs7sP8NyC6ZPKptyD6Aa/nZxC95suLbyD6+JoXjFdA
+rnbWEE0AOhTt6g=
  "],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"2061b5b1-1ab8-4487-840c-5568db58903e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NMinimize", "[", 
   RowBox[{"v", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}], " ", "//", 
  " ", "Chop"}]], "Input",
 CellChangeTimes->{{3.914243662878731*^9, 3.914243675943213*^9}, {
  3.914243915368441*^9, 3.9142439161905127`*^9}, {3.9142441513400707`*^9, 
  3.914244155278246*^9}, {3.9142442403925877`*^9, 3.914244241897868*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"03fe8dfb-e386-4299-964c-594310a88f7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3.6322598255302423`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", 
      RowBox[{"-", "0.32175055439664224`"}]}], ",", 
     RowBox[{"b", "\[Rule]", "0"}], ",", 
     RowBox[{"c", "\[Rule]", 
      RowBox[{"-", "0.8554633011568559`"}]}], ",", 
     RowBox[{"d", "\[Rule]", 
      RowBox[{"-", "2.498091544796509`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.914243676620068*^9, 3.9142439166644297`*^9, {3.9142441492961063`*^9, 
   3.9142441555185204`*^9}, {3.914244237205318*^9, 3.914244242225397*^9}, 
   3.914244414556546*^9, 3.914244973570405*^9, 3.9142495762224073`*^9, 
   3.914249793943616*^9, 3.9142515008273163`*^9, 3.9142542490071497`*^9, 
   3.914254449116784*^9, 3.914255124118224*^9, 3.9142580570418*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"eb365651-7979-4704-846e-bff15bfabc99"]
}, Open  ]],

Cell["\<\
Beware that a larger parameterised observable space is slower to explore! \
With only a few more parameters and qubits, our variational system also would \
become too large to study analytically like we do here, and we would have to \
resort to numerical study, as we do below.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ7f7FavIlzbeOb5/2rgTRYlPrN4LofXeYtoPoDSyW
+0D0kbvH94PoiKhn50A0n5D9JRA9J97kGog+LZ92E0RXOeXdB9Ep58Qfg+hC
7aSvIPpcTfAfEF26x0jyMpDWKjwuC6IVQtPNQPT6ji/mILrOU88WREu0VDuC
6KtLvNxAdOUifXcQ3XRS3htEL1mlEgii/Yy6YkD04pamBBB9sP5jNVg/i30d
iP5gxzAHRPOdE54PokWEmZaAaPfGtxtAtM/GU4dAtJEo12EQvceg6hKI1lsl
dgNEeyx6/gBEyx3a+Bhs7sP8NyC6ZPKptyD6Aa/nZxC95suLbyD6+JoXjFdA
+rnbWEH0sSm5nCBaq3s7N4ielVMiCqJvsIbJgmivngQdEN3Kfk0fRAMAgaTN
xg==
  "],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"c4936721-56c0-481c-93ae-e13992bed2cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gradient descent", "Section",
 CellChangeTimes->{{3.914244337526918*^9, 3.914244338501814*^9}, {
  3.91424448787783*^9, 3.9142444989369164`*^9}},
 CellTags->"gradient",ExpressionUUID->"ab27abfe-b923-4d81-a7bb-e3c903453b8d"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s consider a random ",
 StyleBox["7",
  FontWeight->"Bold"],
 "-qubit ",
 StyleBox["30",
  FontWeight->"Bold"],
 "-term Hamiltonian"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwdzEsowwEABvBZlsdGwjwOmCgZmdYiCnHwZ0SmPchjlld5rGmUYfJMXpdx
0UrNLtbKJjVKZGR5tMOwpgjNcPAvj3FC9u3w9bt835cskwvaqBQKheULJLz5
Gkc6WUx6FtZhzPKoGe7dUC3QFJi3B49ubftQUv9kh+GRRQ6obeY54VlS+zVU
lfTewVZ7rBsqMmRf0D5c+wP7d7nxFz7ZClsCZAk7cuDGjDcXqsuzCmDc5FAx
vNLzS+GgjkPA8ZOkCqg3pNbAKu5sA1ybHJfCg9H3If8+sEgN3wopWhhuj1qF
0VFUPSTGSBOsNJ9aIZcZegh3s1UOmGWIccEy3fM9TLSa3f7fB/krVGpOSXgf
Vv4Jjd6Xb2gzvgRcYk+fpsHjpZ4QyJ6z0OFKt5IJXTRRAuTPSzPhVJCTA/+C
c3hwa+CxApIfZyIYIakTw7SgzkZ/T/jcAm8Yv30w5ZyhhIRnRgVVBvEIbKJN
bMO7ao1ft2DTCrt2Fo/gP1daCMc=
  "],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"a0239bf2-b6ec-4785-9acb-bdc1775c1fd2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nQb", " ", "=", " ", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"h", " ", "=", " ", 
  RowBox[{"GetRandomPauliString", "[", 
   RowBox[{"nQb", ",", " ", "30", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.914245576087592*^9, 3.914245641190786*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"a6e250ec-d34b-49be-9bd7-6af84db9f101"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.8041995214109798`", " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["X", "3"]}], "+", 
  RowBox[{"0.5887166286590966`", " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["X", "5"], " ", 
   SubscriptBox["X", "6"], " ", 
   SubscriptBox["Y", "1"]}], "-", 
  RowBox[{"0.9137157506153315`", " ", 
   SubscriptBox["X", "2"], " ", 
   SubscriptBox["X", "3"], " ", 
   SubscriptBox["Y", "0"], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Y", "4"], " ", 
   SubscriptBox["Y", "6"]}], "+", 
  RowBox[{"0.9546132795727389`", " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["Y", "2"], " ", 
   SubscriptBox["Y", "4"], " ", 
   SubscriptBox["Y", "5"], " ", 
   SubscriptBox["Z", "1"]}], "-", 
  RowBox[{"0.08425192563210215`", " ", 
   SubscriptBox["X", "2"], " ", 
   SubscriptBox["X", "5"], " ", 
   SubscriptBox["Y", "0"], " ", 
   SubscriptBox["Y", "3"], " ", 
   SubscriptBox["Y", "4"], " ", 
   SubscriptBox["Y", "6"], " ", 
   SubscriptBox["Z", "1"]}], "+", 
  RowBox[{"0.7402557923023365`", " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["X", "3"], " ", 
   SubscriptBox["X", "4"], " ", 
   SubscriptBox["Y", "5"], " ", 
   SubscriptBox["Z", "2"]}], "-", 
  RowBox[{"0.7145069110817888`", " ", 
   SubscriptBox["X", "3"], " ", 
   SubscriptBox["X", "4"], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Y", "5"], " ", 
   SubscriptBox["Z", "2"]}], "+", 
  RowBox[{"0.4036382921321624`", " ", 
   SubscriptBox["X", "6"], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Y", "5"], " ", 
   SubscriptBox["Z", "2"]}], "+", 
  RowBox[{"0.6753918980101585`", " ", 
   SubscriptBox["X", "5"], " ", 
   SubscriptBox["Y", "0"], " ", 
   SubscriptBox["Y", "4"], " ", 
   SubscriptBox["Z", "1"], " ", 
   SubscriptBox["Z", "2"]}], "+", 
  RowBox[{"0.48538668758231074`", " ", 
   SubscriptBox["X", "2"], " ", 
   SubscriptBox["X", "5"], " ", 
   SubscriptBox["Y", "0"], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Y", "6"], " ", 
   SubscriptBox["Z", "3"]}], "+", 
  RowBox[{"0.7693116538227636`", " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["X", "6"], " ", 
   SubscriptBox["Y", "0"], " ", 
   SubscriptBox["Y", "2"], " ", 
   SubscriptBox["Y", "3"], " ", 
   SubscriptBox["Z", "4"]}], "-", 
  RowBox[{"0.027827952739567063`", " ", 
   SubscriptBox["X", "2"], " ", 
   SubscriptBox["X", "3"], " ", 
   SubscriptBox["X", "5"], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Z", "0"], " ", 
   SubscriptBox["Z", "4"]}], "+", 
  RowBox[{"0.6529805647571036`", " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["X", "2"], " ", 
   SubscriptBox["X", "5"], " ", 
   SubscriptBox["Y", "6"], " ", 
   SubscriptBox["Z", "3"], " ", 
   SubscriptBox["Z", "4"]}], "-", 
  RowBox[{"0.4214269532395645`", " ", 
   SubscriptBox["X", "2"], " ", 
   SubscriptBox["X", "5"], " ", 
   SubscriptBox["X", "6"], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Z", "0"], " ", 
   SubscriptBox["Z", "3"], " ", 
   SubscriptBox["Z", "4"]}], "+", 
  RowBox[{"0.37930405291169267`", " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["X", "4"], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Y", "6"], " ", 
   SubscriptBox["Z", "5"]}], "+", 
  RowBox[{"0.11374211107455778`", " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["X", "2"], " ", 
   SubscriptBox["Y", "4"], " ", 
   SubscriptBox["Z", "0"], " ", 
   SubscriptBox["Z", "5"]}], "-", 
  RowBox[{"0.9728242765845612`", " ", 
   SubscriptBox["X", "3"], " ", 
   SubscriptBox["Y", "4"], " ", 
   SubscriptBox["Y", "6"], " ", 
   SubscriptBox["Z", "0"], " ", 
   SubscriptBox["Z", "5"]}], "+", 
  RowBox[{"0.06002581313291877`", " ", 
   SubscriptBox["X", "6"], " ", 
   SubscriptBox["Y", "0"], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Z", "3"], " ", 
   SubscriptBox["Z", "5"]}], "-", 
  RowBox[{"0.38433555369923944`", " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["Z", "0"], " ", 
   SubscriptBox["Z", "3"], " ", 
   SubscriptBox["Z", "5"]}], "-", 
  RowBox[{"0.3662318438004859`", " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["X", "2"], " ", 
   SubscriptBox["X", "4"], " ", 
   SubscriptBox["Y", "6"], " ", 
   SubscriptBox["Z", "1"], " ", 
   SubscriptBox["Z", "3"], " ", 
   SubscriptBox["Z", "5"]}], "-", 
  RowBox[{"0.5822514907477534`", " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["X", "2"], " ", 
   SubscriptBox["X", "6"], " ", 
   SubscriptBox["Y", "3"], " ", 
   SubscriptBox["Z", "4"], " ", 
   SubscriptBox["Z", "5"]}], "-", 
  RowBox[{"0.8337947794834184`", " ", 
   SubscriptBox["X", "3"], " ", 
   SubscriptBox["X", "5"], " ", 
   SubscriptBox["Y", "0"], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Y", "2"], " ", 
   SubscriptBox["Z", "6"]}], "-", 
  RowBox[{"0.7056350684939949`", " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["X", "2"], " ", 
   SubscriptBox["Y", "4"], " ", 
   SubscriptBox["Z", "0"], " ", 
   SubscriptBox["Z", "3"], " ", 
   SubscriptBox["Z", "6"]}], "-", 
  RowBox[{"0.5154191437532232`", " ", 
   SubscriptBox["X", "3"], " ", 
   SubscriptBox["X", "5"], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Z", "0"], " ", 
   SubscriptBox["Z", "4"], " ", 
   SubscriptBox["Z", "6"]}], "-", 
  RowBox[{"0.8678067774691693`", " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["X", "3"], " ", 
   SubscriptBox["Y", "5"], " ", 
   SubscriptBox["Z", "1"], " ", 
   SubscriptBox["Z", "4"], " ", 
   SubscriptBox["Z", "6"]}], "-", 
  RowBox[{"0.8470754850986473`", " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Y", "2"], " ", 
   SubscriptBox["Z", "3"], " ", 
   SubscriptBox["Z", "4"], " ", 
   SubscriptBox["Z", "6"]}], "+", 
  RowBox[{"0.25922017516084006`", " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["Y", "3"], " ", 
   SubscriptBox["Z", "5"], " ", 
   SubscriptBox["Z", "6"]}], "-", 
  RowBox[{"0.928031493326912`", " ", 
   SubscriptBox["Y", "0"], " ", 
   SubscriptBox["Y", "3"], " ", 
   SubscriptBox["Y", "4"], " ", 
   SubscriptBox["Z", "5"], " ", 
   SubscriptBox["Z", "6"]}], "-", 
  RowBox[{"0.2501594393788076`", " ", 
   SubscriptBox["Y", "3"], " ", 
   SubscriptBox["Z", "1"], " ", 
   SubscriptBox["Z", "2"], " ", 
   SubscriptBox["Z", "5"], " ", 
   SubscriptBox["Z", "6"]}], "-", 
  RowBox[{"0.2691937699019138`", " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["X", "2"], " ", 
   SubscriptBox["X", "3"], " ", 
   SubscriptBox["Z", "0"], " ", 
   SubscriptBox["Z", "4"], " ", 
   SubscriptBox["Z", "5"], " ", 
   SubscriptBox["Z", "6"]}]}]], "Output",
 CellChangeTimes->{{3.914245580584806*^9, 3.91424567033467*^9}, 
   3.914249576232298*^9, 3.914249793958026*^9, 3.9142515008395977`*^9, 
   3.914254249016974*^9, 3.914254449130995*^9, 3.914255124126131*^9, 
   3.914258057051619*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"cb91e2f3-3225-46f3-9e74-9e2fa4214b16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vMin", " ", "=", " ", 
  RowBox[{"CalcPauliStringMinEigVal", "[", "h", "]"}]}]], "Input",
 CellChangeTimes->{{3.914245694675539*^9, 3.914245704548545*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"385dc3d8-0e3f-4548-950a-977b557a6a65"],

Cell[BoxData[
 RowBox[{"-", "6.45172571007489`"}]], "Output",
 CellChangeTimes->{{3.914245698022213*^9, 3.9142457089971037`*^9}, 
   3.914249576293347*^9, 3.914249794029084*^9, 3.914251500972617*^9, 
   3.914254249081859*^9, 3.9142544491994677`*^9, 3.914255124188141*^9, 
   3.914258057171009*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"f1fccbf3-2a0d-406a-8715-e1d22802f432"]
}, Open  ]],

Cell[TextData[{
 "Imagine a quantum experimentalist seeks the ground-state energy of this \
Hamiltonian, and can freely vary ",
 StyleBox["56",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " parameterised gates in their ansatz circuit ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "(", 
    OverscriptBox["\[Theta]", "\[RightVector]"], ")"}], TraditionalForm]],
  ExpressionUUID->"149ed228-4600-4bf1-b197-1fdb3e8b2215"],
 " ",
 "which is applied to initial state ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"+"},
    "Ket"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "752033e9-e620-44ba-a7bb-991d9d5baf13"],
 "."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwdzU0ogwEcBvDX2vIt+XZgRMlotBZRLA5eTAqNEZnl64A1jfJii9DycRoX
rdTsYilbqV3WhGXZ2GE+mppMw6a85WOcEM8O/36X53n+uVJZ6wCDIAj2/0Ey
VKlxF9I19OPaDkzbUJmg1cswQyOzwgptt/YDKO56csGEJIEbanv519DJHryB
VO3YHex3pfuhvEj6CV0zbd9wwsLLvPiXI7dnwRzRUBncU4fKobKBWwUzFqZr
4JW+sQ5O6UpIOH/KFkK9Ib8FNvOWu+H2wrwEHqrepsN9pkAJX6sJLUxwJW/B
lGSGHpJztBE2mRxHkJcacwwtpZQbcg1pHlivC/hg9pHJH969l71AhcZBQ198
wwfcDQW/oH03GHGJfuwSC56sj0ZDzoo5Fm6OKFKhh9WeBRtXJcVwMfK6BP5G
lfHh/uSDENLvznaYKO7sgAWRwz3hnCjQB71xP+Mw7yxOAclHNQUpQ8csfPZb
HeG/tqlz+AcnqQEy
  "],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"abdb6009-b7c5-41a3-aa06-c8dcfbd04faa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"GetKnownCircuit", "[", 
    RowBox[{
    "\"\<HardwareEfficientAnsatz\>\"", ",", " ", "3", ",", " ", "\[Theta]", 
     ",", " ", "nQb"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawCircuit", "[", "u", "]"}]}], "Input",
 CellChangeTimes->{{3.914244713107856*^9, 3.914244744397621*^9}, {
   3.914244775317625*^9, 3.914244809488315*^9}, {3.914244976992386*^9, 
   3.914244978718055*^9}, 3.9142455745354853`*^9, 3.914245714737303*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"684fb696-00f8-47d8-8e5d-463cac923f1d"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {{LineBox[{{0, 0.5}, {1, 0.5}}], LineBox[{{0, 1.5}, {1, 1.5}}], 
     LineBox[{{0, 2.5}, {1, 2.5}}], LineBox[{{0, 3.5}, {1, 3.5}}], 
     LineBox[{{0, 4.5}, {1, 4.5}}], LineBox[{{0, 5.5}, {1, 5.5}}], 
     LineBox[{{0, 6.5}, {1, 6.5}}]}, {LineBox[{{1, 0.5}, {2, 0.5}}], 
     LineBox[{{1, 1.5}, {2, 1.5}}], LineBox[{{1, 2.5}, {2, 2.5}}], 
     LineBox[{{1, 3.5}, {2, 3.5}}], LineBox[{{1, 4.5}, {2, 4.5}}], 
     LineBox[{{1, 5.5}, {2, 5.5}}], LineBox[{{1, 6.5}, {2, 6.5}}]}, {
     LineBox[{{2, 0.5}, {3, 0.5}}], LineBox[{{2, 1.5}, {3, 1.5}}], 
     LineBox[{{2, 2.5}, {3, 2.5}}], LineBox[{{2, 3.5}, {3, 3.5}}], 
     LineBox[{{2, 4.5}, {3, 4.5}}], LineBox[{{2, 5.5}, {3, 5.5}}], 
     LineBox[{{2, 6.5}, {3, 6.5}}]}, {LineBox[{{3, 0.5}, {4, 0.5}}], 
     LineBox[{{3, 1.5}, {4, 1.5}}], LineBox[{{3, 2.5}, {4, 2.5}}], 
     LineBox[{{3, 3.5}, {4, 3.5}}], LineBox[{{3, 4.5}, {4, 4.5}}], 
     LineBox[{{3, 5.5}, {4, 5.5}}], LineBox[{{3, 6.5}, {4, 6.5}}]}, {
     LineBox[{{4, 0.5}, {5, 0.5}}], LineBox[{{4, 1.5}, {5, 1.5}}], 
     LineBox[{{4, 2.5}, {5, 2.5}}], LineBox[{{4, 3.5}, {5, 3.5}}], 
     LineBox[{{4, 4.5}, {5, 4.5}}], LineBox[{{4, 5.5}, {5, 5.5}}], 
     LineBox[{{4, 6.5}, {5, 6.5}}]}, {LineBox[{{5, 0.5}, {6, 0.5}}], 
     LineBox[{{5, 1.5}, {6, 1.5}}], LineBox[{{5, 2.5}, {6, 2.5}}], 
     LineBox[{{5, 3.5}, {6, 3.5}}], LineBox[{{5, 4.5}, {6, 4.5}}], 
     LineBox[{{5, 5.5}, {6, 5.5}}], LineBox[{{5, 6.5}, {6, 6.5}}]}, {
     LineBox[{{6, 0.5}, {7, 0.5}}], LineBox[{{6, 1.5}, {7, 1.5}}], 
     LineBox[{{6, 2.5}, {7, 2.5}}], LineBox[{{6, 3.5}, {7, 3.5}}], 
     LineBox[{{6, 4.5}, {7, 4.5}}], LineBox[{{6, 5.5}, {7, 5.5}}], 
     LineBox[{{6, 6.5}, {7, 6.5}}]}, {LineBox[{{7, 0.5}, {8, 0.5}}], 
     LineBox[{{7, 1.5}, {8, 1.5}}], LineBox[{{7, 2.5}, {8, 2.5}}], 
     LineBox[{{7, 3.5}, {8, 3.5}}], LineBox[{{7, 4.5}, {8, 4.5}}], 
     LineBox[{{7, 5.5}, {8, 5.5}}], LineBox[{{7, 6.5}, {8, 6.5}}]}, {
     LineBox[{{8, 0.5}, {9, 0.5}}], LineBox[{{8, 1.5}, {9, 1.5}}], 
     LineBox[{{8, 2.5}, {9, 2.5}}], LineBox[{{8, 3.5}, {9, 3.5}}], 
     LineBox[{{8, 4.5}, {9, 4.5}}], LineBox[{{8, 5.5}, {9, 5.5}}], 
     LineBox[{{8, 6.5}, {9, 6.5}}]}, {LineBox[{{9, 0.5}, {10, 0.5}}], 
     LineBox[{{9, 1.5}, {10, 1.5}}], LineBox[{{9, 2.5}, {10, 2.5}}], 
     LineBox[{{9, 3.5}, {10, 3.5}}], LineBox[{{9, 4.5}, {10, 4.5}}], 
     LineBox[{{9, 5.5}, {10, 5.5}}], LineBox[{{9, 6.5}, {10, 6.5}}]}, {
     LineBox[{{10, 0.5}, {11, 0.5}}], LineBox[{{10, 1.5}, {11, 1.5}}], 
     LineBox[{{10, 2.5}, {11, 2.5}}], LineBox[{{10, 3.5}, {11, 3.5}}], 
     LineBox[{{10, 4.5}, {11, 4.5}}], LineBox[{{10, 5.5}, {11, 5.5}}], 
     LineBox[{{10, 6.5}, {11, 6.5}}]}, {LineBox[{{11, 0.5}, {12, 0.5}}], 
     LineBox[{{11, 1.5}, {12, 1.5}}], LineBox[{{11, 2.5}, {12, 2.5}}], 
     LineBox[{{11, 3.5}, {12, 3.5}}], LineBox[{{11, 4.5}, {12, 4.5}}], 
     LineBox[{{11, 5.5}, {12, 5.5}}], LineBox[{{11, 6.5}, {12, 6.5}}]}, {
     LineBox[{{12, 0.5}, {13, 0.5}}], LineBox[{{12, 1.5}, {13, 1.5}}], 
     LineBox[{{12, 2.5}, {13, 2.5}}], LineBox[{{12, 3.5}, {13, 3.5}}], 
     LineBox[{{12, 4.5}, {13, 4.5}}], LineBox[{{12, 5.5}, {13, 5.5}}], 
     LineBox[{{12, 6.5}, {13, 6.5}}]}, {LineBox[{{13, 0.5}, {14, 0.5}}], 
     LineBox[{{13, 1.5}, {14, 1.5}}], LineBox[{{13, 2.5}, {14, 2.5}}], 
     LineBox[{{13, 3.5}, {14, 3.5}}], LineBox[{{13, 4.5}, {14, 4.5}}], 
     LineBox[{{13, 5.5}, {14, 5.5}}], LineBox[{{13, 6.5}, {14, 6.5}}]}, {
     LineBox[{{14, 0.5}, {15, 0.5}}], LineBox[{{14, 1.5}, {15, 1.5}}], 
     LineBox[{{14, 2.5}, {15, 2.5}}], LineBox[{{14, 3.5}, {15, 3.5}}], 
     LineBox[{{14, 4.5}, {15, 4.5}}], LineBox[{{14, 5.5}, {15, 5.5}}], 
     LineBox[{{14, 6.5}, {15, 6.5}}]}, {LineBox[{{15, 0.5}, {16, 0.5}}], 
     LineBox[{{15, 1.5}, {16, 1.5}}], LineBox[{{15, 2.5}, {16, 2.5}}], 
     LineBox[{{15, 3.5}, {16, 3.5}}], LineBox[{{15, 4.5}, {16, 4.5}}], 
     LineBox[{{15, 5.5}, {16, 5.5}}], LineBox[{{15, 6.5}, {16, 6.5}}]}, {
     LineBox[{{16, 0.5}, {17, 0.5}}], LineBox[{{16, 1.5}, {17, 1.5}}], 
     LineBox[{{16, 2.5}, {17, 2.5}}], LineBox[{{16, 3.5}, {17, 3.5}}], 
     LineBox[{{16, 4.5}, {17, 4.5}}], LineBox[{{16, 5.5}, {17, 5.5}}], 
     LineBox[{{16, 6.5}, {17, 6.5}}]}, {LineBox[{{17, 0.5}, {18, 0.5}}], 
     LineBox[{{17, 1.5}, {18, 1.5}}], LineBox[{{17, 2.5}, {18, 2.5}}], 
     LineBox[{{17, 3.5}, {18, 3.5}}], LineBox[{{17, 4.5}, {18, 4.5}}], 
     LineBox[{{17, 5.5}, {18, 5.5}}], LineBox[{{17, 6.5}, {18, 6.5}}]}, {
     LineBox[{{18, 0.5}, {19, 0.5}}], LineBox[{{18, 1.5}, {19, 1.5}}], 
     LineBox[{{18, 2.5}, {19, 2.5}}], LineBox[{{18, 3.5}, {19, 3.5}}], 
     LineBox[{{18, 4.5}, {19, 4.5}}], LineBox[{{18, 5.5}, {19, 5.5}}], 
     LineBox[{{18, 6.5}, {19, 6.5}}]}}, {{
     RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 0.5}]}, {
     RectangleBox[{0.1, 1.1}, {0.9, 1.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 1.5}]}, {
     RectangleBox[{0.1, 2.1}, {0.9, 2.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 2.5}]}, {
     RectangleBox[{0.1, 3.1}, {0.9, 3.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 3.5}]}, {
     RectangleBox[{0.1, 4.1}, {0.9, 4.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 4.5}]}, {
     RectangleBox[{0.1, 5.1}, {0.9, 5.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 5.5}]}, {
     RectangleBox[{0.1, 6.1}, {0.9, 6.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 6.5}]}, {
     RectangleBox[{1.1, 0.1}, {1.9, 0.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 0.5}]}, {
     RectangleBox[{1.1, 1.1}, {1.9, 1.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 1.5}]}, {
     RectangleBox[{1.1, 2.1}, {1.9, 2.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 2.5}]}, {
     RectangleBox[{1.1, 3.1}, {1.9, 3.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 3.5}]}, {
     RectangleBox[{1.1, 4.1}, {1.9, 4.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 4.5}]}, {
     RectangleBox[{1.1, 5.1}, {1.9, 5.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 5.5}]}, {
     RectangleBox[{1.1, 6.1}, {1.9, 6.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 6.5}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{2.5, 0.5}, 0.1], DiskBox[{2.5, 1.5}, 0.1]}, 
      LineBox[{{2.5, 0.5}, {2.5, 1.5}}]}, LineBox[{{2.5, 0.5}, {2.5, 0.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{2.5, 2.5}, 0.1], DiskBox[{2.5, 3.5}, 0.1]}, 
      LineBox[{{2.5, 2.5}, {2.5, 3.5}}]}, LineBox[{{2.5, 2.5}, {2.5, 2.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{2.5, 4.5}, 0.1], DiskBox[{2.5, 5.5}, 0.1]}, 
      LineBox[{{2.5, 4.5}, {2.5, 5.5}}]}, LineBox[{{2.5, 4.5}, {2.5, 4.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{3.5, 6.5}, 0.1], DiskBox[{3.5, 0.5}, 0.1]}, 
      LineBox[{{3.5, 0.5}, {3.5, 6.5}}]}, LineBox[{{3.5, 6.5}, {3.5, 6.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{4.5, 1.5}, 0.1], DiskBox[{4.5, 2.5}, 0.1]}, 
      LineBox[{{4.5, 1.5}, {4.5, 2.5}}]}, LineBox[{{4.5, 1.5}, {4.5, 1.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{4.5, 3.5}, 0.1], DiskBox[{4.5, 4.5}, 0.1]}, 
      LineBox[{{4.5, 3.5}, {4.5, 4.5}}]}, LineBox[{{4.5, 3.5}, {4.5, 3.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{4.5, 5.5}, 0.1], DiskBox[{4.5, 6.5}, 0.1]}, 
      LineBox[{{4.5, 5.5}, {4.5, 6.5}}]}, 
     LineBox[{{4.5, 5.5}, {4.5, 5.5}}]}, {
     RectangleBox[{4.1, 0.1}, {4.9, 0.9}], 
     InsetBox["\<\"Ry\"\>", {4.5, 0.5}]}, {
     RectangleBox[{5.1, 1.1}, {5.9, 1.9}], 
     InsetBox["\<\"Ry\"\>", {5.5, 1.5}]}, {
     RectangleBox[{5.1, 2.1}, {5.9, 2.9}], 
     InsetBox["\<\"Ry\"\>", {5.5, 2.5}]}, {
     RectangleBox[{5.1, 3.1}, {5.9, 3.9}], 
     InsetBox["\<\"Ry\"\>", {5.5, 3.5}]}, {
     RectangleBox[{5.1, 4.1}, {5.9, 4.9}], 
     InsetBox["\<\"Ry\"\>", {5.5, 4.5}]}, {
     RectangleBox[{5.1, 0.1}, {5.9, 0.9}], 
     InsetBox["\<\"Rz\"\>", {5.5, 0.5}]}, {
     RectangleBox[{6.1, 1.1}, {6.9, 1.9}], 
     InsetBox["\<\"Rz\"\>", {6.5, 1.5}]}, {
     RectangleBox[{6.1, 2.1}, {6.9, 2.9}], 
     InsetBox["\<\"Rz\"\>", {6.5, 2.5}]}, {
     RectangleBox[{6.1, 3.1}, {6.9, 3.9}], 
     InsetBox["\<\"Rz\"\>", {6.5, 3.5}]}, {
     RectangleBox[{6.1, 4.1}, {6.9, 4.9}], 
     InsetBox["\<\"Rz\"\>", {6.5, 4.5}]}, {
     RectangleBox[{6.1, 5.1}, {6.9, 5.9}], 
     InsetBox["\<\"Ry\"\>", {6.5, 5.5}]}, {
     RectangleBox[{6.1, 6.1}, {6.9, 6.9}], 
     InsetBox["\<\"Ry\"\>", {6.5, 6.5}]}, {
     RectangleBox[{7.1, 5.1}, {7.9, 5.9}], 
     InsetBox["\<\"Rz\"\>", {7.5, 5.5}]}, {
     RectangleBox[{7.1, 6.1}, {7.9, 6.9}], 
     InsetBox["\<\"Rz\"\>", {7.5, 6.5}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{7.5, 0.5}, 0.1], DiskBox[{7.5, 1.5}, 0.1]}, 
      LineBox[{{7.5, 0.5}, {7.5, 1.5}}]}, LineBox[{{7.5, 0.5}, {7.5, 0.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{7.5, 2.5}, 0.1], DiskBox[{7.5, 3.5}, 0.1]}, 
      LineBox[{{7.5, 2.5}, {7.5, 3.5}}]}, LineBox[{{7.5, 2.5}, {7.5, 2.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{8.5, 4.5}, 0.1], DiskBox[{8.5, 5.5}, 0.1]}, 
      LineBox[{{8.5, 4.5}, {8.5, 5.5}}]}, LineBox[{{8.5, 4.5}, {8.5, 4.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{9.5, 6.5}, 0.1], DiskBox[{9.5, 0.5}, 0.1]}, 
      LineBox[{{9.5, 0.5}, {9.5, 6.5}}]}, LineBox[{{9.5, 6.5}, {9.5, 6.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{10.5, 1.5}, 0.1], DiskBox[{10.5, 2.5}, 0.1]}, 
      LineBox[{{10.5, 1.5}, {10.5, 2.5}}]}, 
     LineBox[{{10.5, 1.5}, {10.5, 1.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{10.5, 3.5}, 0.1], DiskBox[{10.5, 4.5}, 0.1]}, 
      LineBox[{{10.5, 3.5}, {10.5, 4.5}}]}, 
     LineBox[{{10.5, 3.5}, {10.5, 3.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{10.5, 5.5}, 0.1], DiskBox[{10.5, 6.5}, 0.1]}, 
      LineBox[{{10.5, 5.5}, {10.5, 6.5}}]}, 
     LineBox[{{10.5, 5.5}, {10.5, 5.5}}]}, {
     RectangleBox[{10.1, 0.1}, {10.9, 0.9}], 
     InsetBox["\<\"Ry\"\>", {10.5, 0.5}]}, {
     RectangleBox[{11.1, 1.1}, {11.9, 1.9}], 
     InsetBox["\<\"Ry\"\>", {11.5, 1.5}]}, {
     RectangleBox[{11.1, 2.1}, {11.9, 2.9}], 
     InsetBox["\<\"Ry\"\>", {11.5, 2.5}]}, {
     RectangleBox[{11.1, 0.1}, {11.9, 0.9}], 
     InsetBox["\<\"Rz\"\>", {11.5, 0.5}]}, {
     RectangleBox[{12.1, 1.1}, {12.9, 1.9}], 
     InsetBox["\<\"Rz\"\>", {12.5, 1.5}]}, {
     RectangleBox[{12.1, 2.1}, {12.9, 2.9}], 
     InsetBox["\<\"Rz\"\>", {12.5, 2.5}]}, {
     RectangleBox[{12.1, 3.1}, {12.9, 3.9}], 
     InsetBox["\<\"Ry\"\>", {12.5, 3.5}]}, {
     RectangleBox[{12.1, 4.1}, {12.9, 4.9}], 
     InsetBox["\<\"Ry\"\>", {12.5, 4.5}]}, {
     RectangleBox[{12.1, 5.1}, {12.9, 5.9}], 
     InsetBox["\<\"Ry\"\>", {12.5, 5.5}]}, {
     RectangleBox[{12.1, 6.1}, {12.9, 6.9}], 
     InsetBox["\<\"Ry\"\>", {12.5, 6.5}]}, {
     RectangleBox[{13.1, 3.1}, {13.9, 3.9}], 
     InsetBox["\<\"Rz\"\>", {13.5, 3.5}]}, {
     RectangleBox[{13.1, 4.1}, {13.9, 4.9}], 
     InsetBox["\<\"Rz\"\>", {13.5, 4.5}]}, {
     RectangleBox[{13.1, 5.1}, {13.9, 5.9}], 
     InsetBox["\<\"Rz\"\>", {13.5, 5.5}]}, {
     RectangleBox[{13.1, 6.1}, {13.9, 6.9}], 
     InsetBox["\<\"Rz\"\>", {13.5, 6.5}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{13.5, 0.5}, 0.1], DiskBox[{13.5, 1.5}, 0.1]}, 
      LineBox[{{13.5, 0.5}, {13.5, 1.5}}]}, 
     LineBox[{{13.5, 0.5}, {13.5, 0.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{14.5, 2.5}, 0.1], DiskBox[{14.5, 3.5}, 0.1]}, 
      LineBox[{{14.5, 2.5}, {14.5, 3.5}}]}, 
     LineBox[{{14.5, 2.5}, {14.5, 2.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{14.5, 4.5}, 0.1], DiskBox[{14.5, 5.5}, 0.1]}, 
      LineBox[{{14.5, 4.5}, {14.5, 5.5}}]}, 
     LineBox[{{14.5, 4.5}, {14.5, 4.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{15.5, 6.5}, 0.1], DiskBox[{15.5, 0.5}, 0.1]}, 
      LineBox[{{15.5, 0.5}, {15.5, 6.5}}]}, 
     LineBox[{{15.5, 6.5}, {15.5, 6.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{16.5, 1.5}, 0.1], DiskBox[{16.5, 2.5}, 0.1]}, 
      LineBox[{{16.5, 1.5}, {16.5, 2.5}}]}, 
     LineBox[{{16.5, 1.5}, {16.5, 1.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{16.5, 3.5}, 0.1], DiskBox[{16.5, 4.5}, 0.1]}, 
      LineBox[{{16.5, 3.5}, {16.5, 4.5}}]}, 
     LineBox[{{16.5, 3.5}, {16.5, 3.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{16.5, 5.5}, 0.1], DiskBox[{16.5, 6.5}, 0.1]}, 
      LineBox[{{16.5, 5.5}, {16.5, 6.5}}]}, 
     LineBox[{{16.5, 5.5}, {16.5, 5.5}}]}, {
     RectangleBox[{16.1, 0.1}, {16.9, 0.9}], 
     InsetBox["\<\"Ry\"\>", {16.5, 0.5}]}, {
     RectangleBox[{17.1, 0.1}, {17.9, 0.9}], 
     InsetBox["\<\"Rz\"\>", {17.5, 0.5}]}, {
     RectangleBox[{17.1, 1.1}, {17.9, 1.9}], 
     InsetBox["\<\"Ry\"\>", {17.5, 1.5}]}, {
     RectangleBox[{17.1, 2.1}, {17.9, 2.9}], 
     InsetBox["\<\"Ry\"\>", {17.5, 2.5}]}, {
     RectangleBox[{17.1, 3.1}, {17.9, 3.9}], 
     InsetBox["\<\"Ry\"\>", {17.5, 3.5}]}, {
     RectangleBox[{17.1, 4.1}, {17.9, 4.9}], 
     InsetBox["\<\"Ry\"\>", {17.5, 4.5}]}, {
     RectangleBox[{17.1, 5.1}, {17.9, 5.9}], 
     InsetBox["\<\"Ry\"\>", {17.5, 5.5}]}, {
     RectangleBox[{17.1, 6.1}, {17.9, 6.9}], 
     InsetBox["\<\"Ry\"\>", {17.5, 6.5}]}, {
     RectangleBox[{18.1, 1.1}, {18.9, 1.9}], 
     InsetBox["\<\"Rz\"\>", {18.5, 1.5}]}, {
     RectangleBox[{18.1, 2.1}, {18.9, 2.9}], 
     InsetBox["\<\"Rz\"\>", {18.5, 2.5}]}, {
     RectangleBox[{18.1, 3.1}, {18.9, 3.9}], 
     InsetBox["\<\"Rz\"\>", {18.5, 3.5}]}, {
     RectangleBox[{18.1, 4.1}, {18.9, 4.9}], 
     InsetBox["\<\"Rz\"\>", {18.5, 4.5}]}, {
     RectangleBox[{18.1, 5.1}, {18.9, 5.9}], 
     InsetBox["\<\"Rz\"\>", {18.5, 5.5}]}, {
     RectangleBox[{18.1, 6.1}, {18.9, 6.9}], 
     InsetBox["\<\"Rz\"\>", {18.5, 6.5}]}}},
  ImageSize->600,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.914244723778328*^9, 3.914244744778179*^9}, {
   3.914244776003484*^9, 3.914244809998461*^9}, 3.914244980247253*^9, 
   3.9142458450853357`*^9, 3.914249576357376*^9, 3.914249794089821*^9, 
   3.914251501109408*^9, 3.914254249143141*^9, 3.914254449263033*^9, 
   3.91425512425432*^9, 3.91425805726831*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"dbc2264a-3db8-4568-acb4-f3cb15893cfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n\[Theta]", " ", "=", " ", 
  RowBox[{"Max", " ", "@", " ", 
   RowBox[{"Cases", "[", 
    RowBox[{"u", ",", " ", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "i_", "]"}], ":>", "i"}], ",", " ", 
     "\[Infinity]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.914244811652103*^9, 3.914244839888226*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"7457a19e-4cdd-4c20-8cfe-8495641efbe5"],

Cell[BoxData["56"], "Output",
 CellChangeTimes->{{3.9142448318793697`*^9, 3.914244840063952*^9}, 
   3.9142449818291883`*^9, 3.914245848428535*^9, 3.9142495763862467`*^9, 
   3.9142497941141157`*^9, 3.914251501150982*^9, 3.9142542491678123`*^9, 
   3.9142544492872143`*^9, 3.914255124276764*^9, 3.914258057296298*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"2eb23b9c-428a-485c-9559-d19547125c8c"]
}, Open  ]],

Cell["\<\
We will numerically simulate the experimental process, so we prepare some \
quantum registers in our simulator.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwdzFkowwEABvBZW3MnsyHNXCVHaC2i0DyYzRVy5pjlKlc0ysaWay3Xy3iR
UuzFUkwKJTKyHO1hTFNk2saUfznGE7JvD1+/l+/7osW95a1kEokU4w7ku7LU
pgSCRzhm1yBzQaGDB3fkHbhJyTyAJ/eGQ1hT92SEgcG5JrjUxL2BF+y2WyjN
63mALcZQG+xLEn9B43DFDxzY54RfuU3sM7BgVGV7OtxQuTKgXJCSDcMmZDxo
1gjz4dBKKh+OnbELoUYbVwZLOFP1cHViTASPFO8yz56SK4dvOaQlGGikL8MQ
OlkD+aPEJizSneshh+F7DPfTpCaYomVaYMHKsxVG6nU2z+9j7yuUqM8JaA0Q
fMJ1l/MbGtadXtfY+ymp8HS+2wcmTu/4wcUuCQNaqFUsKJwRJcNJ2k0q/PNO
58LtQXshJD4uqmBQTW01jKd1NHh6lc/N8M7/tx/GXvpLIN+hkkKptnoENlLH
d+FDqdqjrXxLDzv35k7gsqDYDsteOh1Qeeaim93mc4sj4D+U2hlS
  "],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"d48378b8-3a60-419b-9953-ffabfbb05083"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Psi]", ",", " ", "\[Phi]", ",", "in"}], "}"}], " ", "=", " ", 
   RowBox[{"CreateQuregs", "[", 
    RowBox[{"nQb", ",", " ", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitPlusState", "[", "in", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.914244905765726*^9, 3.914244910937447*^9}, {
  3.9142449842249813`*^9, 3.91424500599953*^9}, {3.91424585709746*^9, 
  3.9142458826866417`*^9}, {3.914246522199601*^9, 3.914246533763866*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"261bab34-330a-4909-8d68-b0d88388bac5"],

Cell[TextData[{
 "The experimentalist cannot study an analytic expression of their ansatz \
state ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{
      RowBox[{"\[Psi]", "(", 
        OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
     "Ket"], "=", 
    RowBox[{
     RowBox[{"u", "(", 
      OverscriptBox["\[Theta]", "\[RightVector]"], ")"}], 
     TemplateBox[{"+"},
      "Ket"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9ff6614b-4936-468b-80af-ee409e76819e"],
 ", nor its expectation value, which are exponentially expensive! Instead, \
they can only measure the observable ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"E", "(", 
      OverscriptBox["\[Theta]", "\[RightVector]"], ")"}], 
     "\[RightAngleBracket]"}], " ", "=", " ", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\[Psi]", "(", 
         OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
      "Bra"], "h", 
     TemplateBox[{
       RowBox[{"\[Psi]", "(", 
         OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
      "Ket"]}]}], TraditionalForm]],ExpressionUUID->
  "dc87eed9-1f75-4521-8a5d-14d508b58d31"],
 " at specific values of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Theta]", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b8c1ca59-0523-4e62-b4c7-261a564a89c9"],
 ". "
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwdzlsogwEYBuBZlsNwYY4XjLhxCK01p5gpxiaFSFLOU8KsRm2YCMnhapQQ
xS5Yc5iUC4uMLKM//Q7bQmhzuDCR4Qbx/hdfT1+979cXWSstbqDTaLTI/4FC
V5qajHEKnPdjSzBookcPt6/om3DNPXUb7l+bdmB5xQMB/fz5JJyp4l7AI7bE
BpXZrTewngi2Q1lc7Qckukq+YbuBE3r6b6zMFAYjSht5cHXIlQxV+QkZMKS/
UwDPNaJcqJhPFMK+Q7YYarTRRbCQM1wJF/r7quFuz1sn1Xfnq+BrJm0G+hGs
ORjAomugsNe5Bgv0ZiPkBHrvQUOSkoQJ2iArzJt/vIXhRr2dunsnfYZytdkJ
b33z36HO9fQJTbontzP0mYMMeDDe4gVjRzaZcKpZHgitjLIwKBqtjocDHheJ
8NeTx4UbHQ4xfDWq6uDW4jSl6KdGDmcn0xVU3md5HYZnNW3A++4UAr4cf5Hw
TMKyQIdkxQYtSSbiHLtAT0JuVFuOBX9enlD+AUCsFSM=
  "],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"7a215cb3-6cf9-4ee8-b97e-637918f717b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CloneQureg", "[", 
   RowBox[{"\[Psi]", ",", " ", "in"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.914246591532687*^9, 3.914246596804058*^9}, 
   3.914257619383651*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"304909e4-8dbe-4d8e-a06a-4e1ce00f4d3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", " ", "/.", " ", 
  RowBox[{
   RowBox[{"\[Theta]", "[", "_", "]"}], " ", ":>", " ", 
   RowBox[{"RandomReal", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.914246554025648*^9, 3.914246573787443*^9}, {
  3.914246608613006*^9, 3.9142466251857147`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"adf5fadb-e968-45b6-a821-b7a30f35bbd2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["Ry", "0"], "[", "0.3799640924839165`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "0"], "[", "0.41613649291418486`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", "0.5169094248852355`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "1"], "[", "0.7458193023546751`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "2"], "[", "0.25302323639619173`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "2"], "[", "0.7825106956715067`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "3"], "[", "0.48364241969181254`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "3"], "[", "0.3583587318621122`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "4"], "[", "0.9872362337876519`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "4"], "[", "0.08476892201722741`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "5"], "[", "0.23392679760548152`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "5"], "[", "0.606910817917176`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "6"], "[", "0.8047724658602706`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "6"], "[", "0.900194638200847`", "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "0"], "[", 
    SubscriptBox["Z", "1"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "2"], "[", 
    SubscriptBox["Z", "3"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "4"], "[", 
    SubscriptBox["Z", "5"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "6"], "[", 
    SubscriptBox["Z", "0"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "1"], "[", 
    SubscriptBox["Z", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "3"], "[", 
    SubscriptBox["Z", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "5"], "[", 
    SubscriptBox["Z", "6"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", "0.17830222987290378`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "0"], "[", "0.7641228167682179`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", "0.6334284013109828`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "1"], "[", "0.17623858770082101`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "2"], "[", "0.8255773139382652`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "2"], "[", "0.0903813910116884`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "3"], "[", "0.07104988609276819`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "3"], "[", "0.32545367914047274`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "4"], "[", "0.1143241556348904`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "4"], "[", "0.7111304596020558`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "5"], "[", "0.4083830979306442`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "5"], "[", "0.8722612255612807`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "6"], "[", "0.033023180620156856`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "6"], "[", "0.1724920281416884`", "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "0"], "[", 
    SubscriptBox["Z", "1"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "2"], "[", 
    SubscriptBox["Z", "3"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "4"], "[", 
    SubscriptBox["Z", "5"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "6"], "[", 
    SubscriptBox["Z", "0"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "1"], "[", 
    SubscriptBox["Z", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "3"], "[", 
    SubscriptBox["Z", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "5"], "[", 
    SubscriptBox["Z", "6"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", "0.5192152066146996`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "0"], "[", "0.8997980782263779`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", "0.7824718766597791`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "1"], "[", "0.08977889745114442`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "2"], "[", "0.01613633883874077`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "2"], "[", "0.7579172272647436`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "3"], "[", "0.9799744265447325`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "3"], "[", "0.195148677961281`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "4"], "[", "0.2764575606212698`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "4"], "[", "0.4483233886938114`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "5"], "[", "0.9556371541881907`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "5"], "[", "0.4270492877876928`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "6"], "[", "0.23968126823857738`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "6"], "[", "0.15058229775470822`", "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "0"], "[", 
    SubscriptBox["Z", "1"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "2"], "[", 
    SubscriptBox["Z", "3"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "4"], "[", 
    SubscriptBox["Z", "5"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "6"], "[", 
    SubscriptBox["Z", "0"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "1"], "[", 
    SubscriptBox["Z", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "3"], "[", 
    SubscriptBox["Z", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["C", "5"], "[", 
    SubscriptBox["Z", "6"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", "0.267700852886795`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "0"], "[", "0.17584037594501822`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", "0.038631817474083174`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "1"], "[", "0.19657808360364992`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "2"], "[", "0.7291496368258261`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "2"], "[", "0.3757730221346145`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "3"], "[", "0.27560580747167585`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "3"], "[", "0.5134472326169295`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "4"], "[", "0.6292003309551999`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "4"], "[", "0.7479705677144786`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "5"], "[", "0.021215620734908125`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "5"], "[", "0.8363056322096627`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "6"], "[", "0.06104662651396153`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rz", "6"], "[", "0.5491283163509868`", "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9142465549304733`*^9, 3.9142465740203648`*^9}, {
   3.9142466204901648`*^9, 3.9142466255707617`*^9}, 3.914246661910552*^9, 
   3.9142495764319057`*^9, 3.914249794151813*^9, 3.914251501202442*^9, 
   3.914254249205533*^9, 3.914254449332859*^9, 3.914255124320036*^9, 
   3.9142580573389263`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"97a4e4c9-c489-4dc5-bb0c-1ec8d520b196"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ApplyCircuit", "[", 
   RowBox[{"\[Psi]", ",", " ", "%"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CalcExpecPauliString", "[", 
  RowBox[{"\[Psi]", ",", " ", "h", ",", " ", "\[Phi]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.914246647433913*^9, 3.914246653790182*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"e843fd2f-16d6-4c8b-ac98-4cfd68598566"],

Cell[BoxData[
 RowBox[{"-", "0.08227671190014117`"}]], "Output",
 CellChangeTimes->{{3.914246654464386*^9, 3.914246669820842*^9}, 
   3.914249576445114*^9, 3.9142497941645603`*^9, 3.914251501271298*^9, 
   3.914254249235587*^9, 3.914254449345245*^9, 3.914255124331355*^9, 
   3.9142580573758917`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"a3eab702-9c2f-45df-964b-b0e4b57b47e1"]
}, Open  ]],

Cell[TextData[{
 "The parameter space is already too big to randomly sample like this. We are \
",
 StyleBox["very",
  FontSlant->"Italic"],
 " unlikely to randomly choose parameters near the ground-state, especially \
given the ",
 StyleBox[ButtonBox["barren plateaus",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.nature.com/articles/s41467-018-07090-4"], None},
  ButtonNote->"https://www.nature.com/articles/s41467-018-07090-4"],
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwd0FkowwEcB/BZ5BgezBzlXF4cobXmiqEYmxQiSbmn3KtRNuYIuV9GCVGz
B+SalERkjuXo//BnQ5FpzjKR4QXx/T/8+rx8v9+Hn39xbWYZnUajsf8PCizR
SjLQnGC+G5iBbsMtGrh5SV+FS9ZRm3D3SrcFc/PuCejswifheAHXAI98xRdQ
llhzDUsJdxOUBBd/QKIp6xvWb3A8T/4Nkui8oV92OQ8udlsioCI1NBZ6dMgT
oF4tTIaNqjABbD/wFUH1bEAGTOf05sOpjvZCuN3yJqf61nwFfI2jjUNngjkJ
XZl0NRS0mZdgmuZQCzkshx24ES4jYeis2zlMUT0YoY9WY6J2b2qfoVR5aIZG
p9R3OGd5/IS6uUerU/QZXTZwf6jaHgb1rTLgaJWUBc9tcryhsL8wBHbaGsLg
rx2PC1cabkXwVasogevTY5TCnyIpnBiJaaTyjvPL0Ce+YgXeNUcS8OX4i4Sn
YuYZvBUvXMDjqbokPf60xxdBdg9rB1auSShbB0sMUCXxeoJ/ubQc4A==
  "],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"3048d111-630e-4d1c-b542-84042eba1de0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"samples", " ", "=", " ", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"CloneQureg", "[", 
      RowBox[{"\[Psi]", ",", " ", "in"}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"ApplyCircuit", "[", 
      RowBox[{"\[Psi]", ",", " ", 
       RowBox[{"u", " ", "/.", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "_", "]"}], " ", ":>", " ", 
         RowBox[{"RandomReal", "[", "]"}]}]}]}], " ", "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"CalcExpecPauliString", "[", 
      RowBox[{"\[Psi]", ",", " ", "h", ",", " ", "\[Phi]"}], "]"}]}], ",", 
    "\[IndentingNewLine]", "\t", "20"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.914246749848875*^9, 3.9142468025998697`*^9}, {
  3.914246895702077*^9, 3.9142469149144278`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"ca45b8da-7793-4a77-97f2-bbd61d61afc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.29005358415424476`", ",", "0.03548274149999748`", ",", 
   "0.5482302320001725`", ",", "0.24239508601987225`", ",", 
   "0.031695140310521404`", ",", "0.40399742852938436`", ",", 
   "0.24132949678924445`", ",", "0.5736689629240846`", ",", 
   "0.26146475265276503`", ",", "0.3718428191589319`", ",", 
   "0.24104684961009962`", ",", "0.10000694336233618`", ",", 
   "0.12476387156459716`", ",", "0.3814090647377234`", ",", 
   RowBox[{"-", "0.16884304196952762`"}], ",", "0.5652049255188194`", ",", 
   "0.4181746761824698`", ",", 
   RowBox[{"-", "0.18379964365616402`"}], ",", "0.2878223947897389`", ",", 
   "0.33714574734418196`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9142467928425922`*^9, 3.9142468041523037`*^9}, 
   3.914246897664002*^9, 3.91424957652579*^9, 3.914249794240613*^9, 
   3.914251501534485*^9, 3.914254249312763*^9, 3.914254449428075*^9, 
   3.914255124413221*^9, 3.914258057469154*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"ec527c3d-f112-413b-9362-1f0db4ecf6a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"samples", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1.1", "vMin"}], ",", ".5"}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"vMin", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Red", ",", "Dashed"}], "]"}]}], "}"}], "}"}]}], "}"}]}], 
   ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<sample\>\"", ",", "\"\<energy\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.914246808683353*^9, 3.914246886353194*^9}, {
  3.914248021516526*^9, 3.9142480408200827`*^9}, {3.91424807185107*^9, 
  3.914248091048004*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"fff9eb2e-4705-4e52-b002-12fa0c3000f2"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Ke9aXxhM+GSPVTAgdNmoc1prUVQPofD4QuL
FaS6H0L5Ag4NflOjz7Kdh/JFHH5eVMuLsFoA5Us4RLw6wy5x+yaUL+NQ2qvU
8+jxOShfwSF2uT9zffQjKF/JYd6lnBXXdl+A8lUcnCY8uuR65jqUr+bwtPND
+/xbMP0aDhWWsuJ8s3ZC+VoOzgvEc9o+7IfydRw+TbozgTHzBpSv59DrsVV8
2Zyj+yF8A4cdbVcWa4jB7Dd02Mzatz3+8C0o38jhUouT5v6241D1xg4HMrXn
r8uGhY+JgyjX1oOnJ1+1BwC0jVzu
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"sample\"", TraditionalForm], 
    FormBox["\"energy\"", TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{}, {{-6.45172571007489, 
      Directive[
       RGBColor[1, 0, 0], 
       Dashing[{Small, Small}]]}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20}, {-7.09689828108238, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9142468126985903`*^9, 3.914246899144834*^9}, {
   3.914248023886249*^9, 3.914248037778634*^9}, {3.914248076861739*^9, 
   3.914248103759811*^9}, 3.914249576568013*^9, 3.914249794270067*^9, 
   3.9142515016536217`*^9, 3.914254249355194*^9, 3.9142544494725847`*^9, 
   3.914255124508875*^9, 3.914258057567462*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"2984592c-f7da-470c-8de9-bb63d6922f47"]
}, Open  ]],

Cell[TextData[{
 "The experimentalist could instead employ quantum gradient descent, treating \
the observable\[CloseCurlyQuote]s expectation value as the cost function to \
be minimised. This requires they can additionally obtain the ",
 StyleBox["gradient ",
  FontSlant->"Italic"],
 "of the observable,  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Del]", 
     OverscriptBox["\[Theta]", "\[RightVector]"]], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e1138dc7-dfe2-441c-bbfd-09039a4a2fe3"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{
      RowBox[{"\[Psi]", "(", 
        OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
     "Bra"], "h", 
    TemplateBox[{
      RowBox[{"\[Psi]", "(", 
        OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
     "Ket"]}], TraditionalForm]],ExpressionUUID->
  "a2b4c466-a703-48f1-ae3a-a554fb9080ae"],
 ", at a given position in parameter space. One method to do so is via the ",
 ButtonBox["parameter shift rule",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://arxiv.org/pdf/1905.13311.pdf"], None},
  ButtonNote->"https://arxiv.org/pdf/1905.13311.pdf"],
 "."
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914250746193225*^9, 3.9142507511658287`*^9}, {3.914250801851245*^9, 
   3.914250802424213*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"e38ee419-f33a-4258-9807-eb94e2f97218"],

Cell[TextData[{
 "Consider a unitary gate of form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"U", "(", "\[Theta]", ")"}], " ", "=", " ", 
    RowBox[{"exp", "(", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "\[Theta]", " ", "G"}], 
     ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5a2bd590-3b99-4d9e-85e7-b4a7a63468f2"],
 " with Hermitian generator ",
 Cell[BoxData[
  FormBox["G", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5d9384b0-3b2a-4eab-b1b5-83b92704b950"],
 ", and observable ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"E", "(", "\[Theta]", ")"}], "\[RightAngleBracket]"}], " ", "=",
      " ", 
     RowBox[{
      TemplateBox[{"\[Psi]"},
       "Bra"], 
      RowBox[{
       SuperscriptBox["U", "\[Dagger]"], "(", "\[Theta]", ")"}], " ", "H", 
      " ", 
      RowBox[{"U", "(", "\[Theta]", ")"}], 
      RowBox[{
       TemplateBox[{"\[Psi]"},
        "Ket"], "."}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8a5c2625-cc42-4d59-839a-7fb95f1e1f45"],
 " The parameter shift rule states that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      StyleBox["d",
       FontSlant->"Plain"], "d\[Theta]"], 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"E", "(", "\[Theta]", ")"}], "\[RightAngleBracket]"}]}], " ", 
    "=", " ", 
    RowBox[{"r", " ", "[", " ", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"E", "(", 
        RowBox[{"\[Theta]", "+", 
         FractionBox["\[Pi]", 
          RowBox[{"4", "r"}]]}], ")"}], "\[RightAngleBracket]"}], " ", "-", 
      " ", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"E", "(", 
        RowBox[{"\[Theta]", "-", 
         FractionBox["\[Pi]", 
          RowBox[{"4", "r"}]]}], ")"}], "\[RightAngleBracket]"}]}], " ", 
     "]"}], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "448b2e1e-def2-4cc7-8513-48573874aad0"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", " ", "=", " ", 
    RowBox[{
     FractionBox["a", "2"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["e", "1"], "-", 
       SubscriptBox["e", "0"]}], ")"}], " "}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8d8f20b1-5922-4e4e-b32c-dcd250a1185e"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "0"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3c089cbc-49b4-4a02-a3f4-283e5783f61d"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "1"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fb656dfc-3424-4c96-9f03-9581a1000288"],
 " are the eigenvalues of ",
 StyleBox["G. ",
  FontSlant->"Italic"],
 "Assuming all ansatz gates depend on unique parameters, this expression \
gives the full circuit\[CloseCurlyQuote]s derivative. "
}], "Text",
 CellChangeTimes->{{3.914248745957078*^9, 3.914248803341976*^9}, {
  3.914248846790453*^9, 3.9142491291310873`*^9}, {3.914249465858774*^9, 
  3.914249493932356*^9}, {3.914249865593092*^9, 3.914249883061528*^9}, {
  3.914249920468721*^9, 3.9142499707426567`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"99ac382f-c29c-44e8-b190-ffc93474fd5e"],

Cell[TextData[{
 "Because we our ansatz is composed of ",
 StyleBox["Ry",
  FontSlant->"Italic"],
 " = exp(-\[ImaginaryI] \[Theta]/2 ",
 StyleBox["Y",
  FontSlant->"Italic"],
 ") and ",
 StyleBox["Rz",
  FontSlant->"Italic"],
 " = exp(-\[ImaginaryI] \[Theta]/2 Z), which have ",
 StyleBox["Y",
  FontSlant->"Italic"],
 " and ",
 StyleBox["Z",
  FontSlant->"Italic"],
 " generators with \[PlusMinus]1 eigenvalues, we know that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", 
    FractionBox["1", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c4f0a07d-5790-4633-a866-4df8772b34dc"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", "a"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5142a24f-5b45-4818-98e9-e75555e3793a"],
 ", so that",
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      StyleBox["d",
       FontSlant->"Plain"], "d\[Theta]"], 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"E", "(", "\[Theta]", ")"}], "\[RightAngleBracket]"}]}], " ", 
    "=", " ", 
    RowBox[{
     FractionBox["1", "2"], " ", "[", " ", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"E", "(", 
        RowBox[{"\[Theta]", "+", 
         FractionBox["\[Pi]", "2"]}], ")"}], "\[RightAngleBracket]"}], " ", 
      "-", " ", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"E", "(", 
        RowBox[{"\[Theta]", "-", 
         FractionBox["\[Pi]", "2"]}], ")"}], "\[RightAngleBracket]"}]}], " ", 
     "]"}], " "}], TraditionalForm]],ExpressionUUID->
  "dd7d96e7-d6e5-4daf-b570-b440f74826d7"],
 ". Our experimentalist only needs to obtain ",
 StyleBox["two",
  FontSlant->"Italic"],
 " expectation values in order to find the derivative of the expectation with \
respect to a parameter.",
 " They don\[CloseCurlyQuote]t need any new circuits - they just sample the \
ansatz circuit!"
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"a2aaf9a5-0ee9-463f-8e47-5b2490740ff9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"calcExpecDeriv", "[", 
   RowBox[{
   "h_", ",", " ", "in_", ",", " ", "u_", ",", " ", "v\[Theta]_", ",", " ", 
    "d\[Theta]_", ",", " ", "\[Psi]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2", ",", "e1", ",", "e2"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"v1", " ", "=", " ", 
      RowBox[{"v\[Theta]", "  ", "/.", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d\[Theta]", "->", "v_"}], ")"}], " ", ":>", " ", 
        RowBox[{"(", 
         RowBox[{"d\[Theta]", "->", 
          RowBox[{"v", "+", 
           RowBox[{"\[Pi]", "/", "2"}]}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"v2", " ", "=", " ", 
      RowBox[{"v\[Theta]", "  ", "/.", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d\[Theta]", "->", "v_"}], ")"}], " ", ":>", " ", 
        RowBox[{"(", 
         RowBox[{"d\[Theta]", "->", 
          RowBox[{"v", "-", 
           RowBox[{"\[Pi]", "/", "2"}]}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"CloneQureg", "[", 
      RowBox[{"\[Psi]", ",", " ", "in"}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"ApplyCircuit", "[", 
      RowBox[{"\[Psi]", ",", " ", 
       RowBox[{"u", " ", "/.", "v1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"e1", " ", "=", " ", 
      RowBox[{"CalcExpecPauliString", "[", 
       RowBox[{"\[Psi]", ",", " ", "h", ",", " ", "\[Phi]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"CloneQureg", "[", 
      RowBox[{"\[Psi]", ",", " ", "in"}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"ApplyCircuit", "[", 
      RowBox[{"\[Psi]", ",", " ", 
       RowBox[{"u", " ", "/.", "v2"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"e2", " ", "=", " ", 
      RowBox[{"CalcExpecPauliString", "[", 
       RowBox[{"\[Psi]", ",", " ", "h", ",", " ", "\[Phi]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"e1", "-", "e2"}], ")"}], "/", "2"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.914250051582519*^9, 3.914250120778846*^9}, {
   3.9142501715212193`*^9, 3.914250416556185*^9}, 3.9142505135222807`*^9, {
   3.914251705181096*^9, 3.914251710142602*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"b0af15a5-e513-46cb-8bc0-808032364b41"],

Cell["\<\
Let\[CloseCurlyQuote]s randomly initialise our parameters to values \
v\[Theta], and check the corresponding energy.\
\>", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250958972892*^9}, {
   3.914251004016518*^9, 3.914251059056473*^9}, {3.9142511797893667`*^9, 
   3.914251197240756*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"e68ca110-9169-4231-a68e-0e629a127cd6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v\[Theta]", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "[", "i", "]"}], "->", 
     RowBox[{"RandomReal", "[", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", "n\[Theta]"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init\[Theta]", " ", "=", " ", "v\[Theta]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.914250446251307*^9, 3.914250475972334*^9}, {
  3.91425085404881*^9, 3.914250855713902*^9}, {3.914254057995305*^9, 
  3.914254064834856*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"421fdb56-079c-48f5-9826-07aa5fa5108f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]", "[", "1", "]"}], "\[Rule]", "0.9447829371530669`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "2", "]"}], "\[Rule]", "0.6744545029762157`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "3", "]"}], "\[Rule]", "0.05080292281576537`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "4", "]"}], "\[Rule]", "0.38187359714415514`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "5", "]"}], "\[Rule]", "0.9476166341776091`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "6", "]"}], "\[Rule]", "0.8035370986933439`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "7", "]"}], "\[Rule]", "0.5188976887091235`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "8", "]"}], "\[Rule]", "0.12348964953397656`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "9", "]"}], "\[Rule]", "0.005412442643154325`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "10", "]"}], "\[Rule]", "0.6336026837451045`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "11", "]"}], "\[Rule]", "0.7087689489081421`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "12", "]"}], "\[Rule]", "0.33035241951701066`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "13", "]"}], "\[Rule]", "0.8411698326162642`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "14", "]"}], "\[Rule]", "0.30013232188943473`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "15", "]"}], "\[Rule]", "0.31527688890689`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "16", "]"}], "\[Rule]", "0.38555026123931313`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "17", "]"}], "\[Rule]", "0.8077333739807897`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "18", "]"}], "\[Rule]", "0.4935285113189234`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "19", "]"}], "\[Rule]", "0.23560896819648902`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "20", "]"}], "\[Rule]", "0.49985479670226907`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "21", "]"}], "\[Rule]", "0.9843750656410033`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "22", "]"}], "\[Rule]", "0.9126590824288701`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "23", "]"}], "\[Rule]", "0.2733288318894225`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "24", "]"}], "\[Rule]", "0.35328280550469415`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "25", "]"}], "\[Rule]", "0.3991534966268395`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "26", "]"}], "\[Rule]", "0.5493638795200528`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "27", "]"}], "\[Rule]", "0.9831777035175373`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "28", "]"}], "\[Rule]", "0.8899032696547775`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "29", "]"}], "\[Rule]", "0.09285377457557198`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "30", "]"}], "\[Rule]", "0.9757941876940797`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "31", "]"}], "\[Rule]", "0.8078378362426812`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "32", "]"}], "\[Rule]", "0.1629104163561701`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "33", "]"}], "\[Rule]", "0.8028871139296996`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "34", "]"}], "\[Rule]", "0.8428390711847702`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "35", "]"}], "\[Rule]", "0.4156624612256852`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "36", "]"}], "\[Rule]", "0.647286285538943`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "37", "]"}], "\[Rule]", "0.4940669004176548`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "38", "]"}], "\[Rule]", "0.3490752388649305`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "39", "]"}], "\[Rule]", "0.8807071896158676`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "40", "]"}], "\[Rule]", "0.6203667824161576`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "41", "]"}], "\[Rule]", "0.45324731334714596`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "42", "]"}], "\[Rule]", 
    "0.0007297536071797506`"}], ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "43", "]"}], "\[Rule]", "0.5642781567894004`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "44", "]"}], "\[Rule]", "0.919764528289821`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "45", "]"}], "\[Rule]", "0.6074614256920521`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "46", "]"}], "\[Rule]", "0.2487410624759594`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "47", "]"}], "\[Rule]", "0.7843117934242687`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "48", "]"}], "\[Rule]", "0.8381046269296466`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "49", "]"}], "\[Rule]", "0.0971371824237619`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "50", "]"}], "\[Rule]", "0.8896344298769754`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "51", "]"}], "\[Rule]", "0.15277554518954317`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "52", "]"}], "\[Rule]", "0.4616252400211345`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "53", "]"}], "\[Rule]", "0.957947582485285`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "54", "]"}], "\[Rule]", "0.37558641492708933`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "55", "]"}], "\[Rule]", "0.7866150728974644`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "56", "]"}], "\[Rule]", 
    "0.06414785558005964`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9142504714771833`*^9, 3.914250476353299*^9}, 
   3.91425085594843*^9, 3.914251215641156*^9, 3.914251501763685*^9, 
   3.914254065270636*^9, 3.914254249393008*^9, 3.914254449514576*^9, 
   3.914255124552622*^9, 3.91425805762116*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"838c15c5-5fed-4914-9f1a-09a4328f02e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CloneQureg", "[", 
   RowBox[{"\[Psi]", ",", " ", "in"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyCircuit", "[", 
   RowBox[{"\[Psi]", ",", " ", 
    RowBox[{"u", " ", "/.", "v\[Theta]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CalcExpecPauliString", "[", 
  RowBox[{"\[Psi]", ",", " ", "h", ",", " ", "\[Phi]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.914251206615131*^9, 3.9142512131823683`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"1afb23f0-01de-41f8-be34-7a2dd9c03f00"],

Cell[BoxData["0.35809891298470425`"], "Output",
 CellChangeTimes->{{3.9142512136327677`*^9, 3.914251217183175*^9}, 
   3.914251501868692*^9, 3.914254068357297*^9, 3.914254249404386*^9, 
   3.91425444954548*^9, 3.914255124586616*^9, 3.914258057649871*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"15b1efb1-8351-4f09-a349-69214782306a"]
}, Open  ]],

Cell[TextData[{
 "Here are the derivatives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     StyleBox["d",
      FontSlant->"Plain"], 
     RowBox[{"d\[Theta]", "[", "1", "]"}]], 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"E", "(", "\[Theta]", ")"}], "\[RightAngleBracket]"}]}], 
   TraditionalForm]],ExpressionUUID->"b43e90cc-6c12-4c67-977c-a445791cf43a"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     StyleBox["d",
      FontSlant->"Plain"], 
     RowBox[{"d\[Theta]", "[", "2", "]"}]], 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"E", "(", "\[Theta]", ")"}], "\[RightAngleBracket]"}]}], 
   TraditionalForm]],ExpressionUUID->"e56a7b79-03ee-4645-a15a-ff302f71644b"]
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250958972892*^9}, {
   3.914251004016518*^9, 3.914251059056473*^9}, {3.914251229291445*^9, 
   3.91425123347196*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"262388ab-3621-4c66-a924-dd6320d56a95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcExpecDeriv", "[", 
  RowBox[{"h", ",", " ", "in", ",", " ", "u", ",", " ", "v\[Theta]", ",", " ", 
   RowBox[{"\[Theta]", "[", "1", "]"}], ",", " ", "\[Psi]", ",", " ", 
   "\[Phi]"}], "]"}]], "Input",
 CellChangeTimes->{{3.914250482560252*^9, 3.914250492074025*^9}, {
  3.914250867543095*^9, 3.9142508703387213`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"48a10217-edb3-480b-9c22-c669bda718af"],

Cell[BoxData["0.12058747747650922`"], "Output",
 CellChangeTimes->{
  3.9142504924423532`*^9, {3.9142508648579884`*^9, 3.914250870588808*^9}, 
   3.914251236211001*^9, 3.9142515019360456`*^9, 3.914254249429947*^9, 
   3.914254449577901*^9, 3.9142551246209373`*^9, 3.914258057703437*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"079ab715-8638-470e-99e7-b4f1028fbd69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcExpecDeriv", "[", 
  RowBox[{"h", ",", " ", "in", ",", " ", "u", ",", " ", "v\[Theta]", ",", " ", 
   RowBox[{"\[Theta]", "[", "2", "]"}], ",", " ", "\[Psi]", ",", " ", 
   "\[Phi]"}], "]"}]], "Input",
 CellChangeTimes->{{3.914251066289823*^9, 3.914251066341114*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"e38a486e-1910-40dc-bfd9-c3984d93ad7e"],

Cell[BoxData[
 RowBox[{"-", "0.060978884058846355`"}]], "Output",
 CellChangeTimes->{3.91425106660705*^9, 3.914251237862144*^9, 
  3.914251502008003*^9, 3.914254249460389*^9, 3.914254449590063*^9, 
  3.914255124656136*^9, 3.914258057723303*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"d887062a-ed4b-4c69-9cdf-c039465c1b39"]
}, Open  ]],

Cell[TextData[{
 "Obtaining the gradient at parameter values ",
 StyleBox["v\[Theta]",
  FontWeight->"Bold"],
 " therefore requires evaluating ",
 StyleBox["2 n\[Theta]",
  FontWeight->"Bold"],
 "  expectation values."
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250958972892*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"da0e947f-04b2-4816-8451-f9b22b91dceb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grad", " ", "=", " ", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"calcExpecDeriv", "[", 
     RowBox[{
     "h", ",", " ", "in", ",", " ", "u", ",", " ", "v\[Theta]", ",", " ", 
      RowBox[{"\[Theta]", "[", "i", "]"}], ",", " ", "\[Psi]", ",", " ", 
      "\[Phi]"}], "]"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "n\[Theta]"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.914250876131098*^9, 3.914250887759289*^9}, {
  3.914251110055048*^9, 3.9142511107008543`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"91d5e9d2-c7fa-4081-ab8a-14957b9b07c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.12058747747650922`", ",", 
   RowBox[{"-", "0.060978884058846355`"}], ",", 
   RowBox[{"-", "0.06177241099633059`"}], ",", 
   RowBox[{"-", "0.31656889900511886`"}], ",", 
   RowBox[{"-", "0.020643583695698187`"}], ",", 
   RowBox[{"-", "0.2341337522512246`"}], ",", 
   RowBox[{"-", "0.17573574590653962`"}], ",", "0.25311956013673087`", ",", 
   "0.3302876636405122`", ",", 
   RowBox[{"-", "0.15650228615037973`"}], ",", 
   RowBox[{"-", "0.12930539522190906`"}], ",", 
   RowBox[{"-", "0.10331436948077223`"}], ",", 
   RowBox[{"-", "0.1899721348158559`"}], ",", "0.031476382634798385`", ",", 
   "0.15295899339499577`", ",", 
   RowBox[{"-", "0.017904541223022263`"}], ",", "0.27981295546117474`", ",", 
   RowBox[{"-", "0.35230624404685285`"}], ",", 
   RowBox[{"-", "0.027592256029584095`"}], ",", 
   RowBox[{"-", "0.22221041500844868`"}], ",", "0.20333566167792236`", ",", 
   RowBox[{"-", "0.021528011184134027`"}], ",", "0.30956078255784075`", ",", 
   RowBox[{"-", "0.06074298861830078`"}], ",", "0.13974135445936137`", ",", 
   RowBox[{"-", "0.1540588918766308`"}], ",", "0.23471915480533337`", ",", 
   RowBox[{"-", "0.2663648173253482`"}], ",", "0.07640204267328676`", ",", 
   RowBox[{"-", "0.0048983478393174185`"}], ",", 
   RowBox[{"-", "0.20510512162536365`"}], ",", 
   RowBox[{"-", "0.14662734644326916`"}], ",", 
   RowBox[{"-", "0.3916730732026304`"}], ",", 
   RowBox[{"-", "0.08546510470679919`"}], ",", "0.10338620344406356`", ",", 
   RowBox[{"-", "0.1602569826846361`"}], ",", "0.3839928645441888`", ",", 
   "0.016442014393664196`", ",", "0.12301275960547532`", ",", 
   RowBox[{"-", "0.14376136724825597`"}], ",", "0.044633347157329736`", ",", 
   RowBox[{"-", "0.3833236087026809`"}], ",", 
   RowBox[{"-", "0.11987943852452582`"}], ",", "0.2125712257657984`", ",", 
   "0.5037445010908147`", ",", 
   RowBox[{"-", "0.1340119859454396`"}], ",", 
   RowBox[{"-", "0.017959614828773507`"}], ",", 
   RowBox[{"-", "0.16493987176371647`"}], ",", "0.3240104394548471`", ",", 
   RowBox[{"-", "0.16475385452246674`"}], ",", "0.008920030779665411`", ",", 
   "0.0577205600406536`", ",", "0.17862373540206872`", ",", 
   RowBox[{"-", "0.05162519611796765`"}], ",", "0.13648353954424164`", ",", 
   RowBox[{"-", "0.3990773729768243`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.914250888851389*^9, 3.9142511118207493`*^9, 
  3.9142511509395113`*^9, 3.914251241935432*^9, 3.9142515032878933`*^9, 
  3.914254249907825*^9, 3.914254450064952*^9, 3.9142551251466007`*^9, 
  3.914258058203432*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"89de514e-6ce9-4722-ad4b-7c97a7bc4115"]
}, Open  ]],

Cell[TextData[{
 "Gradient descent simply instructs the experimentalist to update the \
parameters in the opposite direction to this gradient, in order to reduce the \
cost function. That is:\n        ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", 
     OverscriptBox["\[Theta]", "\[RightVector]"]}], " ", "=", " ", 
    RowBox[{"-", " ", 
     RowBox[{"\[Del]", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"E", "(", 
        OverscriptBox["\[Theta]", "\[RightVector]"], ")"}], 
       "\[RightAngleBracket]"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "096b9d67-95f8-446a-ac03-d1c24f52620d"]
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250990899229*^9}, {
   3.914251085832686*^9, 3.914251104065876*^9}, {3.914251134735272*^9, 
   3.91425113717677*^9}, {3.9142513139507*^9, 3.914251318436346*^9}, {
   3.9142519027862873`*^9, 3.914252001566554*^9}, {3.914252302411972*^9, 
   3.9142523108169537`*^9}, {3.9142523847386208`*^9, 3.9142523971362057`*^9}},
 
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"4d08d565-d43c-4935-80bc-af2e8e216403"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalDelta]t", " ", "=", " ", "0.1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v\[Theta]", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "-=", " ", 
   RowBox[{"\[CapitalDelta]t", " ", "grad"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9142511149479713`*^9, 3.914251156816799*^9}, {
  3.914251250201952*^9, 3.91425125862683*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"1f501584-068e-4bf4-8c05-890fc0960dcd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CloneQureg", "[", 
   RowBox[{"\[Psi]", ",", " ", "in"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyCircuit", "[", 
   RowBox[{"\[Psi]", ",", " ", 
    RowBox[{"u", " ", "/.", "v\[Theta]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CalcExpecPauliString", "[", 
  RowBox[{"\[Psi]", ",", " ", "h", ",", " ", "\[Phi]"}], "]"}]}], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"5d413a62-e498-40e2-aa8f-bf7e2938e04e"],

Cell[BoxData["0.12087653548543224`"], "Output",
 CellChangeTimes->{3.914251264728382*^9, 3.914251503397491*^9, 
  3.914254249938836*^9, 3.9142544501177464`*^9, 3.914255125248232*^9, 
  3.91425805835426*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"a66c1344-7943-4e40-b39f-68b65f83503d"]
}, Open  ]],

Cell["\<\
Indeed the expectation value has reduced! This process can be repeated, \
iteratively minimising the cost function.\
\>", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250990899229*^9}, {
   3.914251085832686*^9, 3.914251104065876*^9}, {3.914251134735272*^9, 
   3.91425113717677*^9}, {3.9142512742844687`*^9, 3.914251329933467*^9}, {
   3.914253440951364*^9, 3.9142534507280493`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"7ab3588e-df25-4ee2-9601-5c26c6e89575"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v\[Theta]", " ", "=", " ", "init\[Theta]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gradVals", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"grad", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"calcExpecDeriv", "[", 
          RowBox[{
          "h", ",", " ", "in", ",", " ", "u", ",", " ", "v\[Theta]", ",", " ", 
           RowBox[{"\[Theta]", "[", "i", "]"}], ",", " ", "\[Psi]", ",", " ", 
           "\[Phi]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "n\[Theta]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"v\[Theta]", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "-=", " ", 
       RowBox[{"\[CapitalDelta]t", " ", "grad"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
      RowBox[{"ApplyCircuit", "[", 
       RowBox[{
        RowBox[{"CloneQureg", "[", 
         RowBox[{"\[Psi]", ",", " ", "in"}], "]"}], ",", " ", 
        RowBox[{"u", " ", "/.", "v\[Theta]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"CalcExpecPauliString", "[", 
       RowBox[{"\[Psi]", ",", " ", "h", ",", " ", "\[Phi]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\t", "30"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9142513317202997`*^9, 3.914251396651124*^9}, 
   3.914251483460238*^9, {3.9142541830358*^9, 3.914254195730307*^9}, {
   3.914255092280957*^9, 3.91425509504632*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"736ce2e9-3093-4427-879c-62e08a209322"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"gradVals", ",", " ", "\[IndentingNewLine]", "\t", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<iteration\>\"", ",", " ", "\"\<energy\>\""}], "}"}]}], ",", 
   " ", "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1.1", "vMin"}], ",", ".5"}], "}"}]}], ",", " ", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"vMin", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Red", ",", "Dashed"}], "]"}]}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9142514058407393`*^9, 3.9142514079072847`*^9}, {
   3.914251449186591*^9, 3.914251462632222*^9}, 3.9142550971605453`*^9, {
   3.914256588031824*^9, 3.914256619780279*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"26846209-5cd6-493e-9215-fb0cc416cab1"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7C83Hd53+OM+e6iAw92MWZzr2ffth3A5HKYv
vyelYnQNyhdw4D32P1/+4UMoX8Shcr37i453z6F8CYfiOftKTtm+hfJlHOKF
QnV3ffoA5Ss4SMq+3V7A+BnKV3KQOeTat/T6FyhfxUGpneWpV/03KF/N4d7O
E3mPGH5A+RoOiS97lHRSfkL5Wg6iAUuUn6//BeXrODy+2Pzb++VvKF/PgW32
D7XTwn+hfAMHSdZHczUN/0H5hg6uds/f3XT8D+UbOUy/n7pymxLDAQjf2GHf
37eeTXNhfBOHPfUu+24IMEL5pg62U85kxNfA+GYOK7VXyr69D+ObO2itDN8z
wZoJyrdwsEleNK2nH8a3dJDmyeHyvgPjWzk84EiZGqDEDOVbO9Rb/p+tlwTj
2zgYNwvsqZgD49s6XP6Y6L33Ioxv5/DW/eX5BiaWAwCM6JAe
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"iteration\"", TraditionalForm], 
    FormBox["\"energy\"", TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{}, {{-6.45172571007489, 
      Directive[
       RGBColor[1, 0, 0], 
       Dashing[{Small, Small}]]}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 30}, {-7.09689828108238, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.914251428743115*^9, 3.914251462927424*^9}, 
   3.9142515253469*^9, 3.914254263602642*^9, 3.914254464494379*^9, 
   3.914255139310831*^9, {3.914256586588962*^9, 3.914256621901121*^9}, 
   3.914258076024725*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"c3e66a88-04cf-4c34-9ffe-d808db4c37a9"]
}, Open  ]],

Cell["\<\
We have effectively simulated quantum natural gradient in a noise-free \
setting. Let\[CloseCurlyQuote]s now introduce decoherence into our ansatz \
circuit, inserting dephasing noise after every Rz, and two-qubit depolarising \
noise after every control-Z.\
\>", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250990899229*^9}, {
   3.914251085832686*^9, 3.914251104065876*^9}, {3.914251134735272*^9, 
   3.91425113717677*^9}, {3.9142512742844687`*^9, 3.914251329933467*^9}, {
   3.914253415056573*^9, 3.914253515808655*^9}, {3.914253785894093*^9, 
   3.914253872223501*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"685bfc71-a9bb-4a48-bc77-cae2556876ca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ch", " ", "=", " ", 
    RowBox[{"u", " ", "/.", " ", 
     RowBox[{"{", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"g", ":", 
         RowBox[{
          SubscriptBox["Rz", "t_"], "[", "_", "]"}]}], ":>", 
        RowBox[{"Sequence", "[", 
         RowBox[{"g", ",", 
          RowBox[{
           SubscriptBox["Deph", "t"], "[", 
           SuperscriptBox["10", 
            RowBox[{"-", "3"}]], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]",
        "\t", 
       RowBox[{
        RowBox[{"g", ":", 
         RowBox[{
          SubscriptBox["C", "c_"], "[", 
          SubscriptBox["Z", "t_"], "]"}]}], " ", ":>", " ", 
        RowBox[{"Sequence", "[", 
         RowBox[{"g", ",", " ", 
          RowBox[{
           SubscriptBox["Depol", 
            RowBox[{"c", ",", "t"}]], "[", 
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]], "]"}]}], "]"}]}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"DrawCircuit", "[", "ch", "]"}]}], "Input",
 CellChangeTimes->{{3.914253628630274*^9, 3.9142536429361677`*^9}, {
  3.914253689931489*^9, 3.91425376321071*^9}, {3.914253796654131*^9, 
  3.914253829318915*^9}, {3.91425442210363*^9, 3.9142544378222322`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"68e1b1fb-ecd0-4fc4-b941-842e00ddc86c"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {{LineBox[{{0, 0.5}, {1, 0.5}}], LineBox[{{0, 1.5}, {1, 1.5}}], 
     LineBox[{{0, 2.5}, {1, 2.5}}], LineBox[{{0, 3.5}, {1, 3.5}}], 
     LineBox[{{0, 4.5}, {1, 4.5}}], LineBox[{{0, 5.5}, {1, 5.5}}], 
     LineBox[{{0, 6.5}, {1, 6.5}}]}, {LineBox[{{1, 0.5}, {2, 0.5}}], 
     LineBox[{{1, 1.5}, {2, 1.5}}], LineBox[{{1, 2.5}, {2, 2.5}}], 
     LineBox[{{1, 3.5}, {2, 3.5}}], LineBox[{{1, 4.5}, {2, 4.5}}], 
     LineBox[{{1, 5.5}, {2, 5.5}}], LineBox[{{1, 6.5}, {2, 6.5}}]}, {
     LineBox[{{2, 0.5}, {3, 0.5}}], LineBox[{{2, 1.5}, {3, 1.5}}], 
     LineBox[{{2, 2.5}, {3, 2.5}}], LineBox[{{2, 3.5}, {3, 3.5}}], 
     LineBox[{{2, 4.5}, {3, 4.5}}], LineBox[{{2, 5.5}, {3, 5.5}}], 
     LineBox[{{2, 6.5}, {3, 6.5}}]}, {LineBox[{{3, 0.5}, {4, 0.5}}], 
     LineBox[{{3, 1.5}, {4, 1.5}}], LineBox[{{3, 2.5}, {4, 2.5}}], 
     LineBox[{{3, 3.5}, {4, 3.5}}], LineBox[{{3, 4.5}, {4, 4.5}}], 
     LineBox[{{3, 5.5}, {4, 5.5}}], LineBox[{{3, 6.5}, {4, 6.5}}]}, {
     LineBox[{{4, 0.5}, {5, 0.5}}], LineBox[{{4, 1.5}, {5, 1.5}}], 
     LineBox[{{4, 2.5}, {5, 2.5}}], LineBox[{{4, 3.5}, {5, 3.5}}], 
     LineBox[{{4, 4.5}, {5, 4.5}}], LineBox[{{4, 5.5}, {5, 5.5}}], 
     LineBox[{{4, 6.5}, {5, 6.5}}]}, {LineBox[{{5, 0.5}, {6, 0.5}}], 
     LineBox[{{5, 1.5}, {6, 1.5}}], LineBox[{{5, 2.5}, {6, 2.5}}], 
     LineBox[{{5, 3.5}, {6, 3.5}}], LineBox[{{5, 4.5}, {6, 4.5}}], 
     LineBox[{{5, 5.5}, {6, 5.5}}], LineBox[{{5, 6.5}, {6, 6.5}}]}, {
     LineBox[{{6, 0.5}, {7, 0.5}}], LineBox[{{6, 1.5}, {7, 1.5}}], 
     LineBox[{{6, 2.5}, {7, 2.5}}], LineBox[{{6, 3.5}, {7, 3.5}}], 
     LineBox[{{6, 4.5}, {7, 4.5}}], LineBox[{{6, 5.5}, {7, 5.5}}], 
     LineBox[{{6, 6.5}, {7, 6.5}}]}, {{LineBox[{{7.5, 0.5}, {8.5, 0.5}}], 
      LineBox[{{7.5, 1.5}, {8.5, 1.5}}], LineBox[{{7.5, 2.5}, {8.5, 2.5}}], 
      LineBox[{{7.5, 3.5}, {8.5, 3.5}}], LineBox[{{7.5, 4.5}, {8.5, 4.5}}], 
      LineBox[{{7.5, 5.5}, {8.5, 5.5}}], LineBox[{{7.5, 6.5}, {8.5, 6.5}}]}, {
      LineBox[{{7, 0.5}, {8, 0.5}}], LineBox[{{7, 2.5}, {8, 2.5}}], 
      LineBox[{{7, 3.5}, {8, 3.5}}], LineBox[{{7, 4.5}, {8, 4.5}}], 
      LineBox[{{7, 5.5}, {8, 5.5}}]}, {LineBox[{{8, 0.5}, {9, 0.5}}], 
      LineBox[{{8, 2.5}, {9, 2.5}}], LineBox[{{8, 3.5}, {9, 3.5}}], 
      LineBox[{{8, 4.5}, {9, 4.5}}], LineBox[{{8, 5.5}, {9, 5.5}}]}}, {
     LineBox[{{9, 0.5}, {10, 0.5}}], LineBox[{{9, 1.5}, {10, 1.5}}], 
     LineBox[{{9, 2.5}, {10, 2.5}}], LineBox[{{9, 3.5}, {10, 3.5}}], 
     LineBox[{{9, 4.5}, {10, 4.5}}], LineBox[{{9, 5.5}, {10, 5.5}}], 
     LineBox[{{9, 6.5}, {10, 6.5}}]}, {LineBox[{{10, 0.5}, {11, 0.5}}], 
     LineBox[{{10, 1.5}, {11, 1.5}}], LineBox[{{10, 2.5}, {11, 2.5}}], 
     LineBox[{{10, 3.5}, {11, 3.5}}], LineBox[{{10, 4.5}, {11, 4.5}}], 
     LineBox[{{10, 5.5}, {11, 5.5}}], LineBox[{{10, 6.5}, {11, 6.5}}]}, {
     LineBox[{{11, 0.5}, {12, 0.5}}], LineBox[{{11, 1.5}, {12, 1.5}}], 
     LineBox[{{11, 2.5}, {12, 2.5}}], LineBox[{{11, 3.5}, {12, 3.5}}], 
     LineBox[{{11, 4.5}, {12, 4.5}}], LineBox[{{11, 5.5}, {12, 5.5}}], 
     LineBox[{{11, 6.5}, {12, 6.5}}]}, {LineBox[{{12, 0.5}, {13, 0.5}}], 
     LineBox[{{12, 1.5}, {13, 1.5}}], LineBox[{{12, 2.5}, {13, 2.5}}], 
     LineBox[{{12, 3.5}, {13, 3.5}}], LineBox[{{12, 4.5}, {13, 4.5}}], 
     LineBox[{{12, 5.5}, {13, 5.5}}], LineBox[{{12, 6.5}, {13, 6.5}}]}, {
     LineBox[{{13, 0.5}, {14, 0.5}}], LineBox[{{13, 1.5}, {14, 1.5}}], 
     LineBox[{{13, 2.5}, {14, 2.5}}], LineBox[{{13, 3.5}, {14, 3.5}}], 
     LineBox[{{13, 4.5}, {14, 4.5}}], LineBox[{{13, 5.5}, {14, 5.5}}], 
     LineBox[{{13, 6.5}, {14, 6.5}}]}, {LineBox[{{14, 0.5}, {15, 0.5}}], 
     LineBox[{{14, 1.5}, {15, 1.5}}], LineBox[{{14, 2.5}, {15, 2.5}}], 
     LineBox[{{14, 3.5}, {15, 3.5}}], LineBox[{{14, 4.5}, {15, 4.5}}], 
     LineBox[{{14, 5.5}, {15, 5.5}}], LineBox[{{14, 6.5}, {15, 6.5}}]}, {
     LineBox[{{15, 0.5}, {16, 0.5}}], LineBox[{{15, 1.5}, {16, 1.5}}], 
     LineBox[{{15, 2.5}, {16, 2.5}}], LineBox[{{15, 3.5}, {16, 3.5}}], 
     LineBox[{{15, 4.5}, {16, 4.5}}], LineBox[{{15, 5.5}, {16, 5.5}}], 
     LineBox[{{15, 6.5}, {16, 6.5}}]}, {LineBox[{{16, 0.5}, {17, 0.5}}], 
     LineBox[{{16, 1.5}, {17, 1.5}}], LineBox[{{16, 2.5}, {17, 2.5}}], 
     LineBox[{{16, 3.5}, {17, 3.5}}], LineBox[{{16, 4.5}, {17, 4.5}}], 
     LineBox[{{16, 5.5}, {17, 5.5}}], LineBox[{{16, 6.5}, {17, 6.5}}]}, {
     LineBox[{{17, 0.5}, {18, 0.5}}], LineBox[{{17, 1.5}, {18, 1.5}}], 
     LineBox[{{17, 2.5}, {18, 2.5}}], LineBox[{{17, 3.5}, {18, 3.5}}], 
     LineBox[{{17, 4.5}, {18, 4.5}}], LineBox[{{17, 5.5}, {18, 5.5}}], 
     LineBox[{{17, 6.5}, {18, 6.5}}]}, {{LineBox[{{18.5, 0.5}, {19.5, 0.5}}], 
      LineBox[{{18.5, 1.5}, {19.5, 1.5}}], 
      LineBox[{{18.5, 2.5}, {19.5, 2.5}}], 
      LineBox[{{18.5, 3.5}, {19.5, 3.5}}], 
      LineBox[{{18.5, 4.5}, {19.5, 4.5}}], 
      LineBox[{{18.5, 5.5}, {19.5, 5.5}}], 
      LineBox[{{18.5, 6.5}, {19.5, 6.5}}]}, {LineBox[{{18, 0.5}, {19, 0.5}}], 
      LineBox[{{18, 2.5}, {19, 2.5}}], LineBox[{{18, 3.5}, {19, 3.5}}], 
      LineBox[{{18, 4.5}, {19, 4.5}}], LineBox[{{18, 5.5}, {19, 5.5}}]}, {
      LineBox[{{19, 0.5}, {20, 0.5}}], LineBox[{{19, 2.5}, {20, 2.5}}], 
      LineBox[{{19, 3.5}, {20, 3.5}}], LineBox[{{19, 4.5}, {20, 4.5}}], 
      LineBox[{{19, 5.5}, {20, 5.5}}]}}, {LineBox[{{20, 0.5}, {21, 0.5}}], 
     LineBox[{{20, 1.5}, {21, 1.5}}], LineBox[{{20, 2.5}, {21, 2.5}}], 
     LineBox[{{20, 3.5}, {21, 3.5}}], LineBox[{{20, 4.5}, {21, 4.5}}], 
     LineBox[{{20, 5.5}, {21, 5.5}}], LineBox[{{20, 6.5}, {21, 6.5}}]}, {
     LineBox[{{21, 0.5}, {22, 0.5}}], LineBox[{{21, 1.5}, {22, 1.5}}], 
     LineBox[{{21, 2.5}, {22, 2.5}}], LineBox[{{21, 3.5}, {22, 3.5}}], 
     LineBox[{{21, 4.5}, {22, 4.5}}], LineBox[{{21, 5.5}, {22, 5.5}}], 
     LineBox[{{21, 6.5}, {22, 6.5}}]}, {LineBox[{{22, 0.5}, {23, 0.5}}], 
     LineBox[{{22, 1.5}, {23, 1.5}}], LineBox[{{22, 2.5}, {23, 2.5}}], 
     LineBox[{{22, 3.5}, {23, 3.5}}], LineBox[{{22, 4.5}, {23, 4.5}}], 
     LineBox[{{22, 5.5}, {23, 5.5}}], LineBox[{{22, 6.5}, {23, 6.5}}]}, {
     LineBox[{{23, 0.5}, {24, 0.5}}], LineBox[{{23, 1.5}, {24, 1.5}}], 
     LineBox[{{23, 2.5}, {24, 2.5}}], LineBox[{{23, 3.5}, {24, 3.5}}], 
     LineBox[{{23, 4.5}, {24, 4.5}}], LineBox[{{23, 5.5}, {24, 5.5}}], 
     LineBox[{{23, 6.5}, {24, 6.5}}]}, {LineBox[{{24, 0.5}, {25, 0.5}}], 
     LineBox[{{24, 1.5}, {25, 1.5}}], LineBox[{{24, 2.5}, {25, 2.5}}], 
     LineBox[{{24, 3.5}, {25, 3.5}}], LineBox[{{24, 4.5}, {25, 4.5}}], 
     LineBox[{{24, 5.5}, {25, 5.5}}], LineBox[{{24, 6.5}, {25, 6.5}}]}, {
     LineBox[{{25, 0.5}, {26, 0.5}}], LineBox[{{25, 1.5}, {26, 1.5}}], 
     LineBox[{{25, 2.5}, {26, 2.5}}], LineBox[{{25, 3.5}, {26, 3.5}}], 
     LineBox[{{25, 4.5}, {26, 4.5}}], LineBox[{{25, 5.5}, {26, 5.5}}], 
     LineBox[{{25, 6.5}, {26, 6.5}}]}, {LineBox[{{26, 0.5}, {27, 0.5}}], 
     LineBox[{{26, 1.5}, {27, 1.5}}], LineBox[{{26, 2.5}, {27, 2.5}}], 
     LineBox[{{26, 3.5}, {27, 3.5}}], LineBox[{{26, 4.5}, {27, 4.5}}], 
     LineBox[{{26, 5.5}, {27, 5.5}}], LineBox[{{26, 6.5}, {27, 6.5}}]}, {
     LineBox[{{27, 0.5}, {28, 0.5}}], LineBox[{{27, 1.5}, {28, 1.5}}], 
     LineBox[{{27, 2.5}, {28, 2.5}}], LineBox[{{27, 3.5}, {28, 3.5}}], 
     LineBox[{{27, 4.5}, {28, 4.5}}], LineBox[{{27, 5.5}, {28, 5.5}}], 
     LineBox[{{27, 6.5}, {28, 6.5}}]}, {LineBox[{{28, 0.5}, {29, 0.5}}], 
     LineBox[{{28, 1.5}, {29, 1.5}}], LineBox[{{28, 2.5}, {29, 2.5}}], 
     LineBox[{{28, 3.5}, {29, 3.5}}], LineBox[{{28, 4.5}, {29, 4.5}}], 
     LineBox[{{28, 5.5}, {29, 5.5}}], 
     LineBox[{{28, 6.5}, {29, 6.5}}]}, {{LineBox[{{29.5, 0.5}, {30.5, 0.5}}], 
      LineBox[{{29.5, 1.5}, {30.5, 1.5}}], 
      LineBox[{{29.5, 2.5}, {30.5, 2.5}}], 
      LineBox[{{29.5, 3.5}, {30.5, 3.5}}], 
      LineBox[{{29.5, 4.5}, {30.5, 4.5}}], 
      LineBox[{{29.5, 5.5}, {30.5, 5.5}}], 
      LineBox[{{29.5, 6.5}, {30.5, 6.5}}]}, {LineBox[{{29, 0.5}, {30, 0.5}}], 
      LineBox[{{29, 2.5}, {30, 2.5}}], LineBox[{{29, 3.5}, {30, 3.5}}], 
      LineBox[{{29, 4.5}, {30, 4.5}}], LineBox[{{29, 5.5}, {30, 5.5}}]}, {
      LineBox[{{30, 0.5}, {31, 0.5}}], LineBox[{{30, 2.5}, {31, 2.5}}], 
      LineBox[{{30, 3.5}, {31, 3.5}}], LineBox[{{30, 4.5}, {31, 4.5}}], 
      LineBox[{{30, 5.5}, {31, 5.5}}]}}, {LineBox[{{31, 0.5}, {32, 0.5}}], 
     LineBox[{{31, 1.5}, {32, 1.5}}], LineBox[{{31, 2.5}, {32, 2.5}}], 
     LineBox[{{31, 3.5}, {32, 3.5}}], LineBox[{{31, 4.5}, {32, 4.5}}], 
     LineBox[{{31, 5.5}, {32, 5.5}}], LineBox[{{31, 6.5}, {32, 6.5}}]}, {
     LineBox[{{32, 0.5}, {33, 0.5}}], LineBox[{{32, 1.5}, {33, 1.5}}], 
     LineBox[{{32, 2.5}, {33, 2.5}}], LineBox[{{32, 3.5}, {33, 3.5}}], 
     LineBox[{{32, 4.5}, {33, 4.5}}], LineBox[{{32, 5.5}, {33, 5.5}}], 
     LineBox[{{32, 6.5}, {33, 6.5}}]}, {LineBox[{{33, 0.5}, {34, 0.5}}], 
     LineBox[{{33, 1.5}, {34, 1.5}}], LineBox[{{33, 2.5}, {34, 2.5}}], 
     LineBox[{{33, 3.5}, {34, 3.5}}], LineBox[{{33, 4.5}, {34, 4.5}}], 
     LineBox[{{33, 5.5}, {34, 5.5}}], LineBox[{{33, 6.5}, {34, 6.5}}]}, {
     LineBox[{{34, 0.5}, {35, 0.5}}], LineBox[{{34, 1.5}, {35, 1.5}}], 
     LineBox[{{34, 2.5}, {35, 2.5}}], LineBox[{{34, 3.5}, {35, 3.5}}], 
     LineBox[{{34, 4.5}, {35, 4.5}}], LineBox[{{34, 5.5}, {35, 5.5}}], 
     LineBox[{{34, 6.5}, {35, 6.5}}]}, {LineBox[{{35, 0.5}, {36, 0.5}}], 
     LineBox[{{35, 1.5}, {36, 1.5}}], LineBox[{{35, 2.5}, {36, 2.5}}], 
     LineBox[{{35, 3.5}, {36, 3.5}}], LineBox[{{35, 4.5}, {36, 4.5}}], 
     LineBox[{{35, 5.5}, {36, 5.5}}], LineBox[{{35, 6.5}, {36, 6.5}}]}}, {{
     RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 0.5}]}, {
     RectangleBox[{0.1, 1.1}, {0.9, 1.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 1.5}]}, {
     RectangleBox[{0.1, 2.1}, {0.9, 2.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 2.5}]}, {
     RectangleBox[{0.1, 3.1}, {0.9, 3.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 3.5}]}, {
     RectangleBox[{0.1, 4.1}, {0.9, 4.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 4.5}]}, {
     RectangleBox[{0.1, 5.1}, {0.9, 5.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 5.5}]}, {
     RectangleBox[{0.1, 6.1}, {0.9, 6.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 6.5}]}, {
     RectangleBox[{1.1, 0.1}, {1.9, 0.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 0.5}]}, {
     RectangleBox[{1.1, 1.1}, {1.9, 1.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 1.5}]}, {
     RectangleBox[{1.1, 2.1}, {1.9, 2.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 2.5}]}, {
     RectangleBox[{1.1, 3.1}, {1.9, 3.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 3.5}]}, {
     RectangleBox[{1.1, 4.1}, {1.9, 4.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 4.5}]}, {
     RectangleBox[{1.1, 5.1}, {1.9, 5.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 5.5}]}, {
     RectangleBox[{1.1, 6.1}, {1.9, 6.9}], 
     InsetBox["\<\"Rz\"\>", {1.5, 6.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.1, 0.1}, {2.9, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.5, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.1, 1.1}, {2.9, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.5, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.1, 2.1}, {2.9, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.5, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.1, 3.1}, {2.9, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.5, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.1, 4.1}, {2.9, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.5, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.1, 5.1}, {2.9, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.5, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.1, 6.1}, {2.9, 6.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.5, 6.5}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{3.5, 0.5}, 0.1], DiskBox[{3.5, 1.5}, 0.1]}, 
      LineBox[{{3.5, 0.5}, {3.5, 1.5}}]}, LineBox[{{3.5, 0.5}, {3.5, 0.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{3.5, 2.5}, 0.1], DiskBox[{3.5, 3.5}, 0.1]}, 
      LineBox[{{3.5, 2.5}, {3.5, 3.5}}]}, LineBox[{{3.5, 2.5}, {3.5, 2.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{3.5, 4.5}, 0.1], DiskBox[{3.5, 5.5}, 0.1]}, 
      LineBox[{{3.5, 4.5}, {3.5, 5.5}}]}, 
     LineBox[{{3.5, 4.5}, {3.5, 4.5}}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{4.1, 0.1}, {4.9, 1.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {4.5, 1.}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{4.1, 2.1}, {4.9, 3.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {4.5, 3.}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{4.1, 4.1}, {4.9, 5.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {4.5, 5.}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{5.5, 6.5}, 0.1], DiskBox[{5.5, 0.5}, 0.1]}, 
      LineBox[{{5.5, 0.5}, {5.5, 6.5}}]}, LineBox[{{5.5, 6.5}, {5.5, 6.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{6.5, 1.5}, 0.1], DiskBox[{6.5, 2.5}, 0.1]}, 
      LineBox[{{6.5, 1.5}, {6.5, 2.5}}]}, LineBox[{{6.5, 1.5}, {6.5, 1.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{6.5, 3.5}, 0.1], DiskBox[{6.5, 4.5}, 0.1]}, 
      LineBox[{{6.5, 3.5}, {6.5, 4.5}}]}, 
     LineBox[{{6.5, 3.5}, {6.5, 3.5}}]}, 
    {EdgeForm[
     Dashing[{Small, Small}]], {{LineBox[{{7, 6.5}, {7.1, 6.5}}], 
       LineBox[{{7.1, 6.5}, {7.4, 1.5}}], 
       LineBox[{{7.4, 1.5}, {7.5, 1.5}}]}, {LineBox[{{7, 1.5}, {7.1, 1.5}}], 
       LineBox[{{7.1, 1.5}, {7.4, 6.5}}], 
       LineBox[{{7.4, 6.5}, {7.5, 6.5}}]}}, {
      RectangleBox[{7.6, 0.1}, {8.4, 1.9}], 
      InsetBox["\<\"\[CapitalDelta]\"\>", {8., 1.}]}, {{
       LineBox[{{8.5, 6.5}, {8.6, 6.5}}], LineBox[{{8.6, 6.5}, {8.9, 1.5}}], 
       LineBox[{{8.9, 1.5}, {9., 1.5}}]}, {LineBox[{{8.5, 1.5}, {8.6, 1.5}}], 
       LineBox[{{8.6, 1.5}, {8.9, 6.5}}], LineBox[{{8.9, 6.5}, {9., 6.5}}]}}}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{9.1, 1.1}, {9.9, 2.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {9.5, 2.}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{9.1, 3.1}, {9.9, 4.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {9.5, 4.}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{9.5, 5.5}, 0.1], DiskBox[{9.5, 6.5}, 0.1]}, 
      LineBox[{{9.5, 5.5}, {9.5, 6.5}}]}, 
     LineBox[{{9.5, 5.5}, {9.5, 5.5}}]}, {
     RectangleBox[{9.1, 0.1}, {9.9, 0.9}], 
     InsetBox["\<\"Ry\"\>", {9.5, 0.5}]}, {
     RectangleBox[{10.1, 1.1}, {10.9, 1.9}], 
     InsetBox["\<\"Ry\"\>", {10.5, 1.5}]}, {
     RectangleBox[{10.1, 2.1}, {10.9, 2.9}], 
     InsetBox["\<\"Ry\"\>", {10.5, 2.5}]}, {
     RectangleBox[{10.1, 3.1}, {10.9, 3.9}], 
     InsetBox["\<\"Ry\"\>", {10.5, 3.5}]}, {
     RectangleBox[{10.1, 4.1}, {10.9, 4.9}], 
     InsetBox["\<\"Ry\"\>", {10.5, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{10.1, 5.1}, {10.9, 6.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {10.5, 6.}]}, {
     RectangleBox[{10.1, 0.1}, {10.9, 0.9}], 
     InsetBox["\<\"Rz\"\>", {10.5, 0.5}]}, {
     RectangleBox[{11.1, 1.1}, {11.9, 1.9}], 
     InsetBox["\<\"Rz\"\>", {11.5, 1.5}]}, {
     RectangleBox[{11.1, 2.1}, {11.9, 2.9}], 
     InsetBox["\<\"Rz\"\>", {11.5, 2.5}]}, {
     RectangleBox[{11.1, 3.1}, {11.9, 3.9}], 
     InsetBox["\<\"Rz\"\>", {11.5, 3.5}]}, {
     RectangleBox[{11.1, 4.1}, {11.9, 4.9}], 
     InsetBox["\<\"Rz\"\>", {11.5, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{11.1, 0.1}, {11.9, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {11.5, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{12.1, 1.1}, {12.9, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {12.5, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{12.1, 2.1}, {12.9, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {12.5, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{12.1, 3.1}, {12.9, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {12.5, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{12.1, 4.1}, {12.9, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {12.5, 4.5}]}, {
     RectangleBox[{12.1, 5.1}, {12.9, 5.9}], 
     InsetBox["\<\"Ry\"\>", {12.5, 5.5}]}, {
     RectangleBox[{12.1, 6.1}, {12.9, 6.9}], 
     InsetBox["\<\"Ry\"\>", {12.5, 6.5}]}, {
     RectangleBox[{13.1, 5.1}, {13.9, 5.9}], 
     InsetBox["\<\"Rz\"\>", {13.5, 5.5}]}, {
     RectangleBox[{13.1, 6.1}, {13.9, 6.9}], 
     InsetBox["\<\"Rz\"\>", {13.5, 6.5}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{13.5, 0.5}, 0.1], DiskBox[{13.5, 1.5}, 0.1]}, 
      LineBox[{{13.5, 0.5}, {13.5, 1.5}}]}, 
     LineBox[{{13.5, 0.5}, {13.5, 0.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{13.5, 2.5}, 0.1], DiskBox[{13.5, 3.5}, 0.1]}, 
      LineBox[{{13.5, 2.5}, {13.5, 3.5}}]}, 
     LineBox[{{13.5, 2.5}, {13.5, 2.5}}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{14.1, 5.1}, {14.9, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {14.5, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{14.1, 6.1}, {14.9, 6.9}], 
     InsetBox["\<\"\[Phi]\"\>", {14.5, 6.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{14.1, 0.1}, {14.9, 1.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {14.5, 1.}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{14.1, 2.1}, {14.9, 3.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {14.5, 3.}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{15.5, 4.5}, 0.1], DiskBox[{15.5, 5.5}, 0.1]}, 
      LineBox[{{15.5, 4.5}, {15.5, 5.5}}]}, 
     LineBox[{{15.5, 4.5}, {15.5, 4.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{16.5, 6.5}, 0.1], DiskBox[{16.5, 0.5}, 0.1]}, 
      LineBox[{{16.5, 0.5}, {16.5, 6.5}}]}, 
     LineBox[{{16.5, 6.5}, {16.5, 6.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{17.5, 1.5}, 0.1], DiskBox[{17.5, 2.5}, 0.1]}, 
      LineBox[{{17.5, 1.5}, {17.5, 2.5}}]}, 
     LineBox[{{17.5, 1.5}, {17.5, 1.5}}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{17.1, 4.1}, {17.9, 5.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {17.5, 5.}]}, 
    {EdgeForm[
     Dashing[{Small, Small}]], {{LineBox[{{18, 6.5}, {18.1, 6.5}}], 
       LineBox[{{18.1, 6.5}, {18.4, 1.5}}], 
       LineBox[{{18.4, 1.5}, {18.5, 1.5}}]}, {
       LineBox[{{18, 1.5}, {18.1, 1.5}}], LineBox[{{18.1, 1.5}, {18.4, 6.5}}],
        LineBox[{{18.4, 6.5}, {18.5, 6.5}}]}}, {
      RectangleBox[{18.6, 0.1}, {19.4, 1.9}], 
      InsetBox["\<\"\[CapitalDelta]\"\>", {19., 1.}]}, {{
       LineBox[{{19.5, 6.5}, {19.6, 6.5}}], 
       LineBox[{{19.6, 6.5}, {19.9, 1.5}}], 
       LineBox[{{19.9, 1.5}, {20., 1.5}}]}, {
       LineBox[{{19.5, 1.5}, {19.6, 1.5}}], 
       LineBox[{{19.6, 1.5}, {19.9, 6.5}}], 
       LineBox[{{19.9, 6.5}, {20., 6.5}}]}}}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{20.1, 1.1}, {20.9, 2.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {20.5, 2.}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{20.5, 3.5}, 0.1], DiskBox[{20.5, 4.5}, 0.1]}, 
      LineBox[{{20.5, 3.5}, {20.5, 4.5}}]}, 
     LineBox[{{20.5, 3.5}, {20.5, 3.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{20.5, 5.5}, 0.1], DiskBox[{20.5, 6.5}, 0.1]}, 
      LineBox[{{20.5, 5.5}, {20.5, 6.5}}]}, 
     LineBox[{{20.5, 5.5}, {20.5, 5.5}}]}, {
     RectangleBox[{20.1, 0.1}, {20.9, 0.9}], 
     InsetBox["\<\"Ry\"\>", {20.5, 0.5}]}, {
     RectangleBox[{21.1, 1.1}, {21.9, 1.9}], 
     InsetBox["\<\"Ry\"\>", {21.5, 1.5}]}, {
     RectangleBox[{21.1, 2.1}, {21.9, 2.9}], 
     InsetBox["\<\"Ry\"\>", {21.5, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{21.1, 3.1}, {21.9, 4.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {21.5, 4.}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{21.1, 5.1}, {21.9, 6.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {21.5, 6.}]}, {
     RectangleBox[{21.1, 0.1}, {21.9, 0.9}], 
     InsetBox["\<\"Rz\"\>", {21.5, 0.5}]}, {
     RectangleBox[{22.1, 1.1}, {22.9, 1.9}], 
     InsetBox["\<\"Rz\"\>", {22.5, 1.5}]}, {
     RectangleBox[{22.1, 2.1}, {22.9, 2.9}], 
     InsetBox["\<\"Rz\"\>", {22.5, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{22.1, 0.1}, {22.9, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {22.5, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{23.1, 1.1}, {23.9, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {23.5, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{23.1, 2.1}, {23.9, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {23.5, 2.5}]}, {
     RectangleBox[{23.1, 3.1}, {23.9, 3.9}], 
     InsetBox["\<\"Ry\"\>", {23.5, 3.5}]}, {
     RectangleBox[{23.1, 4.1}, {23.9, 4.9}], 
     InsetBox["\<\"Ry\"\>", {23.5, 4.5}]}, {
     RectangleBox[{23.1, 5.1}, {23.9, 5.9}], 
     InsetBox["\<\"Ry\"\>", {23.5, 5.5}]}, {
     RectangleBox[{23.1, 6.1}, {23.9, 6.9}], 
     InsetBox["\<\"Ry\"\>", {23.5, 6.5}]}, {
     RectangleBox[{24.1, 3.1}, {24.9, 3.9}], 
     InsetBox["\<\"Rz\"\>", {24.5, 3.5}]}, {
     RectangleBox[{24.1, 4.1}, {24.9, 4.9}], 
     InsetBox["\<\"Rz\"\>", {24.5, 4.5}]}, {
     RectangleBox[{24.1, 5.1}, {24.9, 5.9}], 
     InsetBox["\<\"Rz\"\>", {24.5, 5.5}]}, {
     RectangleBox[{24.1, 6.1}, {24.9, 6.9}], 
     InsetBox["\<\"Rz\"\>", {24.5, 6.5}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{24.5, 0.5}, 0.1], DiskBox[{24.5, 1.5}, 0.1]}, 
      LineBox[{{24.5, 0.5}, {24.5, 1.5}}]}, 
     LineBox[{{24.5, 0.5}, {24.5, 0.5}}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{25.1, 3.1}, {25.9, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {25.5, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{25.1, 4.1}, {25.9, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {25.5, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{25.1, 5.1}, {25.9, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {25.5, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{25.1, 6.1}, {25.9, 6.9}], 
     InsetBox["\<\"\[Phi]\"\>", {25.5, 6.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{25.1, 0.1}, {25.9, 1.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {25.5, 1.}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{26.5, 2.5}, 0.1], DiskBox[{26.5, 3.5}, 0.1]}, 
      LineBox[{{26.5, 2.5}, {26.5, 3.5}}]}, 
     LineBox[{{26.5, 2.5}, {26.5, 2.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{26.5, 4.5}, 0.1], DiskBox[{26.5, 5.5}, 0.1]}, 
      LineBox[{{26.5, 4.5}, {26.5, 5.5}}]}, 
     LineBox[{{26.5, 4.5}, {26.5, 4.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{27.5, 6.5}, 0.1], DiskBox[{27.5, 0.5}, 0.1]}, 
      LineBox[{{27.5, 0.5}, {27.5, 6.5}}]}, 
     LineBox[{{27.5, 6.5}, {27.5, 6.5}}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{28.1, 2.1}, {28.9, 3.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {28.5, 3.}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{28.1, 4.1}, {28.9, 5.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {28.5, 5.}]}, 
    {EdgeForm[
     Dashing[{Small, Small}]], {{LineBox[{{29, 6.5}, {29.1, 6.5}}], 
       LineBox[{{29.1, 6.5}, {29.4, 1.5}}], 
       LineBox[{{29.4, 1.5}, {29.5, 1.5}}]}, {
       LineBox[{{29, 1.5}, {29.1, 1.5}}], LineBox[{{29.1, 1.5}, {29.4, 6.5}}],
        LineBox[{{29.4, 6.5}, {29.5, 6.5}}]}}, {
      RectangleBox[{29.6, 0.1}, {30.4, 1.9}], 
      InsetBox["\<\"\[CapitalDelta]\"\>", {30., 1.}]}, {{
       LineBox[{{30.5, 6.5}, {30.6, 6.5}}], 
       LineBox[{{30.6, 6.5}, {30.9, 1.5}}], 
       LineBox[{{30.9, 1.5}, {31., 1.5}}]}, {
       LineBox[{{30.5, 1.5}, {30.6, 1.5}}], 
       LineBox[{{30.6, 1.5}, {30.9, 6.5}}], 
       LineBox[{{30.9, 6.5}, {31., 6.5}}]}}}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{31.5, 1.5}, 0.1], DiskBox[{31.5, 2.5}, 0.1]}, 
      LineBox[{{31.5, 1.5}, {31.5, 2.5}}]}, 
     LineBox[{{31.5, 1.5}, {31.5, 1.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{31.5, 3.5}, 0.1], DiskBox[{31.5, 4.5}, 0.1]}, 
      LineBox[{{31.5, 3.5}, {31.5, 4.5}}]}, 
     LineBox[{{31.5, 3.5}, {31.5, 3.5}}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{31.5, 5.5}, 0.1], DiskBox[{31.5, 6.5}, 0.1]}, 
      LineBox[{{31.5, 5.5}, {31.5, 6.5}}]}, 
     LineBox[{{31.5, 5.5}, {31.5, 5.5}}]}, {
     RectangleBox[{31.1, 0.1}, {31.9, 0.9}], 
     InsetBox["\<\"Ry\"\>", {31.5, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{32.1, 1.1}, {32.9, 2.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {32.5, 2.}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{32.1, 3.1}, {32.9, 4.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {32.5, 4.}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{32.1, 5.1}, {32.9, 6.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {32.5, 6.}]}, {
     RectangleBox[{32.1, 0.1}, {32.9, 0.9}], 
     InsetBox["\<\"Rz\"\>", {32.5, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{33.1, 0.1}, {33.9, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {33.5, 0.5}]}, {
     RectangleBox[{33.1, 1.1}, {33.9, 1.9}], 
     InsetBox["\<\"Ry\"\>", {33.5, 1.5}]}, {
     RectangleBox[{33.1, 2.1}, {33.9, 2.9}], 
     InsetBox["\<\"Ry\"\>", {33.5, 2.5}]}, {
     RectangleBox[{33.1, 3.1}, {33.9, 3.9}], 
     InsetBox["\<\"Ry\"\>", {33.5, 3.5}]}, {
     RectangleBox[{33.1, 4.1}, {33.9, 4.9}], 
     InsetBox["\<\"Ry\"\>", {33.5, 4.5}]}, {
     RectangleBox[{33.1, 5.1}, {33.9, 5.9}], 
     InsetBox["\<\"Ry\"\>", {33.5, 5.5}]}, {
     RectangleBox[{33.1, 6.1}, {33.9, 6.9}], 
     InsetBox["\<\"Ry\"\>", {33.5, 6.5}]}, {
     RectangleBox[{34.1, 1.1}, {34.9, 1.9}], 
     InsetBox["\<\"Rz\"\>", {34.5, 1.5}]}, {
     RectangleBox[{34.1, 2.1}, {34.9, 2.9}], 
     InsetBox["\<\"Rz\"\>", {34.5, 2.5}]}, {
     RectangleBox[{34.1, 3.1}, {34.9, 3.9}], 
     InsetBox["\<\"Rz\"\>", {34.5, 3.5}]}, {
     RectangleBox[{34.1, 4.1}, {34.9, 4.9}], 
     InsetBox["\<\"Rz\"\>", {34.5, 4.5}]}, {
     RectangleBox[{34.1, 5.1}, {34.9, 5.9}], 
     InsetBox["\<\"Rz\"\>", {34.5, 5.5}]}, {
     RectangleBox[{34.1, 6.1}, {34.9, 6.9}], 
     InsetBox["\<\"Rz\"\>", {34.5, 6.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.1, 1.1}, {35.9, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {35.5, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.1, 2.1}, {35.9, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {35.5, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.1, 3.1}, {35.9, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {35.5, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.1, 4.1}, {35.9, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {35.5, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.1, 5.1}, {35.9, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {35.5, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.1, 6.1}, {35.9, 6.9}], 
     InsetBox["\<\"\[Phi]\"\>", {35.5, 6.5}]}}},
  ImageSize->1110,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.914253827967712*^9, 3.9142538297081842`*^9}, 
   3.914254263707518*^9, 3.914254422862607*^9, 3.9142544646066217`*^9, 
   3.914255139455388*^9, 3.914258076243689*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"2f5a1248-192a-4098-af5e-00733db5f299"]
}, Open  ]],

Cell["By now merely changing our states to be density matrices...", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250990899229*^9}, {
   3.914251085832686*^9, 3.914251104065876*^9}, {3.914251134735272*^9, 
   3.91425113717677*^9}, {3.9142512742844687`*^9, 3.914251329933467*^9}, {
   3.914253415056573*^9, 3.914253515808655*^9}, {3.914253785894093*^9, 
   3.914253910953849*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"5fefef26-fb2f-4398-be1d-752d6bdfe10e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", " ", "\[Mu]", ",", "in"}], "}"}], " ", "=", " ", 
   RowBox[{"CreateDensityQuregs", "[", 
    RowBox[{"nQb", ",", " ", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitPlusState", "[", "in", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.914244905765726*^9, 3.914244910937447*^9}, {
  3.9142449842249813`*^9, 3.91424500599953*^9}, {3.91424585709746*^9, 
  3.9142458826866417`*^9}, {3.914246522199601*^9, 3.914246533763866*^9}, {
  3.914253917097932*^9, 3.914253934176293*^9}, {3.914253975168281*^9, 
  3.914253975666066*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"8af1b17c-a4b5-49a4-861d-9d2b6ec85ad6"],

Cell["\<\
all our previous calculations can be repeated in the presence of noise.\
\>", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250990899229*^9}, {
   3.914251085832686*^9, 3.914251104065876*^9}, {3.914251134735272*^9, 
   3.91425113717677*^9}, {3.9142512742844687`*^9, 3.914251329933467*^9}, {
   3.914253415056573*^9, 3.914253515808655*^9}, {3.914253785894093*^9, 
   3.914253910953849*^9}, {3.914253985093008*^9, 3.914254021438333*^9}, {
   3.914254318842496*^9, 3.914254319890594*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"2e24cc0d-6db6-4691-b6ca-a47d45bf58f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CloneQureg", "[", 
   RowBox[{"\[Rho]", ",", " ", "in"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyCircuit", "[", 
   RowBox[{"\[Rho]", ",", " ", 
    RowBox[{"ch", " ", "/.", "v\[Theta]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CalcExpecPauliString", "[", 
  RowBox[{"\[Rho]", ",", " ", "h", ",", " ", "\[Mu]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.914253949619768*^9, 3.914253978129052*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"d8db5bea-ad9a-4241-835d-e1f8bbe5b3d9"],

Cell[BoxData[
 RowBox[{"-", "1.9875970666802913`"}]], "Output",
 CellChangeTimes->{3.9142539789416447`*^9, 3.91425402396237*^9, 
  3.9142541023445253`*^9, 3.9142542637775993`*^9, 3.9142544257544823`*^9, 
  3.914254464669924*^9, 3.914255139523044*^9, 3.914258076331954*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"734597f3-5ef4-4157-897a-b85e23e17295"]
}, Open  ]],

Cell["\<\
We can see that the introduced decoherence has damaged the fidelity of the \
final state.\
\>", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250990899229*^9}, {
   3.914251085832686*^9, 3.914251104065876*^9}, {3.914251134735272*^9, 
   3.91425113717677*^9}, {3.9142512742844687`*^9, 3.914251329933467*^9}, {
   3.914253415056573*^9, 3.914253515808655*^9}, {3.914253785894093*^9, 
   3.914253910953849*^9}, {3.914253985093008*^9, 3.914254021438333*^9}, {
   3.914254318842496*^9, 3.914254362070693*^9}, {3.9142570832079906`*^9, 
   3.914257088110289*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"c526e1a7-c2f2-480d-9f96-7c93ebc87000"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalcPurity", "[", "\[Rho]", "]"}]], "Input",
 CellChangeTimes->{{3.91425410828999*^9, 3.9142541307602386`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"96955e8a-d606-4712-9075-31cafdcd9030"],

Cell[BoxData["0.6529871787615034`"], "Output",
 CellChangeTimes->{{3.914254110820979*^9, 3.9142541331948357`*^9}, 
   3.914254263785921*^9, 3.91425442741251*^9, 3.914254464682529*^9, 
   3.9142551395312634`*^9, 3.914258076339403*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"269ca69a-4877-46fc-a03e-be7b8cc835b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalcFidelity", "[", 
  RowBox[{"\[Rho]", ",", "\[Psi]"}], "]"}]], "Input",
 CellChangeTimes->{{3.914254139701482*^9, 3.914254143970242*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"582af4b4-f7f2-4b48-98ed-b0c382219aeb"],

Cell[BoxData["0.8071627704770583`"], "Output",
 CellChangeTimes->{3.91425414433081*^9, 3.9142542638187237`*^9, 
  3.914254428784919*^9, 3.9142544647111673`*^9, 3.914255139558243*^9, 
  3.914258076391407*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"6bf3d070-0126-454d-a9ff-6710eaea0ae4"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s see how the full evolution of gradient descent would \
differ if noise were present at every iteration.\
\>", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250990899229*^9}, {
   3.914251085832686*^9, 3.914251104065876*^9}, {3.914251134735272*^9, 
   3.91425113717677*^9}, {3.9142512742844687`*^9, 3.914251329933467*^9}, {
   3.914253415056573*^9, 3.914253515808655*^9}, {3.914253785894093*^9, 
   3.914253910953849*^9}, {3.914253985093008*^9, 3.914254021438333*^9}, {
   3.914254318842496*^9, 3.914254401393444*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"289c0686-b7b6-428a-b6a0-f64e83afe0f8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v\[Theta]", " ", "=", " ", "init\[Theta]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noisyGradVals", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"grad", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"calcExpecDeriv", "[", 
          RowBox[{
          "h", ",", " ", "in", ",", " ", "ch", ",", " ", "v\[Theta]", ",", 
           " ", 
           RowBox[{"\[Theta]", "[", "i", "]"}], ",", " ", "\[Rho]", ",", " ", 
           "\[Mu]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "n\[Theta]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"v\[Theta]", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "-=", " ", 
       RowBox[{"\[CapitalDelta]t", " ", "grad"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
      RowBox[{"ApplyCircuit", "[", 
       RowBox[{
        RowBox[{"CloneQureg", "[", 
         RowBox[{"\[Rho]", ",", " ", "in"}], "]"}], ",", " ", 
        RowBox[{"ch", " ", "/.", "v\[Theta]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"CalcExpecPauliString", "[", 
       RowBox[{"\[Rho]", ",", " ", "h", ",", " ", "\[Mu]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\t", "30"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9142513317202997`*^9, 3.914251396651124*^9}, 
   3.914251483460238*^9, {3.9142540390753937`*^9, 3.914254040317156*^9}, {
   3.914254081495861*^9, 3.914254095005598*^9}, {3.9142541597850933`*^9, 
   3.914254163008943*^9}, {3.914254222772748*^9, 3.9142542234043303`*^9}, {
   3.914255102238302*^9, 3.914255102741311*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"810503d7-abdf-4ce6-9b4c-aa8d18d7db12"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gradVals", ",", "noisyGradVals"}], "}"}], ",", " ", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<iteration\>\"", ",", " ", "\"\<energy\>\""}], "}"}]}], ",", 
   " ", "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<pure\>\"", ",", " ", "\"\<noisy\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"1.1", "vMin"}]}], "}"}]}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"vMin", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Red", ",", "Dashed"}], "]"}]}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.914254402822549*^9, 3.914254412274873*^9}, {
  3.9142544552428017`*^9, 3.9142544716652927`*^9}, {3.914254538074387*^9, 
  3.9142545383135023`*^9}, {3.914255104984222*^9, 3.9142551064335423`*^9}, {
  3.914256632438633*^9, 3.91425665606566*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"b7b60270-8c42-49c7-9863-626907f976f6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7C83Hd53+OM+e6iAw92MWZzr2ffth3A5HKYv
vyelYnQNyhdw4D32P1/+4UMoX8Shcr37i453z6F8CYfiOftKTtm+hfJlHOKF
QnV3ffoA5Ss4SMq+3V7A+BnKV3KQOeTat/T6FyhfxUGpneWpV/03KF/N4d7O
E3mPGH5A+RoOiS97lHRSfkL5Wg6iAUuUn6//BeXrODy+2Pzb++VvKF/PgW32
D7XTwn+hfAMHSdZHczUN/0H5hg6uds/f3XT8D+UbOUy/n7pymxLDAQjf2GHf
37eeTXNhfBOHPfUu+24IMEL5pg62U85kxNfA+GYOK7VXyr69D+ObO2itDN8z
wZoJyrdwsEleNK2nH8a3dJDmyeHyvgPjWzk84EiZGqDEDOVbO9Rb/p+tlwTj
2zgYNwvsqZgD49s6XP6Y6L33Ioxv5/DW/eX5BiaWAwCM6JAe
         "]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7N9nmkR9OnnQHirgsGzNGoadb3v3Q7gcDo4J
QsoR6kehfAGHZcWJHJrHL0P5Ig5xxetbfUPuQPkSDg2qTPUZfI+gfBkH3uyi
D019T6F8BYfsz+9kp256AeUrOTz6wV5v3v4ayldx4P081YdN8h2Ur+ZgKntS
zcXyA5Sv4fDi0aUiZr+PUL6Ww6ITadJKfp+gfB2HvAcGvdNtPkP5eg6H3r54
KSnzBco3cHgeNq9e4j2Mb+hgdL1h0qLtX6F8IwfZF7uUgsq/QfnGDglqYXtc
9b9D+SYOJkrhszUfwPimDrwJO3O8u35A+WYO+wVuuWzW/Qnlmzuc8HGpsD0F
41s4/GcQCdoU/wvKt3Q49Zpv+823ML6Vw7YXwcs7S35D+dYOYSZ3w9d/hvFt
HO7aiXkEZ/+B8m0dFvw6bzbzNoxv5zB/zyz5vS5/9wMAcMWWig==
         
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"iteration\"", TraditionalForm], 
       FormBox["\"energy\"", TraditionalForm]}, AxesOrigin -> {0., 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{}, {{-6.45172571007489, 
         Directive[
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]]}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 30.}, {-7.09689828108238, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"pure\"", "\"noisy\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.914254412598126*^9, {3.914254529647002*^9, 3.914254538660795*^9}, 
   3.914255208212941*^9, {3.914256629025836*^9, 3.914256656401314*^9}, 
   3.914258157032591*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"49454e92-bb35-4ecc-9217-a31332635aea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Natural gradient", "Section",
 CellChangeTimes->{{3.914244337526918*^9, 3.914244338501814*^9}, {
  3.91424448787783*^9, 3.9142444989369164`*^9}, {3.914251598401146*^9, 
  3.9142516000598803`*^9}},
 CellTags->"natural",ExpressionUUID->"cb5b0c12-556e-4836-9491-747ba7025457"],

Cell[TextData[{
 "Superior quantum minimisation techniques exist which converge faster than \
gradient descent, and more reliably, while requiring only a modest increase \
in experimental measurements. One such technique is ",
 StyleBox[ButtonBox["natural gradient",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://quantum-journal.org/papers/q-2020-05-25-269/"], None},
  ButtonNote->"https://quantum-journal.org/papers/q-2020-05-25-269/"],
  FontSlant->"Italic"],
 " which prescribes a change in parameters ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", 
    OverscriptBox["\[Theta]", "\[RightVector]"], " "}], TraditionalForm]],
  ExpressionUUID->"4372105d-4486-4818-8610-5ec0812b196a"],
 "given by:\n        ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      StyleBox["G",
       FontWeight->"Bold"], "]"}], "  ", 
     RowBox[{"(", 
      RowBox[{"\[CapitalDelta]", 
       OverscriptBox["\[Theta]", "\[RightVector]"]}], ")"}]}], " ", "=", " ", 
    
    RowBox[{
     RowBox[{"-", " ", "\[CapitalDelta]t"}], "  ", 
     RowBox[{"\[Del]", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"E", "(", 
        OverscriptBox["\[Theta]", "\[RightVector]"], ")"}], 
       "\[RightAngleBracket]"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "4c363ead-12df-49f1-9238-6c97f53be422"],
 "\n        \nThe matrix Re[",
 StyleBox["G",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "] is the Fubini-Study metric tensor, equivalent to the real component of \
the quantum geometric tensor with entries:\n        ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["G", "ij"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"\[PartialD]", 
        TemplateBox[{
          RowBox[{"\[Psi]", "(", 
            OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
         "Bra"]}], 
       RowBox[{"\[PartialD]", 
        SubscriptBox["\[Theta]", 
         RowBox[{" ", "i"}]]}]], 
      FractionBox[
       RowBox[{"\[PartialD]", 
        TemplateBox[{
          RowBox[{"\[Psi]", "(", 
            OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
         "Ket"]}], 
       RowBox[{"\[PartialD]", 
        SubscriptBox["\[Theta]", 
         RowBox[{" ", "j"}]]}]]}], " ", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          TemplateBox[{
            RowBox[{"\[Psi]", "(", 
              OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
           "Bra"]}], 
         RowBox[{"\[PartialD]", 
          SubscriptBox["\[Theta]", 
           RowBox[{" ", "i"}]]}]], 
        TemplateBox[{
          RowBox[{"\[Psi]", "(", 
            OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
         "Ket"]}], " ", ")"}], "  ", 
      RowBox[{"(", " ", 
       RowBox[{
        TemplateBox[{
          RowBox[{"\[Psi]", "(", 
            OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
         "Bra"], 
        FractionBox[
         RowBox[{"\[PartialD]", 
          TemplateBox[{
            RowBox[{"\[Psi]", "(", 
              OverscriptBox["\[Theta]", "\[RightVector]"], ")"}]},
           "Ket"]}], 
         RowBox[{"\[PartialD]", 
          SubscriptBox["\[Theta]", 
           RowBox[{" ", "j"}]]}]]}], ")"}], " "}]}]}], TraditionalForm]],
  ExpressionUUID->"87d03d3c-d4b1-4f90-8cc0-f4991c3a11f8"],
 "\n        \nThis horrifying looking matrix is thankfully straightforward to \
evaluate on a quantum computer. And because we have the luxury of ",
 StyleBox["simulating",
  FontSlant->"Italic"],
 " the algorithm, rather than executing its prescribed circuits on \
experimental hardware, we can even just directly evaluate the matrix ",
 StyleBox["G",
  FontSlant->"Italic"],
 " using:"
}], "Text",
 CellChangeTimes->{{3.914251794337247*^9, 3.914251878713161*^9}, {
  3.914252242210902*^9, 3.91425224221148*^9}, {3.914252284937417*^9, 
  3.914252352448489*^9}, {3.91425240495455*^9, 3.91425242297615*^9}, {
  3.914252454014399*^9, 3.914252717960623*^9}, {3.9142528024609957`*^9, 
  3.914252823174206*^9}, {3.914253288441277*^9, 3.914253359490326*^9}, {
  3.9142547621120234`*^9, 3.9142548660488787`*^9}, {3.914255277261348*^9, 
  3.9142552928182983`*^9}, {3.9142554010865192`*^9, 3.914255402853468*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"d54e14a4-f00b-4b92-bd82-f0597900b580"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CalcMetricTensor"}]], "Input",
 CellChangeTimes->{{3.914251601167289*^9, 3.914251603298657*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"d57850a5-46ac-4da7-9f58-28ef0d1920fc"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CalcMetricTensor[inQureg, circuit, varVals] returns \
the natural gradient metric tensor, capturing the circuit derivatives \
(produced from initial state inQureg) with respect to varVals, specified with \
values {var -> value, ...}.\\n    CalcMetricTensor[inQureg, circuit, varVals, \
workQuregs] uses the given persistent workspace quregs (workQuregs) in lieu \
of creating them internally, and should be used for optimum performance. At \
most four workQuregs are needed.\\n    \[Bullet] For state-vectors and pure \
circuits, this returns the quantum geometric tensor, which relates to the \
Fubini-Study metric, the classical Fisher information matrix, and the \
variational imaginary-time Li tensor with Berry connections.\\n    \[Bullet] \
For density-matrices and noisy channels, this function returns the \
Hilbert-Schmidt derivative metric, which well approximates the quantum Fisher \
information matrix, though is a more experimentally relevant minimisation \
metric (https://arxiv.org/abs/1912.08660).\\n    \[Bullet] Variable \
repetition, multi-parameter gates, variable-dependent element-wise matrices, \
variable-dependent channels, and operators whose parameters are (numerically \
evaluable) functions of variables are all permitted. \\n    \[Bullet] All \
operators must be invertible, trace-preserving and deterministic, else an \
error is thrown. \\n    \[Bullet] This function runs asymptotically faster \
than ApplyCircuitDerivs[] and requires only a fixed memory overhead.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"CalcMetricTensor", "[", 
                    RowBox[{"QuEST`Private`initQureg_Integer", ",", 
                    
                    RowBox[{
                    "QuEST`Private`circuit_", "?", 
                    "QuEST`Private`isCircuitFormat"}], ",", 
                    RowBox[{"QuEST`Private`varVals", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "Internal`RealValuedNumericQ"}]}], 
                    ")"}], ".."}], "}"}]}], ",", 
                    RowBox[{"QuEST`Private`workQuregs", ":", 
                    RowBox[{"{", "___Integer", "}"}], ":", 
                    RowBox[{"{", "}"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`ret", ",", 
                    "QuEST`Private`encodedCirc", ",", 
                    "QuEST`Private`encodedDerivTerms", ",", 
                    "QuEST`Private`retArrs"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"QuEST`Private`ret", "=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"QuEST`Private`encodeDerivCirc", "[", 
                    
                    RowBox[{"QuEST`Private`circuit", ",", 
                    "QuEST`Private`varVals"}], "]"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "QuEST`Private`ret", "]"}], "===", 
                    "String"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"CalcMetricTensor", "::", "error"}], 
                    "MessageName"], ",", "QuEST`Private`ret"}], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`encodedCirc", ",", 
                    "QuEST`Private`encodedDerivTerms"}], "}"}], "=", 
                    "QuEST`Private`ret"}], ";", 
                    RowBox[{"QuEST`Private`data", "=", 
                    RowBox[{"QuEST`Private`CalcMetricTensorInternal", "[", 
                    
                    RowBox[{"QuEST`Private`initQureg", ",", 
                    "QuEST`Private`workQuregs", ",", 
                    
                    RowBox[{"QuEST`Private`unpackEncodedCircuit", "[", 
                    "QuEST`Private`encodedCirc", "]"}], ",", 
                    
                    RowBox[{"QuEST`Private`unpackEncodedDerivCircTerms", "[", 
                    "QuEST`Private`encodedDerivTerms", "]"}]}], "]"}]}], ";", 
                    
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"QuEST`Private`data", "===", "$Failed"}], ",", 
                    "QuEST`Private`data", ",", 
                    RowBox[{"ArrayReshape", "[", 
                    RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "#2"}]}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`data", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"QuEST`Private`data", "\[LeftDoubleBracket]", "2",
                     "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "QuEST`Private`varVals", "]"}], 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"CalcMetricTensor", "[", "__", "]"}], ":=", 
                    
                    RowBox[{
                    "QuEST`Private`invalidArgError", "[", "CalcMetricTensor", 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QuEST`CalcMetricTensor\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CalcMetricTensor[inQureg, circuit, varVals] returns \
the natural gradient metric tensor, capturing the circuit derivatives \
(produced from initial state inQureg) with respect to varVals, specified with \
values {var -> value, ...}.\\n    CalcMetricTensor[inQureg, circuit, varVals, \
workQuregs] uses the given persistent workspace quregs (workQuregs) in lieu \
of creating them internally, and should be used for optimum performance. At \
most four workQuregs are needed.\\n    \[Bullet] For state-vectors and pure \
circuits, this returns the quantum geometric tensor, which relates to the \
Fubini-Study metric, the classical Fisher information matrix, and the \
variational imaginary-time Li tensor with Berry connections.\\n    \[Bullet] \
For density-matrices and noisy channels, this function returns the \
Hilbert-Schmidt derivative metric, which well approximates the quantum Fisher \
information matrix, though is a more experimentally relevant minimisation \
metric (https://arxiv.org/abs/1912.08660).\\n    \[Bullet] Variable \
repetition, multi-parameter gates, variable-dependent element-wise matrices, \
variable-dependent channels, and operators whose parameters are (numerically \
evaluable) functions of variables are all permitted. \\n    \[Bullet] All \
operators must be invertible, trace-preserving and deterministic, else an \
error is thrown. \\n    \[Bullet] This function runs asymptotically faster \
than ApplyCircuitDerivs[] and requires only a fixed memory overhead.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "CalcMetricTensor[inQureg, circuit, varVals] returns the natural gradient \
metric tensor, capturing the circuit derivatives (produced from initial state \
inQureg) with respect to varVals, specified with values {var -> value, ...}.\n\
    CalcMetricTensor[inQureg, circuit, varVals, workQuregs] uses the given \
persistent workspace quregs (workQuregs) in lieu of creating them internally, \
and should be used for optimum performance. At most four workQuregs are \
needed.\n    \[Bullet] For state-vectors and pure circuits, this returns the \
quantum geometric tensor, which relates to the Fubini-Study metric, the \
classical Fisher information matrix, and the variational imaginary-time Li \
tensor with Berry connections.\n    \[Bullet] For density-matrices and noisy \
channels, this function returns the Hilbert-Schmidt derivative metric, which \
well approximates the quantum Fisher information matrix, though is a more \
experimentally relevant minimisation metric \
(https://arxiv.org/abs/1912.08660).\n    \[Bullet] Variable repetition, \
multi-parameter gates, variable-dependent element-wise matrices, \
variable-dependent channels, and operators whose parameters are (numerically \
evaluable) functions of variables are all permitted. \n    \[Bullet] All \
operators must be invertible, trace-preserving and deterministic, else an \
error is thrown. \n    \[Bullet] This function runs asymptotically faster \
than ApplyCircuitDerivs[] and requires only a fixed memory overhead.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, QuEST`CalcMetricTensor, {QuEST`CalcMetricTensor[
         Pattern[QuEST`Private`initQureg, 
          Blank[Integer]], 
         PatternTest[
          Pattern[QuEST`Private`circuit, 
           Blank[]], QuEST`Private`isCircuitFormat], 
         Pattern[QuEST`Private`varVals, {
           Repeated[Blank[] -> PatternTest[
              Blank[], Internal`RealValuedNumericQ]]}], 
         Optional[
          Pattern[QuEST`Private`workQuregs, {
            BlankNullSequence[Integer]}], {}]] :> 
       Module[{QuEST`Private`ret, QuEST`Private`encodedCirc, 
          QuEST`Private`encodedDerivTerms, QuEST`Private`retArrs}, 
         QuEST`Private`ret = Catch[
            QuEST`Private`encodeDerivCirc[
            QuEST`Private`circuit, QuEST`Private`varVals]]; 
         If[Head[QuEST`Private`ret] === String, Message[
             MessageName[QuEST`CalcMetricTensor, "error"], QuEST`Private`ret]; 
           Return[$Failed]]; {
           QuEST`Private`encodedCirc, QuEST`Private`encodedDerivTerms} = 
          QuEST`Private`ret; 
         QuEST`Private`data = 
          QuEST`Private`CalcMetricTensorInternal[
           QuEST`Private`initQureg, QuEST`Private`workQuregs, 
            QuEST`Private`unpackEncodedCircuit[QuEST`Private`encodedCirc], 
            QuEST`Private`unpackEncodedDerivCircTerms[
            QuEST`Private`encodedDerivTerms]]; 
         If[QuEST`Private`data === $Failed, QuEST`Private`data, 
           ArrayReshape[
            MapThread[# + I #2& , {
              Part[QuEST`Private`data, 1], 
              Part[QuEST`Private`data, 2]}], 
            Length[QuEST`Private`varVals] {1, 1}]]], QuEST`CalcMetricTensor[
         BlankSequence[]] :> 
       QuEST`Private`invalidArgError[QuEST`CalcMetricTensor]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "QuEST`CalcMetricTensor"|>, False]]], "Output",
 CellChangeTimes->{3.914251603577738*^9, 3.914254328703377*^9, 
  3.914254529746463*^9, 3.9142552084167433`*^9, 3.91425815724013*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"33639f4e-edd4-45c7-858b-f5f4d823c99c"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s return to pure-state simulation, and re-randomise the \
ansatz parameters\
\>", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250990899229*^9}, {
   3.914251085832686*^9, 3.914251104065876*^9}, {3.914251134735272*^9, 
   3.91425113717677*^9}, {3.9142512742844687`*^9, 3.914251329933467*^9}, {
   3.914253415056573*^9, 3.914253515808655*^9}, {3.914253785894093*^9, 
   3.914253910953849*^9}, {3.914253985093008*^9, 3.914254021438333*^9}, {
   3.914254318842496*^9, 3.914254401393444*^9}, {3.914255001820627*^9, 
   3.914255050656928*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"a99319ef-9672-4f07-842c-7c3546311f2b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Psi]", ",", " ", "\[Phi]", ",", "in"}], "}"}], " ", "=", " ", 
   RowBox[{"CreateQuregs", "[", 
    RowBox[{"nQb", ",", " ", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitPlusState", "[", "in", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.914244905765726*^9, 3.914244910937447*^9}, {
  3.9142449842249813`*^9, 3.91424500599953*^9}, {3.91424585709746*^9, 
  3.9142458826866417`*^9}, {3.914246522199601*^9, 3.914246533763866*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"cc0ac56c-f31a-49f1-aefe-a494d9faafec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v\[Theta]", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "[", "i", "]"}], "->", 
     RowBox[{"RandomReal", "[", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", "n\[Theta]"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"a80f61bd-064d-49c0-a4db-6dee11091e73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]", "[", "1", "]"}], "\[Rule]", "0.08246245155878129`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "2", "]"}], "\[Rule]", "0.31652025699857855`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "3", "]"}], "\[Rule]", "0.4593135415526979`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "4", "]"}], "\[Rule]", "0.8075635341471721`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "5", "]"}], "\[Rule]", "0.23739628067865248`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "6", "]"}], "\[Rule]", "0.5283565748741974`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "7", "]"}], "\[Rule]", "0.815375350722866`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "8", "]"}], "\[Rule]", "0.7504823472307727`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "9", "]"}], "\[Rule]", "0.8309708510583436`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "10", "]"}], "\[Rule]", "0.6981735640184721`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "11", "]"}], "\[Rule]", "0.7404314987464766`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "12", "]"}], "\[Rule]", "0.02521055841475861`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "13", "]"}], "\[Rule]", "0.59486412161906`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "14", "]"}], "\[Rule]", "0.15464225733976855`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "15", "]"}], "\[Rule]", "0.1651302210142278`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "16", "]"}], "\[Rule]", "0.2407853198133545`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "17", "]"}], "\[Rule]", "0.9579498615907005`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "18", "]"}], "\[Rule]", "0.11930249627631251`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "19", "]"}], "\[Rule]", "0.9788597371376437`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "20", "]"}], "\[Rule]", "0.5624645666352517`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "21", "]"}], "\[Rule]", "0.31439218656053347`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "22", "]"}], "\[Rule]", "0.22450456584054845`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "23", "]"}], "\[Rule]", "0.32218753356464735`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "24", "]"}], "\[Rule]", "0.4012440772063697`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "25", "]"}], "\[Rule]", "0.2887866133469015`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "26", "]"}], "\[Rule]", "0.13788649065642677`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "27", "]"}], "\[Rule]", "0.8051327448662251`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "28", "]"}], "\[Rule]", "0.33875308812077476`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "29", "]"}], "\[Rule]", "0.520797774617785`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "30", "]"}], "\[Rule]", "0.543041910891745`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "31", "]"}], "\[Rule]", "0.4423658126060115`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "32", "]"}], "\[Rule]", "0.9472346213886496`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "33", "]"}], "\[Rule]", "0.4075124549377007`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "34", "]"}], "\[Rule]", "0.48498090577715147`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "35", "]"}], "\[Rule]", "0.3090180991260778`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "36", "]"}], "\[Rule]", "0.12411134369416787`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "37", "]"}], "\[Rule]", "0.6209576683938529`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "38", "]"}], "\[Rule]", "0.9453028805192596`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "39", "]"}], "\[Rule]", "0.8163387393439936`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "40", "]"}], "\[Rule]", "0.45586696761398837`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "41", "]"}], "\[Rule]", "0.28054693419601473`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "42", "]"}], "\[Rule]", "0.3817706461461332`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "43", "]"}], "\[Rule]", "0.4183407746643315`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "44", "]"}], "\[Rule]", "0.49848120940387997`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "45", "]"}], "\[Rule]", "0.9008259227332798`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "46", "]"}], "\[Rule]", "0.6529386233413141`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "47", "]"}], "\[Rule]", "0.9345176455628628`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "48", "]"}], "\[Rule]", "0.22550538543954612`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "49", "]"}], "\[Rule]", "0.13352443566514371`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "50", "]"}], "\[Rule]", "0.7425513461893427`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "51", "]"}], "\[Rule]", "0.2907509394449692`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "52", "]"}], "\[Rule]", "0.9690052875990067`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "53", "]"}], "\[Rule]", "0.5305038766885328`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "54", "]"}], "\[Rule]", "0.7819936812360639`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "55", "]"}], "\[Rule]", "0.5684551540448641`"}], 
   ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "56", "]"}], "\[Rule]", 
    "0.27642369599035854`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9142550536497583`*^9, 3.914255208453878*^9, 
  3.914258157282556*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"d3cf6bb3-1b06-4af4-bce5-818065e2f105"]
}, Open  ]],

Cell["The Fubini-Study metric tensor is trivially obtained:", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250990899229*^9}, {
   3.914251085832686*^9, 3.914251104065876*^9}, {3.914251134735272*^9, 
   3.91425113717677*^9}, {3.9142512742844687`*^9, 3.914251329933467*^9}, {
   3.914253415056573*^9, 3.914253515808655*^9}, {3.914253785894093*^9, 
   3.914253910953849*^9}, {3.914253985093008*^9, 3.914254021438333*^9}, {
   3.914254318842496*^9, 3.914254401393444*^9}, {3.914255001820627*^9, 
   3.914255050656928*^9}, {3.91425513838724*^9, 3.9142551513709383`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"4874ef81-8493-46de-8424-03de84a64ce6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", " ", "=", " ", 
   RowBox[{"Re", " ", "@", " ", 
    RowBox[{"CalcMetricTensor", "[", 
     RowBox[{"in", ",", " ", "u", ",", " ", "v\[Theta]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"50", ";;"}], ",", " ", 
      RowBox[{"50", ";;"}]}], "]"}], "]"}], " ", "//", " ", "Chop"}], " ", "//",
   " ", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.914254878764382*^9, 3.914254897837179*^9}, {
  3.914254938575426*^9, 3.914254948865782*^9}, {3.914255013977212*^9, 
  3.9142550149135313`*^9}, {3.914255166028364*^9, 3.914255168766632*^9}, {
  3.9142554451972437`*^9, 3.91425544547269*^9}, {3.9142554821139507`*^9, 
  3.914255488360785*^9}, {3.914258594951049*^9, 3.914258632393572*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"9eb92ff5-ba9d-4dad-843a-c40b31421f16"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.24999927494283766`", "0.0006692995641166706`", 
      "0.010368686131408464`", 
      RowBox[{"-", "0.015304465034918172`"}], "0.004111966141911511`", 
      "0.008531238424438177`", "0.011132641433092502`"},
     {"0.0006692995641166706`", "0.24983778154008152`", 
      "0.00024492129774474525`", "0.0029107757364886743`", 
      "0.002406791813850163`", "0.03474123341019352`", 
      "0.013398329532750197`"},
     {"0.010368686131408464`", "0.00024492129774474525`", 
      "0.2496302119862365`", "0.007629585970329256`", 
      "0.0030313212361230512`", 
      RowBox[{"-", "0.01670917468368067`"}], 
      RowBox[{"-", "0.005651389874173969`"}]},
     {
      RowBox[{"-", "0.015304465034918172`"}], "0.0029107757364886743`", 
      "0.007629585970329256`", "0.24756602415311083`", 
      RowBox[{"-", "0.0021919783397295464`"}], 
      RowBox[{"-", "0.013471217027583688`"}], "0.006400666221968157`"},
     {"0.004111966141911511`", "0.002406791813850163`", 
      "0.0030313212361230512`", 
      RowBox[{"-", "0.0021919783397295464`"}], "0.24802595861911098`", 
      RowBox[{"-", "0.01242017569321944`"}], "0.014255297830704824`"},
     {"0.008531238424438177`", "0.03474123341019352`", 
      RowBox[{"-", "0.01670917468368067`"}], 
      RowBox[{"-", "0.013471217027583688`"}], 
      RowBox[{"-", "0.01242017569321944`"}], "0.24999999978619067`", 
      "1.2930069246508495`*^-7"},
     {"0.011132641433092502`", "0.013398329532750197`", 
      RowBox[{"-", "0.005651389874173969`"}], "0.006400666221968157`", 
      "0.014255297830704824`", "1.2930069246508495`*^-7", 
      "0.24992180571219721`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.914254941246876*^9, 3.9142549492048264`*^9}, 
   3.914255015611659*^9, {3.9142552085263443`*^9, 3.9142552087067127`*^9}, 
   3.914255447105*^9, {3.914255483408338*^9, 3.914255488629745*^9}, 
   3.9142581573701277`*^9, {3.914258598559647*^9, 3.914258632714439*^9}},
 CellLabel->
  "Out[101]//MatrixForm=",ExpressionUUID->"3810ccd4-b58c-4e71-aaf5-\
98b9b8d29de0"]
}, Open  ]],

Cell[TextData[{
 "The energy gradient, also required by quantum natural gradient, ",
 StyleBox["can",
  FontSlant->"Italic"],
 " be obtained in an identical manner to that of quantum gradient descent - \
via the parameter-shift rule. However, it is more convenient make use of \
another function below, which uses back-propagation to run O(#gates) faster!"
}], "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250990899229*^9}, {
   3.914251085832686*^9, 3.914251104065876*^9}, {3.914251134735272*^9, 
   3.91425113717677*^9}, {3.9142512742844687`*^9, 3.914251329933467*^9}, {
   3.914253415056573*^9, 3.914253515808655*^9}, {3.914253785894093*^9, 
   3.914253910953849*^9}, {3.914253985093008*^9, 3.914254021438333*^9}, {
   3.914254318842496*^9, 3.914254401393444*^9}, {3.914255001820627*^9, 
   3.914255050656928*^9}, {3.91425513838724*^9, 3.9142551513709383`*^9}, {
   3.9142551973255663`*^9, 3.914255266848304*^9}, {3.9142553035228777`*^9, 
   3.914255303848358*^9}, {3.914256242515655*^9, 3.914256260603169*^9}, {
   3.914256742356084*^9, 3.914256742447527*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"a64900d8-3b20-47c1-8fde-ac1dad35bd1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CalcExpecPauliStringDerivs"}]], "Input",
 CellChangeTimes->{{3.914255306397678*^9, 3.9142553106133833`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"8eaec11c-0696-4ea3-afce-dfa5b45477c5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CalcExpecPauliStringDerivs[inQureg, circuit, \
varVals, pauliString] returns the gradient vector of the pauliString expected \
values, as produced by the derivatives of the circuit (with respect to \
varVals, {var -> value}) acting upon the given initial state \
(inQureg).\\nCalcExpecPauliStringDerivs[inQureg, circuit, varVals, \
pauliQureg] accepts a Qureg pre-initialised as a pauli string via \
SetQuregToPauliString[] to speedup density-matrix \
simulation.\\nCalcExpecPauliStringDerivs[inQureg, circuit, varVals, \
pauliStringOrQureg, workQuregs] uses the given persistent workspaces \
(workQuregs) in lieu of creating them internally, and should be used for \
optimum performance. At most four workQuregs are needed.\\n    \[Bullet] \
Variable repetition, multi-parameter gates, variable-dependent element-wise \
matrices, variable-dependent channels, and operators whose parameters are \
(numerically evaluable) functions of variables are all permitted. \\n    \
\[Bullet] All operators must be invertible, trace-preserving and \
deterministic, else an error is thrown. \\n    \[Bullet] This function runs \
asymptotically faster than ApplyCircuitDerivs[] and requires only a fixed \
memory overhead.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"CalcExpecPauliStringDerivs", "[", 
                    RowBox[{"QuEST`Private`initQureg_Integer", ",", 
                    
                    RowBox[{
                    "QuEST`Private`circuit_", "?", 
                    "QuEST`Private`isCircuitFormat"}], ",", 
                    RowBox[{"QuEST`Private`varVals", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "Internal`RealValuedNumericQ"}]}], 
                    ")"}], ".."}], "}"}]}], ",", 
                    
                    RowBox[{
                    "QuEST`Private`paulis_", "?", 
                    "QuEST`Private`isValidPauliString"}], ",", 
                    RowBox[{"QuEST`Private`workQuregs", ":", 
                    RowBox[{"{", "___Integer", "}"}], ":", 
                    RowBox[{"{", "}"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`ret", ",", 
                    "QuEST`Private`encodedCirc", ",", 
                    "QuEST`Private`encodedDerivTerms"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"QuEST`Private`ret", "=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"QuEST`Private`encodeDerivCirc", "[", 
                    
                    RowBox[{"QuEST`Private`circuit", ",", 
                    "QuEST`Private`varVals"}], "]"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "QuEST`Private`ret", "]"}], "===", 
                    "String"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"CalcExpecPauliStringDerivs", "::", "error"}], 
                    "MessageName"], ",", "QuEST`Private`ret"}], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`encodedCirc", ",", 
                    "QuEST`Private`encodedDerivTerms"}], "}"}], "=", 
                    "QuEST`Private`ret"}], ";", 
                    
                    RowBox[{
                    "QuEST`Private`CalcExpecPauliStringDerivsInternal", "[", 
                    
                    RowBox[{"QuEST`Private`initQureg", ",", 
                    "QuEST`Private`workQuregs", ",", 
                    
                    RowBox[{"QuEST`Private`unpackEncodedCircuit", "[", 
                    "QuEST`Private`encodedCirc", "]"}], ",", 
                    
                    RowBox[{"QuEST`Private`unpackEncodedDerivCircTerms", "[", 
                    "QuEST`Private`encodedDerivTerms", "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    
                    RowBox[{"QuEST`Private`getEncodedPauliString", "[", 
                    "QuEST`Private`paulis", "]"}]}]}], "]"}]}]}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"CalcExpecPauliStringDerivs", "[", 
                    RowBox[{"QuEST`Private`initQureg_Integer", ",", 
                    
                    RowBox[{
                    "QuEST`Private`circuit_", "?", 
                    "QuEST`Private`isCircuitFormat"}], ",", 
                    RowBox[{"QuEST`Private`varVals", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "Internal`RealValuedNumericQ"}]}], 
                    ")"}], ".."}], "}"}]}], ",", 
                    "QuEST`Private`hamilQureg_Integer", ",", 
                    RowBox[{"QuEST`Private`workQuregs", ":", 
                    RowBox[{"{", "___Integer", "}"}], ":", 
                    RowBox[{"{", "}"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`ret", ",", 
                    "QuEST`Private`encodedCirc", ",", 
                    "QuEST`Private`encodedDerivTerms"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"QuEST`Private`ret", "=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"QuEST`Private`encodeDerivCirc", "[", 
                    
                    RowBox[{"QuEST`Private`circuit", ",", 
                    "QuEST`Private`varVals"}], "]"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "QuEST`Private`ret", "]"}], "===", 
                    "String"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"CalcExpecPauliStringDerivs", "::", "error"}], 
                    "MessageName"], ",", "QuEST`Private`ret"}], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`encodedCirc", ",", 
                    "QuEST`Private`encodedDerivTerms"}], "}"}], "=", 
                    "QuEST`Private`ret"}], ";", 
                    
                    RowBox[{
                    "QuEST`Private`\
CalcExpecPauliStringDerivsDenseHamilInternal", "[", 
                    
                    RowBox[{"QuEST`Private`initQureg", ",", 
                    "QuEST`Private`hamilQureg", ",", 
                    "QuEST`Private`workQuregs", ",", 
                    
                    RowBox[{"QuEST`Private`unpackEncodedCircuit", "[", 
                    "QuEST`Private`encodedCirc", "]"}], ",", 
                    
                    RowBox[{"QuEST`Private`unpackEncodedDerivCircTerms", "[", 
                    "QuEST`Private`encodedDerivTerms", "]"}]}], "]"}]}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"CalcExpecPauliStringDerivs", "[", "___", "]"}], 
                    ":=", 
                    
                    RowBox[{
                    "QuEST`Private`invalidArgError", "[", 
                    "CalcExpecPauliStringDerivs", "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"QuEST`CalcExpecPauliStringDerivs\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CalcExpecPauliStringDerivs[inQureg, circuit, \
varVals, pauliString] returns the gradient vector of the pauliString expected \
values, as produced by the derivatives of the circuit (with respect to \
varVals, {var -> value}) acting upon the given initial state \
(inQureg).\\nCalcExpecPauliStringDerivs[inQureg, circuit, varVals, \
pauliQureg] accepts a Qureg pre-initialised as a pauli string via \
SetQuregToPauliString[] to speedup density-matrix \
simulation.\\nCalcExpecPauliStringDerivs[inQureg, circuit, varVals, \
pauliStringOrQureg, workQuregs] uses the given persistent workspaces \
(workQuregs) in lieu of creating them internally, and should be used for \
optimum performance. At most four workQuregs are needed.\\n    \[Bullet] \
Variable repetition, multi-parameter gates, variable-dependent element-wise \
matrices, variable-dependent channels, and operators whose parameters are \
(numerically evaluable) functions of variables are all permitted. \\n    \
\[Bullet] All operators must be invertible, trace-preserving and \
deterministic, else an error is thrown. \\n    \[Bullet] This function runs \
asymptotically faster than ApplyCircuitDerivs[] and requires only a fixed \
memory overhead.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "CalcExpecPauliStringDerivs[inQureg, circuit, varVals, pauliString] \
returns the gradient vector of the pauliString expected values, as produced \
by the derivatives of the circuit (with respect to varVals, {var -> value}) \
acting upon the given initial state (inQureg).\n\
CalcExpecPauliStringDerivs[inQureg, circuit, varVals, pauliQureg] accepts a \
Qureg pre-initialised as a pauli string via SetQuregToPauliString[] to \
speedup density-matrix simulation.\nCalcExpecPauliStringDerivs[inQureg, \
circuit, varVals, pauliStringOrQureg, workQuregs] uses the given persistent \
workspaces (workQuregs) in lieu of creating them internally, and should be \
used for optimum performance. At most four workQuregs are needed.\n    \
\[Bullet] Variable repetition, multi-parameter gates, variable-dependent \
element-wise matrices, variable-dependent channels, and operators whose \
parameters are (numerically evaluable) functions of variables are all \
permitted. \n    \[Bullet] All operators must be invertible, trace-preserving \
and deterministic, else an error is thrown. \n    \[Bullet] This function \
runs asymptotically faster than ApplyCircuitDerivs[] and requires only a \
fixed memory overhead.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, QuEST`CalcExpecPauliStringDerivs, {
      QuEST`CalcExpecPauliStringDerivs[
         Pattern[QuEST`Private`initQureg, 
          Blank[Integer]], 
         PatternTest[
          Pattern[QuEST`Private`circuit, 
           Blank[]], QuEST`Private`isCircuitFormat], 
         Pattern[QuEST`Private`varVals, {
           Repeated[Blank[] -> PatternTest[
              Blank[], Internal`RealValuedNumericQ]]}], 
         PatternTest[
          Pattern[QuEST`Private`paulis, 
           Blank[]], QuEST`Private`isValidPauliString], 
         Optional[
          Pattern[QuEST`Private`workQuregs, {
            BlankNullSequence[Integer]}], {}]] :> 
       Module[{QuEST`Private`ret, QuEST`Private`encodedCirc, 
          QuEST`Private`encodedDerivTerms}, QuEST`Private`ret = Catch[
            QuEST`Private`encodeDerivCirc[
            QuEST`Private`circuit, QuEST`Private`varVals]]; 
         If[Head[QuEST`Private`ret] === String, Message[
             MessageName[QuEST`CalcExpecPauliStringDerivs, "error"], 
             QuEST`Private`ret]; Return[$Failed]]; {
           QuEST`Private`encodedCirc, QuEST`Private`encodedDerivTerms} = 
          QuEST`Private`ret; 
         QuEST`Private`CalcExpecPauliStringDerivsInternal[
          QuEST`Private`initQureg, QuEST`Private`workQuregs, 
           QuEST`Private`unpackEncodedCircuit[QuEST`Private`encodedCirc], 
           QuEST`Private`unpackEncodedDerivCircTerms[
           QuEST`Private`encodedDerivTerms], 
           Apply[Sequence, 
            QuEST`Private`getEncodedPauliString[QuEST`Private`paulis]]]], 
       QuEST`CalcExpecPauliStringDerivs[
         Pattern[QuEST`Private`initQureg, 
          Blank[Integer]], 
         PatternTest[
          Pattern[QuEST`Private`circuit, 
           Blank[]], QuEST`Private`isCircuitFormat], 
         Pattern[QuEST`Private`varVals, {
           Repeated[Blank[] -> PatternTest[
              Blank[], Internal`RealValuedNumericQ]]}], 
         Pattern[QuEST`Private`hamilQureg, 
          Blank[Integer]], 
         Optional[
          Pattern[QuEST`Private`workQuregs, {
            BlankNullSequence[Integer]}], {}]] :> 
       Module[{QuEST`Private`ret, QuEST`Private`encodedCirc, 
          QuEST`Private`encodedDerivTerms}, QuEST`Private`ret = Catch[
            QuEST`Private`encodeDerivCirc[
            QuEST`Private`circuit, QuEST`Private`varVals]]; 
         If[Head[QuEST`Private`ret] === String, Message[
             MessageName[QuEST`CalcExpecPauliStringDerivs, "error"], 
             QuEST`Private`ret]; Return[$Failed]]; {
           QuEST`Private`encodedCirc, QuEST`Private`encodedDerivTerms} = 
          QuEST`Private`ret; 
         QuEST`Private`CalcExpecPauliStringDerivsDenseHamilInternal[
          QuEST`Private`initQureg, QuEST`Private`hamilQureg, 
           QuEST`Private`workQuregs, 
           QuEST`Private`unpackEncodedCircuit[QuEST`Private`encodedCirc], 
           QuEST`Private`unpackEncodedDerivCircTerms[
           QuEST`Private`encodedDerivTerms]]], 
       QuEST`CalcExpecPauliStringDerivs[
         BlankNullSequence[]] :> 
       QuEST`Private`invalidArgError[QuEST`CalcExpecPauliStringDerivs]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "QuEST`CalcExpecPauliStringDerivs"|>, False]]], "Output",
 CellChangeTimes->{3.914255314250511*^9, 3.914258157525011*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"b4a9624d-f92d-4088-928d-e91faa7d9843"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grad", " ", "=", " ", 
  RowBox[{"CalcExpecPauliStringDerivs", "[", 
   RowBox[{"in", ",", " ", "u", ",", " ", "v\[Theta]", ",", " ", "h"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9142553159145117`*^9, 3.914255324767138*^9}, {
  3.914255451561715*^9, 3.914255452242779*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"39405214-f535-468e-baef-d3b47c2c3142"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.24537976593831531`", ",", "0.10651066478448637`", ",", 
   "0.12292836086253804`", ",", "0.11939894270862651`", ",", 
   RowBox[{"-", "0.022015926741418147`"}], ",", "0.12808675183559104`", ",", 
   RowBox[{"-", "0.058912432486419586`"}], ",", "0.3565038712106642`", ",", 
   "0.03711787314708513`", ",", 
   RowBox[{"-", "0.20373999712776433`"}], ",", "0.35068137707492275`", ",", 
   "0.04767208772873537`", ",", "0.09827924671816343`", ",", 
   RowBox[{"-", "0.10892340441714429`"}], ",", "0.24842504460208442`", ",", 
   "0.10902023456447299`", ",", 
   RowBox[{"-", "0.21914720613570748`"}], ",", 
   RowBox[{"-", "0.05207819587025254`"}], ",", 
   RowBox[{"-", "0.13416408362947405`"}], ",", 
   RowBox[{"-", "0.003390673691967147`"}], ",", "0.3130540574832486`", ",", 
   "0.36456987134120344`", ",", 
   RowBox[{"-", "0.02148423421274162`"}], ",", 
   RowBox[{"-", "0.0897153181485134`"}], ",", "0.3751746703198937`", ",", 
   "0.00480845382225073`", ",", "0.3532599090399891`", ",", 
   RowBox[{"-", "0.04018640013824881`"}], ",", 
   RowBox[{"-", "0.14341619270445027`"}], ",", 
   RowBox[{"-", "0.03615746665654837`"}], ",", 
   RowBox[{"-", "0.08232190099134029`"}], ",", 
   RowBox[{"-", "0.11415764414057601`"}], ",", 
   RowBox[{"-", "0.1519133324660738`"}], ",", "0.012573990699879634`", ",", 
   RowBox[{"-", "0.15527344829253126`"}], ",", "0.3919163209525165`", ",", 
   RowBox[{"-", "0.24068092934651536`"}], ",", 
   RowBox[{"-", "0.0029114389212396563`"}], ",", "0.18375738436992453`", ",", 
   
   RowBox[{"-", "0.0073857783414579825`"}], ",", "0.06876638256225905`", ",", 
   
   RowBox[{"-", "0.008196038423154417`"}], ",", "0.1409917681354528`", ",", 
   "0.005466084478971678`", ",", "0.19306404053171702`", ",", 
   RowBox[{"-", "0.3468273619959724`"}], ",", "0.0245652469126854`", ",", 
   "0.032081555742964944`", ",", "0.6219424744620264`", ",", 
   "0.33988149126063655`", ",", 
   RowBox[{"-", "0.14899656037826578`"}], ",", 
   RowBox[{"-", "0.018147103453064216`"}], ",", "0.40920320434376845`", ",", 
   "0.03217767929884005`", ",", "0.276417420535312`", ",", 
   "0.1573286093604282`"}], "}"}]], "Output",
 CellChangeTimes->{3.914255325132003*^9, 3.9142554691509333`*^9, 
  3.914258157573309*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"01c5f8ab-8b6d-4978-aeeb-5615b94a5931"]
}, Open  ]],

Cell[TextData[{
 "Now that we have obtained Re[",
 StyleBox["G",
  FontSlant->"Italic"],
 "] and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Del]", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"E", "(", 
      OverscriptBox["\[Theta]", "\[RightVector]"], ")"}], 
     "\[RightAngleBracket]"}]}], TraditionalForm]],ExpressionUUID->
  "a7f7b12d-f513-4f75-9854-502cb36fb700"],
 ",  c",
 "omputing an iteration of natural gradient requires solving the below linear \
equation for the change in parameters, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", 
    OverscriptBox["\[Theta]", "\[RightVector]"]}], TraditionalForm]],
  ExpressionUUID->"a609c4a1-d692-48dd-a208-7f49c87fab5c"],
 ".\n        ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      StyleBox["G",
       FontWeight->"Bold"], "]"}], "  ", 
     RowBox[{"(", 
      RowBox[{"\[CapitalDelta]", 
       OverscriptBox["\[Theta]", "\[RightVector]"]}], ")"}]}], " ", "=", " ", 
    
    RowBox[{
     RowBox[{"-", " ", "\[CapitalDelta]t"}], "   ", 
     RowBox[{"\[Del]", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"E", "(", 
        OverscriptBox["\[Theta]", "\[RightVector]"], ")"}], 
       "\[RightAngleBracket]"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "80ddd9c3-fc6c-474c-8f46-ae29dff37238"],
 "\n        \nAlas we ",
 StyleBox["cannot",
  FontSlant->"Italic"],
 " simply invert ",
 StyleBox["G ",
  FontSlant->"Italic"],
 "to obtain ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"\[CapitalDelta]", 
      OverscriptBox["\[Theta]", "\[RightVector]"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"-", " ", "\[CapitalDelta]t"}], "   ", 
      SuperscriptBox[
       RowBox[{"Re", "[", 
        StyleBox["G",
         FontWeight->"Bold"], "]"}], 
       RowBox[{"-", "1"}]], "   ", 
      RowBox[{"\[Del]", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"E", "(", 
         OverscriptBox["\[Theta]", "\[RightVector]"], ")"}], 
        "\[RightAngleBracket]"}]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "f16083ff-fecd-4e9b-bcd7-9e752894c705"],
 ", because it is often singular!"
}], "Text",
 CellChangeTimes->{{3.914251794337247*^9, 3.914251878713161*^9}, {
  3.914252242210902*^9, 3.91425224221148*^9}, {3.914252284937417*^9, 
  3.914252352448489*^9}, {3.91425240495455*^9, 3.91425242297615*^9}, {
  3.914252454014399*^9, 3.914252717960623*^9}, {3.9142528024609957`*^9, 
  3.914252823174206*^9}, {3.914253288441277*^9, 3.914253359490326*^9}, {
  3.9142547621120234`*^9, 3.9142548660488787`*^9}, {3.914255277261348*^9, 
  3.9142552928182983`*^9}, {3.9142553451096897`*^9, 3.9142554261790733`*^9}, {
  3.91425550671465*^9, 3.91425554342384*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"362bfe12-2ea5-468f-80a6-14e001ff4dd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.914255491327051*^9, 3.914255497311673*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"1e7d53ff-a487-48eb-b4bb-4de08275ce5a"],

Cell[BoxData["2.9190013396221316`*^-72"], "Output",
 CellChangeTimes->{{3.914255491651936*^9, 3.914255497703773*^9}, 
   3.914255544776533*^9, 3.914258157582067*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"f0075c34-0a20-4936-bb53-5ffcb1a47eca"]
}, Open  ]],

Cell["\<\
Instead, we seek an approximate solution - there are many ways to do this!\
\>", "Text",
 CellChangeTimes->{{3.914251794337247*^9, 3.914251878713161*^9}, {
  3.914252242210902*^9, 3.91425224221148*^9}, {3.914252284937417*^9, 
  3.914252352448489*^9}, {3.91425240495455*^9, 3.91425242297615*^9}, {
  3.914252454014399*^9, 3.914252717960623*^9}, {3.9142528024609957`*^9, 
  3.914252823174206*^9}, {3.914253288441277*^9, 3.914253359490326*^9}, {
  3.9142547621120234`*^9, 3.9142548660488787`*^9}, {3.914255277261348*^9, 
  3.9142552928182983`*^9}, {3.9142553451096897`*^9, 3.9142554261790733`*^9}, {
  3.91425550671465*^9, 3.9142555953777122`*^9}, {3.91425562886944*^9, 
  3.9142556614027977`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"94dd79cf-3a62-4ef5-8e1e-ba0cf67c8a7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalDelta]\[Theta]", " ", "=", " ", 
  RowBox[{"LinearSolve", "[", 
   RowBox[{"g", ",", " ", 
    RowBox[{
     RowBox[{"-", "\[CapitalDelta]t"}], " ", "grad"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.91425560310069*^9, 3.914255616533712*^9}, {
  3.914255769114863*^9, 3.914255772641159*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"ae683262-500d-47af-ab3c-c8d7d14debbc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.4653912875900877`"}], ",", "0.6641618990191729`", ",", 
   RowBox[{"-", "0.528218756227636`"}], ",", 
   RowBox[{"-", "0.4926782076194989`"}], ",", 
   RowBox[{"-", "0.04028294661259994`"}], ",", 
   RowBox[{"-", "0.5766411140478631`"}], ",", 
   RowBox[{"-", "0.1338983192430026`"}], ",", 
   RowBox[{"-", "0.6284928558944726`"}], ",", "0.6719184601317633`", ",", 
   "0.7997756676514923`", ",", 
   RowBox[{"-", "0.45577729636419884`"}], ",", "0.08487711128571164`", ",", 
   "0.47690732992517126`", ",", 
   RowBox[{"-", "0.08984451556696778`"}], ",", 
   RowBox[{"-", "0.26246432865582514`"}], ",", 
   RowBox[{"-", "1.2391198353896373`"}], ",", 
   RowBox[{"-", "0.13421335106738105`"}], ",", 
   RowBox[{"-", "0.754336127490308`"}], ",", 
   RowBox[{"-", "0.7293210830665864`"}], ",", "0.5253097189846057`", ",", 
   "0.44599803793804066`", ",", "0.0802576709990397`", ",", 
   RowBox[{"-", "0.11492112553251142`"}], ",", "0.6027647832871496`", ",", 
   "0.44523095670049745`", ",", 
   RowBox[{"-", "0.21219110659094645`"}], ",", 
   RowBox[{"-", "0.2859964697491104`"}], ",", "1.660924664446715`", ",", 
   "0.43571851975040665`", ",", 
   RowBox[{"-", "0.3557666054554134`"}], ",", "0.6148013192806842`", ",", 
   "0.7809784500306365`", ",", "0.3537929899514456`", ",", 
   RowBox[{"-", "0.547958329249947`"}], ",", "0.1576211865568493`", ",", 
   RowBox[{"-", "1.2483269822975214`"}], ",", 
   RowBox[{"-", "0.7337462277966158`"}], ",", 
   RowBox[{"-", "0.878310424957854`"}], ",", "0.18278075983175546`", ",", 
   "0.7058808992527188`", ",", 
   RowBox[{"-", "0.2510650738734044`"}], ",", 
   RowBox[{"-", "2.1730227414155414`"}], ",", "0.0563382739888148`", ",", 
   "0.9381399239865661`", ",", "0.1506950065403037`", ",", 
   "0.3319285371616305`", ",", "0.48241433557417535`", ",", 
   "0.9482371870397632`", ",", 
   RowBox[{"-", "0.581248792193511`"}], ",", "1.0033926158952564`", ",", 
   RowBox[{"-", "0.05694858663410039`"}], ",", "0.2099205103107598`", ",", 
   RowBox[{"-", "0.438878401512655`"}], ",", 
   RowBox[{"-", "0.36717662003745155`"}], ",", "0.11975214933721684`", ",", 
   "0.5820938696180106`"}], "}"}]], "Output",
 CellChangeTimes->{3.914255616792491*^9, 3.914255773492807*^9, 
  3.914258157606751*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"c33c2125-3ff4-4890-8a69-8f9e330dc34b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalDelta]\[Theta]", " ", "=", " ", 
  RowBox[{"-", 
   RowBox[{"\[CapitalDelta]t", "  ", 
    RowBox[{
     RowBox[{"PseudoInverse", "[", "g", "]"}], " ", ".", " ", 
     "grad"}]}]}]}]], "Input",
 CellChangeTimes->{{3.914255665024045*^9, 3.9142556746244907`*^9}, {
  3.914255775899543*^9, 3.914255780404127*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"2eef2b6b-0b05-45b7-a354-2e69516407a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.46539128759008774`"}], ",", "0.6641618990191006`", ",", 
   RowBox[{"-", "0.52821875622763`"}], ",", 
   RowBox[{"-", "0.49267820761949155`"}], ",", 
   RowBox[{"-", "0.040282946612598285`"}], ",", 
   RowBox[{"-", "0.5766411140478688`"}], ",", 
   RowBox[{"-", "0.13389831924300147`"}], ",", 
   RowBox[{"-", "0.6284928558944025`"}], ",", "0.6719184601317547`", ",", 
   "0.7997756676515224`", ",", 
   RowBox[{"-", "0.4557772963642158`"}], ",", "0.08487711128574454`", ",", 
   "0.4769073299251858`", ",", 
   RowBox[{"-", "0.08984451556695722`"}], ",", 
   RowBox[{"-", "0.2624643286558232`"}], ",", 
   RowBox[{"-", "1.2391198353895705`"}], ",", 
   RowBox[{"-", "0.13421335106737153`"}], ",", 
   RowBox[{"-", "0.7543361274902936`"}], ",", 
   RowBox[{"-", "0.7293210830665786`"}], ",", "0.5253097189845972`", ",", 
   "0.4459980379380465`", ",", "0.08025767099898928`", ",", 
   RowBox[{"-", "0.11492112553251284`"}], ",", "0.6027647832871047`", ",", 
   "0.4452309567005024`", ",", 
   RowBox[{"-", "0.2121911065909785`"}], ",", 
   RowBox[{"-", "0.2859964697491179`"}], ",", "1.6609246644467832`", ",", 
   "0.43571851975040776`", ",", 
   RowBox[{"-", "0.3557666054553984`"}], ",", "0.6148013192806849`", ",", 
   "0.7809784500306365`", ",", "0.35379298995143843`", ",", 
   RowBox[{"-", "0.5479583292499297`"}], ",", "0.15762118655684568`", ",", 
   RowBox[{"-", "1.2483269822976695`"}], ",", 
   RowBox[{"-", "0.7337462277966189`"}], ",", 
   RowBox[{"-", "0.8783104249578486`"}], ",", "0.1827807598317639`", ",", 
   "0.705880899252724`", ",", 
   RowBox[{"-", "0.2510650738734183`"}], ",", 
   RowBox[{"-", "2.1730227414156444`"}], ",", "0.05633827398881977`", ",", 
   "0.9381399239865422`", ",", "0.15069500654029677`", ",", 
   "0.3319285371616083`", ",", "0.4824143355741793`", ",", 
   "0.9482371870397508`", ",", 
   RowBox[{"-", "0.5812487921935151`"}], ",", "1.003392615895399`", ",", 
   RowBox[{"-", "0.05694858663409948`"}], ",", "0.20992051031078038`", ",", 
   RowBox[{"-", "0.43887840151265967`"}], ",", 
   RowBox[{"-", "0.3671766200374393`"}], ",", "0.11975214933721859`", ",", 
   "0.5820938696180477`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9142556679930687`*^9, 3.91425567491704*^9}, {
   3.91425577665456*^9, 3.914255780652253*^9}, 3.9142581576166573`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"cfb1486b-f5c8-413f-9c9a-a00695227213"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalDelta]\[Theta]", " ", "=", " ", 
  RowBox[{"Fit", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", ",", " ", 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]t"}], " ", "grad"}]}], "}"}], ",", " ", 
    RowBox[{"FitRegularization", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Tikhonov\>\"", ",", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.91425573008043*^9, 3.914255782173286*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"39c2966c-2411-4083-8ec3-05b28a9e7635"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.46540610039759533`"}], ",", "0.6638542175872745`", ",", 
   RowBox[{"-", "0.5281914558456554`"}], ",", 
   RowBox[{"-", "0.4926771360261635`"}], ",", 
   RowBox[{"-", "0.040309603496358815`"}], ",", 
   RowBox[{"-", "0.5766620020874567`"}], ",", 
   RowBox[{"-", "0.13388639484419967`"}], ",", 
   RowBox[{"-", "0.6285565966854809`"}], ",", "0.6718956726398229`", ",", 
   "0.7997119859590025`", ",", 
   RowBox[{"-", "0.4557496144313013`"}], ",", "0.08489790628264826`", ",", 
   "0.4767972297160163`", ",", 
   RowBox[{"-", "0.08981662638609905`"}], ",", 
   RowBox[{"-", "0.2624974388385894`"}], ",", 
   RowBox[{"-", "1.2387579925605134`"}], ",", 
   RowBox[{"-", "0.13426573039185574`"}], ",", 
   RowBox[{"-", "0.7543197029455537`"}], ",", 
   RowBox[{"-", "0.7292843264811453`"}], ",", "0.525333163427015`", ",", 
   "0.44597177047915687`", ",", "0.08032986512878926`", ",", 
   RowBox[{"-", "0.11490513511762833`"}], ",", "0.6028031425787599`", ",", 
   "0.44519817806562706`", ",", 
   RowBox[{"-", "0.21221536751474843`"}], ",", 
   RowBox[{"-", "0.2859932361255719`"}], ",", "1.6604451097214576`", ",", 
   "0.43574613091001224`", ",", 
   RowBox[{"-", "0.35574434429427826`"}], ",", "0.614759528315509`", ",", 
   "0.7808837565879829`", ",", "0.3538046111805972`", ",", 
   RowBox[{"-", "0.5479640142644442`"}], ",", "0.15761436569341997`", ",", 
   RowBox[{"-", "1.2480100933468505`"}], ",", 
   RowBox[{"-", "0.7337273444910344`"}], ",", 
   RowBox[{"-", "0.8782546675411569`"}], ",", "0.18278071135865923`", ",", 
   "0.7057895834142295`", ",", 
   RowBox[{"-", "0.25097622854954493`"}], ",", 
   RowBox[{"-", "2.172443529951812`"}], ",", "0.056402844568401334`", ",", 
   "0.9380958010370813`", ",", "0.15072345892307187`", ",", 
   "0.33202918073227283`", ",", "0.48238418513416725`", ",", 
   "0.9481944726892846`", ",", 
   RowBox[{"-", "0.5812479160540509`"}], ",", "1.0031043076119275`", ",", 
   RowBox[{"-", "0.05694670654618293`"}], ",", "0.20987500930623842`", ",", 
   RowBox[{"-", "0.43884205859962144`"}], ",", 
   RowBox[{"-", "0.3671449601105276`"}], ",", "0.11976167536855675`", ",", 
   "0.5820130312811397`"}], "}"}]], "Output",
 CellChangeTimes->{{3.914255756592496*^9, 3.914255783209587*^9}, 
   3.914258157643703*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"8b3ce464-e6d5-4166-9933-3ac0c772704c"]
}, Open  ]],

Cell[TextData[{
 "The last method is ",
 StyleBox["Tikhonov regularisation ",
  FontSlant->"Italic"],
 "with parameter ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], TraditionalForm]],ExpressionUUID->
  "2d322a2b-28d7-4253-9c81-cc0aff649014"],
 ", which obtains ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{
          RowBox[{
           UnderscriptBox["min", 
            OverscriptBox["\[Theta]", "\[RightVector]"]], "|", 
           RowBox[{
            RowBox[{
             RowBox[{"Re", "[", 
              StyleBox["G",
               FontWeight->"Bold"], "]"}], "  ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]", 
               OverscriptBox["\[Theta]", "\[RightVector]"]}], ")"}]}], " ", 
            "+", " ", 
            RowBox[{"\[CapitalDelta]t", "   ", 
             RowBox[{"\[Del]", 
              RowBox[{"\[LeftAngleBracket]", 
               RowBox[{"E", "(", 
                OverscriptBox["\[Theta]", "\[RightVector]"], ")"}], 
               "\[RightAngleBracket]"}]}]}]}]}], "\[RightBracketingBar]"}], 
         "2"], "  ", "+", " ", "\[Lambda]"}], " ", "|", 
       RowBox[{"\[CapitalDelta]", 
        OverscriptBox["\[Theta]", "\[RightVector]"]}]}], 
      "\[RightBracketingBar]"}], "2"], "  "}], TraditionalForm]],
  ExpressionUUID->"20065799-7969-440a-a336-d8bb2ca37fa5"],
 ", additionally constraining the linear equation to minimise the size of the \
parameter change, enforcing smoothness. "
}], "Text",
 CellChangeTimes->{{3.914251794337247*^9, 3.914251878713161*^9}, {
  3.914252242210902*^9, 3.91425224221148*^9}, {3.914252284937417*^9, 
  3.914252352448489*^9}, {3.91425240495455*^9, 3.91425242297615*^9}, {
  3.914252454014399*^9, 3.914252717960623*^9}, {3.9142528024609957`*^9, 
  3.914252823174206*^9}, {3.914253288441277*^9, 3.914253359490326*^9}, {
  3.9142547621120234`*^9, 3.9142548660488787`*^9}, {3.914255277261348*^9, 
  3.9142552928182983`*^9}, {3.9142553451096897`*^9, 3.9142554261790733`*^9}, {
  3.91425550671465*^9, 3.9142555953777122`*^9}, {3.91425562886944*^9, 
  3.9142556614027977`*^9}, {3.9142557887368383`*^9, 3.914255847224688*^9}, {
  3.91425587903094*^9, 3.91425594417216*^9}, {3.914255978297721*^9, 
  3.9142559792171507`*^9}, {3.91425603397132*^9, 3.914256082068886*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"43efbf72-ee6c-4ab6-8d1b-01066d933f14"],

Cell["\<\
Let\[CloseCurlyQuote]s now simulate quantum natural gradient upon the same \
system we threw at gradient descent.\
\>", "Text",
 CellChangeTimes->{{3.914251794337247*^9, 3.914251878713161*^9}, {
  3.914252242210902*^9, 3.91425224221148*^9}, {3.914252284937417*^9, 
  3.914252352448489*^9}, {3.91425240495455*^9, 3.91425242297615*^9}, {
  3.914252454014399*^9, 3.914252717960623*^9}, {3.9142528024609957`*^9, 
  3.914252823174206*^9}, {3.914253288441277*^9, 3.914253359490326*^9}, {
  3.9142547621120234`*^9, 3.9142548660488787`*^9}, {3.914255277261348*^9, 
  3.9142552928182983`*^9}, {3.9142553451096897`*^9, 3.9142554261790733`*^9}, {
  3.91425550671465*^9, 3.9142555953777122`*^9}, {3.91425562886944*^9, 
  3.9142556614027977`*^9}, {3.9142557887368383`*^9, 3.914255847224688*^9}, {
  3.91425587903094*^9, 3.91425594417216*^9}, {3.914255978297721*^9, 
  3.9142559792171507`*^9}, {3.91425603397132*^9, 3.914256082068886*^9}, {
  3.9142561235028276`*^9, 3.914256144468843*^9}, {3.914256550025734*^9, 
  3.91425655434443*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"51b2915b-84bf-4c0b-b7a8-838689c6f5c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v\[Theta]", " ", "=", " ", "init\[Theta]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"natGradVals", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"grad", " ", "=", " ", 
       RowBox[{"CalcExpecPauliStringDerivs", "[", 
        RowBox[{"in", ",", " ", "u", ",", " ", "v\[Theta]", ",", " ", "h"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"Re", " ", "@", " ", 
        RowBox[{"CalcMetricTensor", "[", 
         RowBox[{"in", ",", " ", "u", ",", " ", "v\[Theta]"}], "]"}]}]}], ";",
       "\[IndentingNewLine]", "\t", 
      RowBox[{"\[CapitalDelta]\[Theta]", " ", "=", " ", 
       RowBox[{"Fit", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", ",", " ", 
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]t"}], " ", "grad"}]}], "}"}], ",", 
         " ", 
         RowBox[{"FitRegularization", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Tikhonov\>\"", ",", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "6"}]]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"v\[Theta]", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "+=", " ", 
       "\[CapitalDelta]\[Theta]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"ApplyCircuit", "[", 
       RowBox[{
        RowBox[{"CloneQureg", "[", 
         RowBox[{"\[Psi]", ",", " ", "in"}], "]"}], ",", " ", 
        RowBox[{"u", " ", "/.", "v\[Theta]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"CalcExpecPauliString", "[", 
       RowBox[{"\[Psi]", ",", " ", "h", ",", " ", "\[Phi]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\t", "30"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9142513317202997`*^9, 3.914251396651124*^9}, 
   3.914251483460238*^9, {3.9142541830358*^9, 3.914254195730307*^9}, {
   3.914255092280957*^9, 3.91425509504632*^9}, {3.914256158796842*^9, 
   3.914256212214793*^9}, {3.914256284765586*^9, 3.914256294611445*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"1d91acfc-3975-444e-9969-52c3bfe7a89a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gradVals", ",", " ", "natGradVals"}], "}"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<iteration\>\"", ",", " ", "\"\<energy\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<gradient descent\>\"", ",", " ", "\"\<natural gradient\>\""}], 
     "}"}]}], " ", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"1.1", "vMin"}]}], "}"}]}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"vMin", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Red", ",", "Dashed"}], "]"}]}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.914256267555011*^9, 3.914256326306821*^9}, {
  3.914256677855815*^9, 3.914256684124754*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"9ad1f5df-2c5d-47a7-9619-681649d89ff7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7C83Hd53+OM+e6iAw92MWZzr2ffth3A5HKYv
vyelYnQNyhdw4D32P1/+4UMoX8Shcr37i453z6F8CYfiOftKTtm+hfJlHOKF
QnV3ffoA5Ss4SMq+3V7A+BnKV3KQOeTat/T6FyhfxUGpneWpV/03KF/N4d7O
E3mPGH5A+RoOiS97lHRSfkL5Wg6iAUuUn6//BeXrODy+2Pzb++VvKF/PgW32
D7XTwn+hfAMHSdZHczUN/0H5hg6uds/f3XT8D+UbOUy/n7pymxLDAQjf2GHf
37eeTXNhfBOHPfUu+24IMEL5pg62U85kxNfA+GYOK7VXyr69D+ObO2itDN8z
wZoJyrdwsEleNK2nH8a3dJDmyeHyvgPjWzk84EiZGqDEDOVbO9Rb/p+tlwTj
2zgYNwvsqZgD49s6XP6Y6L33Ioxv5/DW/eX5BiaWAwCM6JAe
         "]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Jn+z0tjOnN/P1TA4cCaz+f3XPgC5XM4dDw+
YS196D+UL+BQyxblebGK5QCEL+Lw4Var9+0ydihfwmGXUf6h7A+cUL6MQ4uU
iXf+Em4oX8GhZ9rVz2JTeKB8JYe9Wid894rwQvkqDix3EmddTYDx1RyEhOMl
pKbB+BoOAe8Obw84CONrObQ2Tz/F/wLG13HwuTxt03pePihfz2GR+LwDySYw
voFDrqLIuZWxML6hg+MEpUkRXTC+kcOuf1tuWuyG8Y0d/klnnpj+EcY3cfgg
sWFKlz4/lG/qwNi9ye1QGYxv5qAq/uPinSMwvrmD8dFVe+vZBaB8C4epBo8Y
IlRgfEuHZ0LuCY8sYHwrB66Fure/uMP41g4L2idqLA6G8W0cRP9unlgXC+Pb
Ougs8jj7Ng3Gt3NgNEk771AocAAA7iyErw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"iteration\"", TraditionalForm], 
       FormBox["\"energy\"", TraditionalForm]}, AxesOrigin -> {0., 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{}, {{-6.45172571007489, 
         Directive[
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]]}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 30.}, {-7.09689828108238, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"gradient descent\"", "\"natural gradient\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9142562703569736`*^9, 3.914256326584508*^9}, {
   3.914256674906898*^9, 3.914256685288769*^9}, 3.914258160532133*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"f8e6ef91-7ba5-48e7-bb4b-eec65fd4f323"]
}, Open  ]],

Cell["\<\
These functions are also compatible with density matrices and parameterised \
channels!\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQveuU16Hrmm8dzS9dOwOit+13+wWii45A6KD/c/+D
aLYoPo4bQHpN9zw+ED3f5r4AiP5aekAEROfs3WcKoqsO+DmAaInJT51A9Ec5
vloQfWDD+1YQvWmqs+lNIJ01wdEJRH+LWVEKohv0Z5WD6ClNynUg+scu1w6w
unthk0C0hVjOXBBdcmn2QhC94/GapSBab8r0rSB6qcHzPSC67O+DAyA6rIn1
JIh+1+Z5FkQ/+5QGpvlE7a+A6AATp1sgWku84D6IPszA/whEX7h0QOQWkJ7E
6i0KouW2HNMD0bI3r5mC6HlSz5NBtIPqWzANADmwq4w=
  "],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"e384b687-92e5-4134-8b06-ace2eae1010f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", " ", "\[Mu]", ",", "in"}], "}"}], " ", "=", " ", 
   RowBox[{"CreateDensityQuregs", "[", 
    RowBox[{"nQb", ",", " ", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitPlusState", "[", "in", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.914244905765726*^9, 3.914244910937447*^9}, {
  3.9142449842249813`*^9, 3.91424500599953*^9}, {3.91424585709746*^9, 
  3.9142458826866417`*^9}, {3.914246522199601*^9, 3.914246533763866*^9}, {
  3.914253917097932*^9, 3.914253934176293*^9}, {3.914253975168281*^9, 
  3.914253975666066*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"263131bd-e611-4808-bc4e-e96b095e353e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v\[Theta]", " ", "=", " ", "init\[Theta]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noisyNatGradVals", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"grad", " ", "=", " ", 
       RowBox[{"CalcExpecPauliStringDerivs", "[", 
        RowBox[{"in", ",", " ", "ch", ",", " ", "v\[Theta]", ",", " ", "h"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"Re", " ", "@", " ", 
        RowBox[{"CalcMetricTensor", "[", 
         RowBox[{"in", ",", " ", "ch", ",", " ", "v\[Theta]"}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"\[CapitalDelta]\[Theta]", " ", "=", " ", 
       RowBox[{"Fit", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", ",", " ", 
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]t"}], " ", "grad"}]}], "}"}], ",", 
         " ", 
         RowBox[{"FitRegularization", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Tikhonov\>\"", ",", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "6"}]]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"v\[Theta]", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "+=", " ", 
       "\[CapitalDelta]\[Theta]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"ApplyCircuit", "[", 
       RowBox[{
        RowBox[{"CloneQureg", "[", 
         RowBox[{"\[Rho]", ",", " ", "in"}], "]"}], ",", " ", 
        RowBox[{"ch", " ", "/.", "v\[Theta]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"CalcExpecPauliString", "[", 
       RowBox[{"\[Rho]", ",", " ", "h", ",", " ", "\[Mu]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\t", "30"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9142513317202997`*^9, 3.914251396651124*^9}, 
   3.914251483460238*^9, {3.9142541830358*^9, 3.914254195730307*^9}, {
   3.914255092280957*^9, 3.91425509504632*^9}, {3.914256158796842*^9, 
   3.914256212214793*^9}, {3.914256284765586*^9, 3.914256294611445*^9}, {
   3.914256836328511*^9, 3.914256883272724*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"a764c137-ac91-43ee-87a3-2ab9ac572843"],

Cell["Let\[CloseCurlyQuote]s compare all our simulations.", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQveuU16Hrmm8dzS9dOwOit+13+wWii45A6KD/c/+D
aLYoPo4bQHpN9zw+ED3f5r4AiP5aekAEROfs3WcKoqsO+DmAaInJT51A9Ec5
vloQfWDD+1YQvWmqs+lNIJ01wdEJRH+LWVEKohv0Z5WD6ClNynUg+scu1w6w
unthk0C0hVjOXBBdcmn2QhC94/GapSBab8r0rSB6qcHzPSC67O+DAyA6rIn1
JIh+1+Z5FkQ/+5QGpvlE7a+A6AATp1sgWku84D6IPszA/whEX7h0QOQWkJ7E
6i0KouW2HNMD0bI3r5mC6Hy5Z7K3gbTSm1g5EA0AMziq8A==
  "],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"42d42462-1d15-482a-bb13-561703c8fab2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "gradVals", ",", " ", "noisyGradVals", ",", " ", "natGradVals", ",", " ", 
     "noisyNatGradVals"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<iteration\>\"", ",", " ", "\"\<energy\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
     "\"\<pure gradient descent\>\"", ",", "\[IndentingNewLine]", "\t\t", 
      "\"\<noisy gradient descent\>\"", ",", "\[IndentingNewLine]", "\t\t", 
      "\"\<pure natural gradient\>\"", ",", "\[IndentingNewLine]", "\t\t", 
      "\"\<noisy natural gradient\>\""}], "}"}]}], " ", ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"1.1", "vMin"}]}], "}"}]}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"vMin", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Red", ",", "Dashed"}], "]"}]}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.914256267555011*^9, 3.914256326306821*^9}, {
  3.914256677855815*^9, 3.914256684124754*^9}, {3.91425692986301*^9, 
  3.914256971381052*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"2845a856-844a-4ac9-b589-792aa8f9fe5d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7C83Hd53+OM+e6iAw92MWZzr2ffth3A5HKYv
vyelYnQNyhdw4D32P1/+4UMoX8Shcr37i453z6F8CYfiOftKTtm+hfJlHOKF
QnV3ffoA5Ss4SMq+3V7A+BnKV3KQOeTat/T6FyhfxUGpneWpV/03KF/N4d7O
E3mPGH5A+RoOiS97lHRSfkL5Wg6iAUuUn6//BeXrODy+2Pzb++VvKF/PgW32
D7XTwn+hfAMHSdZHczUN/0H5hg6uds/f3XT8D+UbOUy/n7pymxLDAQjf2GHf
37eeTXNhfBOHPfUu+24IMEL5pg62U85kxNfA+GYOK7VXyr69D+ObO2itDN8z
wZoJyrdwsEleNK2nH8a3dJDmyeHyvgPjWzk84EiZGqDEDOVbO9Rb/p+tlwTj
2zgYNwvsqZgD49s6XP6Y6L33Ioxv5/DW/eX5BiaWAwCM6JAe
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7N9nmkR9OnnQHirgsGzNGoadb3v3Q7gcDo4J
QsoR6kehfAGHZcWJHJrHL0P5Ig5xxetbfUPuQPkSDg2qTPUZfI+gfBkH3uyi
D019T6F8BYfsz+9kp256AeUrOTz6wV5v3v4ayldx4P081YdN8h2Ur+ZgKntS
zcXyA5Sv4fDi0aUiZr+PUL6Ww6ITadJKfp+gfB2HvAcGvdNtPkP5eg6H3r54
KSnzBco3cHgeNq9e4j2Mb+hgdL1h0qLtX6F8IwfZF7uUgsq/QfnGDglqYXtc
9b9D+SYOJkrhszUfwPimDrwJO3O8u35A+WYO+wVuuWzW/Qnlmzuc8HGpsD0F
41s4/GcQCdoU/wvKt3Q49Zpv+823ML6Vw7YXwcs7S35D+dYOYSZ3w9d/hvFt
HO7aiXkEZ/+B8m0dFvw6bzbzNoxv5zB/zyz5vS5/9wMAcMWWig==
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Jn+z0tjOnN/P1TA4cCaz+f3XPgC5XM4dDw+
YS196D+UL+BQyxblebGK5QCEL+Lw4Var9+0ydihfwmGXUf6h7A+cUL6MQ4uU
iXf+Em4oX8GhZ9rVz2JTeKB8JYe9Wid894rwQvkqDix3EmddTYDx1RyEhOMl
pKbB+BoOAe8Obw84CONrObQ2Tz/F/wLG13HwuTxt03pePihfz2GR+LwDySYw
voFDrqLIuZWxML6hg+MEpUkRXTC+kcOuf1tuWuyG8Y0d/klnnpj+EcY3cfgg
sWFKlz4/lG/qwNi9ye1QGYxv5qAq/uPinSMwvrmD8dFVe+vZBaB8C4epBo8Y
IlRgfEuHZ0LuCY8sYHwrB66Fure/uMP41g4L2idqLA6G8W0cRP9unlgXC+Pb
Ougs8jj7Ng3Gt3NgNEk771AocAAA7iyErw==
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7MPczR5EmB/fDxVwqGx2fiC29wmUz+GwV9z8
RfqHj1C+gIPcp5QzOXN/QPkiDiq738pPq/oH5Us47J6YExVewngAwpdx6Cyq
dpZQYYbyFRz8g651H85hgfKVHGI2bJf/FMIK5as4SNWHCVz8BOOrObw5UrNb
M5MNytdwOCetEeZ9AsbXckj/Mfn/byF2KF/HweqRe9F8DxhfzyGAR31PcT6M
b+Bwwjs3/G4vjG/osPKw157c5TC+kcN5sRgVqX0wvrEDH8O2ZKHLML6Jw0UJ
0Ucaz2F8U4clvJHv/v+C8c0cEku4oyX4OaB8cwf/Xz6KF5VhfAsHDqUzBkmW
ML6lg9KT3Za3/GF8K4cNnjmFqukwvrXDdEbVl/L1ML6Nw5Vk97UbpsP4tg79
rukdTzfA+HYOaz7Nj2c5zXEAAO//f/Y=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"iteration\"", TraditionalForm], 
       FormBox["\"energy\"", TraditionalForm]}, AxesOrigin -> {0., 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{}, {{-6.45172571007489, 
         Directive[
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]]}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 30.}, {-7.09689828108238, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"pure gradient descent\"", "\"noisy gradient descent\"", 
       "\"pure natural gradient\"", "\"noisy natural gradient\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9142569718813*^9, 3.914258222167225*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"57212d45-271c-4001-bbf1-9d01c7e44de7"]
}, Open  ]],

Cell["\<\
Note this is not an interpretable performance comparison of these methods; we \
have not individually optimised the timesteps \[CapitalDelta]t, nor compared \
their resource costs. We have made no effort to sensibly initialise our \
parameters, avoid barren plateaus, nor reason about convergence.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQveuU16Hrmm8dzS9dOwOit+13+wWii45A6KD/c/+D
aLYoPo4bQHpN9zw+ED3f5r4AiP5aekAEROfs3WcKoqsO+DmAaInJT51A9Ec5
vloQfWDD+1YQvWmqs+lNIJ01wdEJRH+LWVEKohv0Z5WD6ClNynUg+scu1w6w
unthk0C0hVjOXBBdcmn2QhC94/GapSBab8r0rSB6qcHzPSC67O+DAyA6rIn1
JIh+1+Z5FkQ/+5QGpvlE7a+A6AATp1sgWku84D6IPszA/whEX7h0QOQWkJ7E
6i0KouW2HNMD0bI3r5mC6AP7Z6WD6DkOE/NB9FZTmdUgmuFE3DoQDQBJb7QZ

  "],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"540a513e-cc72-4fc5-a08d-cad050fb57a3"],

Cell["\<\
We finally mention that watching the parameters smoothly evolve during \
minimisation can be quite a show!\
\>", "Text",
 CellChangeTimes->{{3.914241177842319*^9, 3.914241356434317*^9}, {
   3.914241419986949*^9, 3.914241464089446*^9}, {3.914241521781822*^9, 
   3.914241534245821*^9}, {3.9142416551985283`*^9, 3.914241681970954*^9}, {
   3.914241713636671*^9, 3.914241739191381*^9}, {3.914241787445615*^9, 
   3.914241816743944*^9}, {3.914241963067803*^9, 3.914242018608985*^9}, {
   3.914242249585505*^9, 3.914242286232564*^9}, {3.914242483229141*^9, 
   3.914242495641685*^9}, {3.914242537446471*^9, 3.9142425718598747`*^9}, {
   3.914242610332621*^9, 3.914242617488583*^9}, {3.914242648993348*^9, 
   3.91424269714583*^9}, {3.9142427883186407`*^9, 3.914242820078691*^9}, {
   3.914243039546845*^9, 3.9142430579692497`*^9}, {3.914243296007683*^9, 
   3.914243320618903*^9}, {3.914243360064829*^9, 3.914243463422031*^9}, {
   3.9142436063341427`*^9, 3.9142436083150873`*^9}, {3.914243731818449*^9, 
   3.914243776708274*^9}, {3.9142438472385597`*^9, 3.914243869554946*^9}, {
   3.9142439394962273`*^9, 3.9142439503304996`*^9}, {3.9142439942829437`*^9, 
   3.914244023279867*^9}, {3.914244111271091*^9, 3.9142441401888647`*^9}, {
   3.914244171424411*^9, 3.914244189735738*^9}, {3.914244267638257*^9, 
   3.9142443306882133`*^9}, {3.914244451017125*^9, 3.914244478688418*^9}, {
   3.9142445136885977`*^9, 3.91424470313949*^9}, {3.914244891961296*^9, 
   3.914244892864347*^9}, {3.914245027062169*^9, 3.91424506586238*^9}, {
   3.914245525407836*^9, 3.914245539320327*^9}, {3.914245745765368*^9, 
   3.914245783743766*^9}, {3.9142458166063023`*^9, 3.91424583745006*^9}, {
   3.9142466995199947`*^9, 3.91424674599289*^9}, {3.9142469443406754`*^9, 
   3.914247031053561*^9}, 3.9142476152387114`*^9, {3.9142476814780617`*^9, 
   3.914247783391807*^9}, {3.9142485442585917`*^9, 3.9142485810526037`*^9}, {
   3.914248716240905*^9, 3.914248716241696*^9}, {3.914248835043638*^9, 
   3.9142488376411*^9}, {3.914248975378188*^9, 3.9142489767103863`*^9}, {
   3.914249223839466*^9, 3.914249457559413*^9}, {3.9142495136225443`*^9, 
   3.914249533919333*^9}, {3.91424982764655*^9, 3.914249851637659*^9}, {
   3.9142507706389103`*^9, 3.914250771609661*^9}, {3.9142508318732433`*^9, 
   3.91425084825869*^9}, {3.914250903796385*^9, 3.914250990899229*^9}, {
   3.914251085832686*^9, 3.914251104065876*^9}, {3.914251134735272*^9, 
   3.91425113717677*^9}, {3.9142512742844687`*^9, 3.914251329933467*^9}, {
   3.914253415056573*^9, 3.914253515808655*^9}, {3.914253785894093*^9, 
   3.914253910953849*^9}, {3.914257722956031*^9, 3.914257740976983*^9}, {
   3.914258016873459*^9, 3.914258020851789*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"f6d91712-d288-41e7-ae33-947044b8c92d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", " ", "=", " ", 
   RowBox[{"InitPlusState", " ", "@", " ", 
    RowBox[{"CreateQureg", "[", "nQb", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v\[Theta]", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "[", "i", "]"}], "->", 
      RowBox[{"RandomReal", "[", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n\[Theta]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]t", " ", "=", " ", 
   RowBox[{"Transpose", " ", "@", " ", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"grad", " ", "=", " ", 
        RowBox[{"CalcExpecPauliStringDerivs", "[", 
         RowBox[{"in", ",", " ", "u", ",", " ", "v\[Theta]", ",", " ", "h"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\t", 
       RowBox[{"g", " ", "=", " ", 
        RowBox[{"Re", " ", "@", " ", 
         RowBox[{"CalcMetricTensor", "[", 
          RowBox[{"in", ",", " ", "u", ",", " ", "v\[Theta]"}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", "\t", 
       RowBox[{"\[CapitalDelta]\[Theta]", " ", "=", " ", 
        RowBox[{"Fit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"g", ",", " ", 
            RowBox[{
             RowBox[{"-", "\[CapitalDelta]t"}], " ", "grad"}]}], "}"}], ",", 
          " ", 
          RowBox[{"FitRegularization", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Tikhonov\>\"", ",", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "6"}]]}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"v\[Theta]", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "+=", " ", 
        "\[CapitalDelta]\[Theta]"}]}], ",", "\[IndentingNewLine]", "\t", 
      "30"}], "\[IndentingNewLine]", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9142513317202997`*^9, 3.914251396651124*^9}, 
   3.914251483460238*^9, {3.9142541830358*^9, 3.914254195730307*^9}, {
   3.914255092280957*^9, 3.91425509504632*^9}, {3.914256158796842*^9, 
   3.914256212214793*^9}, {3.914256284765586*^9, 3.914256294611445*^9}, {
   3.914257829132883*^9, 3.914257946574801*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"51c0fe58-4c43-422c-b142-6faa585c31ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"\[Theta]t", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "All"}], "}"}], ",", "All"}], "}"}]}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", "\"\<DeepSeaColors\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.914257908065958*^9, 3.9142579116654053`*^9}, {
  3.914257965114751*^9, 3.914258010248349*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"82819e38-05b6-475e-aac8-fed768434c84"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.16791, 0., 0.301671], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7OtKjRWC7z23hwo46Lkw1PCEP4PyORzYWB8s
3/TvCZQv4GBwOc/qvvpjKF/EwSa9gtUh6SmUL+GgtEVE79BhmHkyDksnHWDu
ug5Tr+Awx/79Nz/vR1C+koOu8sNOyUn3oXwVBxHZmyXM6fegfDWHRbuslPXj
7kD5Gg6HYrbxeurdgvK1HCSvP5qxuug6lK/jcPzguq3nFK5C+XoO1lq1N6S3
X4byDRyOcNuuWCsJ4xs6LBAprVgvDeMbORS/bWTpDoXxjR2mCkczyO6G8U0c
hJeyH3CVvALlmzrMcTEs7EyH8c0cWmffmrK9D8Y3d1g8Lz69ezKMb+FQ8a77
/MoqGN/SYeXShQ7aoTC+lcO3ln83cgxhfGuHWs7ft8/KwPg2DqE1Wq3hcjC+
rcOfGYkuKy1gfDsHs5PnHl/PvGIPAD2ZgyE=
      "]]}, 
    {RGBColor[0.1779393818181818, 0.0044190690909090904`, 0.3235093272727273],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7BfyLpvZseOkPVTAgSM3+cWiuDNQPofDwvsX
GR+ZXIXyBRx+3mo/5cx8E8oXcRDj+hpRxHIfypdw8HJwOrE16wGUL+NwUvOw
ifjiW1C+ggPf5ROMM+edh/KVHJy+3olh3g9Tr+Igy9y1cWnNUyhfzUFliQtL
cuErKF/DgTFOkzM/8R2Ur+XgULrwjrPsByhfx8FPSDjh7LT3UL6eg1bK9ZYP
c2DqDRxMEnlmX1/3Fso3dLBelr9miTaMb+Qwwbil0f3UGyjf2OG9hPUj5jkw
volDvO8E9YW9ML6pw7sT8y8K7YHxzRweXk2MK5KBmWfusHn9xPCc1TC+hcPx
hxO83oXA3GPpoJMo1N/NBXOvlUPMlBf3Q/fD+NYO/psD3WPNYP6zcZhaPPFq
dzuMb+sQoRbKUHEJxrdzmGS76v8JsY/2ALFKhf8=
      "]]}, 
    {RGBColor[0.18796876363636364`, 0.008838138181818181, 0.3453476545454546],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7FcEqxevzTq3Hyrg4BK399ukznVQPoeDRJBB
ZfeflfYQvoADK8e7nafabkH5Ig4h/2YLzla6DuVLODxlPi+jv+MQlC/jMMEz
8Qvjz7NQvoJD1K4VfH+ZT0P5Sg4Tnn/6bGJ9CcpXcdB75Jaw6vRFKF/NobNz
fkQi2xUoX8NB6jBj4MWay1C+loN3QvPNs0owvo5Dp0qa5ddLMP16DnOld+lO
uXYByjdw4H+hGNofeR7KN3S48fA3G2M4zH1GDhp1DjPXqcPcZ+yg/lwy+YTp
SSjfxCFdct/NlVnHoXxTB764DI9P349C+WYOpz8HbVa9fgTKN3fQOVe+IpkP
xrdwOOC9u+1Ay2Eo39KBy3830yd5GN/Kwe/I4f4nh2DhZ+1QcLHPcEkUjG/j
cNp3jrT63YNQvq2D5YUknx9uML6dwy+Tzoc3px+wBwAlX4hK
      "]]}, 
    {RGBColor[
     0.19799814545454544`, 0.013257207272727273`, 0.36718598181818185`], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7K9IO3zYX7d/P1TAYVFoZsIDdhifw2GKmpLL
VasLUL6Aw4HvfZlZR69C+SIORlz/7ismPIDyJRwSVr0L2HXjBZQv43Dwq2Od
AOc3KF/Bofl23wzXbhhfyeG39sIl3qrfoXwVB//SC6eKH8L4ag6/Yy+/OyX3
C8rXcGBer8Yuf/gvlK/lYJnXdLJZg+EAhK/jUKY370mnOSOUr+fgs2frEsaN
ML6BQ1X157cnU5mgfEOH6yWsAYxvYXwjh2m67aIv8pihfGOHxZnhdjnnYHwT
h7uGy57VKLJA+aYOnVem/WVIhfHNHLadn+n7bw6Mb+6wRDvgoOlRGN/CITPw
7kXd2zC+pYN0Ol80010Y38phaU31o76zML61w7tj24T2bYTxbRzC7/H66vbD
+LYOm/4yOEZnwfh2Dv4cL7a/dGM5AAASY4xt
      "]]}, 
    {RGBColor[
     0.20802752727272728`, 0.017676276363636362`, 0.3890243090909091], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Bf7X56evuyjPVTAYbW47397pu9QPofDucxW
1+6gH1C+gEN6r8sewwSYvIiD+6tVCw5v+ALlSzgYa89zO8X4DcqXcfhgtDxN
b8YnKF/BIXHFuZfNpjD7lBxuy0yw8n31DspXcbBpuL7SPeAtlK/mIJJlbNTx
8hWUr+FwfL7OWfO2l1C+loPtL8HFU7lfQPk6Dmtmy9W8vPcMytdz0Lrw/d2H
7U+hfAOHh+3eJ7JnPIHyDR0s9Pi/Pm5+DOUbOejdCZ32pP4RlG/swDytJ126
7iGUb+KQWfbBX7r4AZRv6vC68fqubXvuQflmDlki/le9mu5A+eYOh5ruS9V6
3oLyLRyC11nImajcgPItHe74RnD+VL0G5Vs5PFXydeCPuQLlWzssmV+panfm
EpRv4/CtYG8iQ+lFKN/W4cf2v6tv+F+A8u0cfm6w5BJecc4eAJOqimE=
      "]]}, 
    {RGBColor[
     0.21805690909090908`, 0.022095345454545456`, 0.4108626363636364], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7BeGbc2I2fPSHirgYFazyy5gPYzP4SB9Kl77
wMkPUL6Aw3Q2ZUnje++gfBGH8j0cjO4nP0H5Eg55z7os007/h/JlHOwEPKL2
Sf6G8hUcfi97x/uz6xeUr+TwQWPC3Okqf6B8FYefD0Mm32r6C+WrObBd1JX8
Mg9mnoaDr8/rB1MWMThA+FoOIk+kAnLbGKF8HYd1S3MPBGoxQfl6DtbrbKZt
qYPxDRxWHX9wJaQFxjd0mFnwMVUuEcY3crgwVa6b3RDGN3ZIsRHVOs0O45s4
2F0L/lD3BmafqUOz/jelxscwvplDxP/J/ttfwvjmDo++nPVe+QvGt3BYvHbG
wf18MPMsHQKKH11rV4DxrRwe8P4Uf6wD41s7HHBslLEzgfFtHKaGyX5us4Dx
bR3YsvansdjA+HYOksJZe+IcmBwAwYt5Xw==
      "]]}, 
    {RGBColor[
     0.22808629090909088`, 0.026514414545454546`, 0.4327009636363637], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7GuYP60Q3PDBHirg8G2j/6llF59D+RwOFcwH
BJZ5nYfyBRwkSg8dMhTavx/CF3FgOiUQUmF1GSov4cD/b1bev4dHoXwZhwVP
OR11Km9A+QoOs/2KPktKXIfylRxeGAQavzh7DcpXcXhh7nr08ZeLUL6aQ0dU
y8bS3AtQvobD5GrRSfynT0H5Wg4Hjzv96A85AeXrOCSrioioz4bZr+fw+M69
/A8JR6B8A4dksQ1vDHUOQ/mGDreuxYYcMz8E5Rs53GG4nt6rdhDKN3Z4tlWu
7eGr/VC+iYPj8wlH5+jthfJNHd5api/Ps98F5Zs5cOuyRPL4b4fyzR0sDVJv
Os3eAuVbOHzoUJ+z0HoTlG/p8CjWqq5FZwOUb+UgJvJk1Y0Na6B8awdpXTYp
+ZSVUL6Nw52ooKXvS5dB+bYOzPnL9xczLoHy7RyuywkfWKG1yB4Ath6DDg==

      "]]}, 
    {RGBColor[
     0.23811567272727271`, 0.030933483636363633`, 0.45453929090909095`], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7CdEPF6ZHPncHirg8NipK/3Jnt9QPofDmmmH
K2ZmfoPyBRyeK5rIzZz/BcoXcVgXeeruHVGYvITD7q+8H7vOvYTyZRzaDydK
Ljv3AcpXcDixc/OyF4WvoHwlB/Y7b/sv+MPUqzic82lfmx33DMpXc1h6Y2ns
Nu0XUL6GA2enttWWvzD3ajnUpLiE7+OB6ddxYOOXWBdhDjNfz8H1+1fN3srX
UL6BQ/nifx+cdr+B8g0dnh28a+P57y2Ub+Rwvc11Sbvneyjf2KHt2QK+vZYw
95s4NMzZPefXFhjf1OF5k+HML4wfoXwzhxkTslaekITxzR1YzrxyefQXpt7C
QedI5R2ePTC+pcPsZZdkFqbD+FYO7iFLIpuEYHxrh1UxnTUCk2DusXFwTf1q
uFEJxrd14FU/eif91jso385h9ZWN/fu3v7MHAH0zk4U=
      "]]}, 
    {RGBColor[
     0.24814505454545455`, 0.035352552727272724`, 0.47637761818181823`], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7GfcqPMp8PhgDxVwsFsv5mbM+BXK53CQ1X4b
NtMQxhdwODEv7efxuPdQvojDZGnmpw+030H5Eg4CLielvp1/CeXLOFgukntZ
te45lK/gcKhopqnBrrtQvpLDqQdP5qpPeAzlqzi8XZPWZnL9CZSv5iD440DK
44fPoHwNB5Fgvn9+ZjDztByOrrXKs3OD8XUcapqPmgrOhanXcxB0CGf8fvgp
lG/gYHPeVabuIMx8QweZ6a1NFtNh9hs57DyTbb4x/BGUb+zA02CSc+73Ayjf
xCFuslPFI9v7UL6pQ9ht4QdVU+5A+WYOgu/XHnBQvAXlmzvsvpEefuPtdSjf
wqG3953iqz9XoXxLh4lNDLcuu1yB8q0c3r0081q97xKUb+3w45vHNrW0i1C+
jYNW9MUzFZYXoHxbh8osL/MfOeegfDuHiurYyTc3n7EHAJwXi5M=
      "]]}, 
    {RGBColor[0.25817443636363635`, 0.03977162181818182, 0.4982159454545455], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7M1s13zgXfnQHirg0Gb35MGnY++hfA4Hkx7L
xQoud6B8AYfI0+/iNOVfQPkiDn5cH37MOncfypdwmPVVRLqX+weUL+Ogsl3z
0zzVz1C+gsPNHM8cjekwvpKD+cLbno93fILyVRweVLIJRJV+hfLVHLJiA1Zb
Rn+D8jUcysqannMx/ITytRz6njxTrb/0C8rXcYjo1TBZvPEPlK/nwFC8Zfe0
h3+hfAOHWuab73iq/kH5hg4TqmPqXs+H8Y0cZPwvP69ug/GNHSJnXvGstIfx
TRxuPNq7gesxzDxTh49iytLHKmF8M4dWjkeMT4VgfHOHv7cz6pZtg7nHwuHZ
vPeRLLkwvqXDf77cdx4WML6Vg7P1O4kZ4jC+tUPOUSFVRw4Y38bhcA/zjtPs
ML6tw6O55rorRWB8O4c4NwdPXb0/9gAsbYkZ
      "]]}, 
    {RGBColor[0.26820381818181815`, 0.04419069090909091, 0.5200542727272728], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7NUao3+qbnprDxVw6DxQ9VXA7iWUz+Hw4kFe
Rs/Hh1C+gEPGsZ/VieaHoXwRh4JqgYpamwn7IXwJh3N6qy03iB2H8mUcZmcp
WP0QOQTlKzhY5m07u+LoFShfyUHvX4hsxQIYX8Uh1n+apIjmTShfzaFRyiAg
tA3G13DgcTug83PKbShfy2HRvKoQxncwvo7Di6C5F3f/h/H1HFwlJkhdm3wH
yjdw+Bu8odbT6S6Ub+jQ0eV15QPbPSjfyOH3jD/b3vTC+MYOLyYciA59COOb
ONQt+SXe/hbGN3WYfFV9nsZRGN/MIWJb/GqVQhjf3GHXnBkt/ZwwvoXDXM9K
tuD5MPstHeyWvDph7gzjWzlUc24tqPwDc6+1g/FFwbtLz8D4Ng77LoZ0i22A
8W0dPr1irgpcBOPbOWg9O8XoOf/OfgCkGJfx
      "]]}, 
    {RGBColor[0.27823319999999996`, 0.04860976, 0.5418926000000001], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7J8bMHTIpNywhwo4fJqxeX9wGIzP4XBHY9Lv
TUcPQPkCDixsT1KP/t69H8IXcdjBULumatYDKF/CQc1M8oth0ksoX8bhKPM1
B51db6F8BQdDKeunT6VgfCWHXydYpLZugKlXcXBrYnirKXoPyldzKGOMehjx
EcbXcNjFws76pPoRlK/lUHbQ9aBy0xMoX8dB+pGHbqIPjK/ncFroqsrpJzD1
Bg6x0hv3OdQ+hPINHW5/9m0Rjoe538jh7bmzmRst70P5xg6zLEIt9gfA7Ddx
eFP3o9/m6l0o39Thhti1T0/nwfhmDumsKfK3i2B8c4d/hiWhd2xgfAuHOUdc
Mn1f3IHyLR02Pfeqz6mF8a0cvi2xzEtlhPGtHVweVaXwNd6G8m0cQrqnNFxi
gfFtHXp+B38OnXoLyrdz0Nqx96+Kxa39AN7oloE=
      "]]}, 
    {RGBColor[0.28826258181818176`, 0.05302882909090909, 0.5637309272727273], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7N+ylD0Q+XBtP1TAYd6vPqGDbbegfA6H6P13
006b34DyBRyknzH6zfWH8UUcph9x35E08SqUL+Eg8Ct9QtXre1C+jEORTcmB
mLtXoHwFh84HKxv6iy5C+UoO54RPn9M4AJNXcei+uEPD6BJMXs1BarKcX/1O
mPkaDvMFtvde/nYZytdyOMC2c/ZkpktQvo5D3Q+RadpMp6F8PYfS+zI1848e
gvINHHKKb6hv1d0C5Rs6fLkiX8vTNgHKN3LQ6T9+YLXPMnsI39jh/P4XZjJc
O6F8EweeNfwcd7YegvJNHZbUfxHU0zwB5Zs5bGG6dzX+1hko39yhhm3J37Dc
C1C+hcOZI1qHdeUvQfmWDj25yz51TbkM5Vs5fDD4cuLK/StQvrVDgMmsijqh
a1C+jYN21I4pG8yvQ/m2Dn/n7zp/POQGlG/nMLW0Qml11k17AA1Sk7k=
      "]]}, 
    {RGBColor[0.2982919636363636, 0.05744789818181818, 0.5855692545454545], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7E1kpLZesTmwHyrgsKrUaA7r3oNQPodDiPzP
zZlSR6B8AQczrjbPKZFXoHwRh1752H9ajbehfAmHD32LgstcH0D5Mg7Mx/+m
r3G9AeUrODB4Xlv7//U1KF/JYaImj7zTJph5Kg7+a5z2eRlfhvLVHHbNNtul
KnMRytdw8Otcyfcy7AyUr+WQb6Cae+TwMShfx6FN8NHeZzww9+o5zJHp+mht
cQjKN3BQrvouN7EH5j9Dh3ZpJ9m9/DC+kcN+1rmJsgYwvrGDxaawaRnzYXwT
B/93G1ycGmDmmTqwaZ14nN97GMo3c1hmvH7zso0w+80dTLvLLuSsPgrlWzhY
uP6LikuAudfSgbXbtfbEThjfyqF2S5zml10wvrXDzp3396Vkwvg2DtetU6O/
nYOZZ+vguDlz3elPMPvsHDo37X4hd/vwfgDznJMv
      "]]}, 
    {RGBColor[0.30453430909090906`, 0.06561470545454545, 0.6061542363636364], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7M181GcW/rtoDxVwWGdT2yD24DqUz+HQfDV7
90S5x1C+gENLUJS8mudrKF/E4f7uVZVLqz9C+RIOBfW2X/+s+wHlyzh4cKVv
FJ78FcpXcLDpsQ+2uv0dyldycHAstco6+gnKV3FQiNxetb7zC5Sv5vDV2zPm
ZwfMfA0HF7vs/Vo+MPVaDrKPf7g8gfN1HHiEJKy838D4eg5/v647ss3kM5Rv
4DDl4+YvjGdhfEOHBttwZec8mH1GDrMb7BNuWcDca+zgd8bskBbzNyjfxMEi
88kbydMwvqkD+zFepdZWmH/MHOq25TjfNYT539zhUcnUkG/HYXwLh2h5ydwG
x59QvqVDs0v6oYMzYXwrh3m/RfZxXoTxrR1k9QyV41/D+DYOV+/Z/pnwDsa3
dVBn0v204gGMb+dwtOTZdbvjP+0BKq2KRA==
      "]]}, 
    {RGBColor[0.2994155454545454, 0.08502472727272728, 0.6229791818181819], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Lnyyv4eOf/EHirgEPrb5PD05behfA4H5mJt
oVcm56F8AYeCVWo3QtwaoXwRh/ct9X1tO07vh/AlHGJyDGfNDX0G5cs45Gi1
Ozx+/A7KV3DY8ndKyOTNf6B8JQeZTqtCQ9n/UL6Kg/rxSQU71jIdgPDVHCZs
9d99s5cZytdwqA6rO3WykhXK13LwP66w5uA8Nihfx6H8wR+FTmYOKF/PYc+0
g8wtrJxQvoGD249DWRPauaB8Q4ePM9fpb7jHDeUbOUxe/07m+lceKN/YoSPw
/VaHRbxQvokD95llZ3Tk+KB8U4c1Hgm+l6pgfDOH6L3TVzzZB+ObO/zZUnH4
z10Y38LBweXIj13nYXxLBwOJxugbk2F8K4fNpROa8k1gfGuH+AVOvCL7Yfbb
OCTte3Sk2B7Gt3WIULBqnrYX5l47hzW2KyM77HgOAADb1Yrt
      "]]}, 
    {RGBColor[0.2942967818181818, 0.1044347490909091, 0.6398041272727273], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7NdcP1Yzz3aePVTAIc33WUdx0VQon8Ph1QoR
8dpZk/dD+AIOZ1SS83/d3waVF3GY5bcn+Cb3AShfwsHj4e5jbOfvQPkyDt/6
Zniek3oC5Ss4sNQpsL/b+B7KV3LIOpKSVz7/NZSv4uAV1Pja9/JLKF/NIUfd
MnGZ4XMoX8Phc/KGLb97n0H5Wg5uH2aWr34Bk9dxWCyQtuGmHUy/nsMh+/R0
wZ8wvoHDC85EN27GV1C+oUNd78wrWyth8kYOXh8EZTsfv4DyjR1U05f/YL4J
M9/E4YeHptKa5TD7TR08NfyFBA2eQvlmDl2KkxOzVj6G8s0d1N1j3qfJPYLy
LRwyJnEsur/2AZRv6cB0sOJrx4F7UL6Vg9t0pidyRbDws3bo3tCYNznxFpRv
47DR72Clfv0NKN/WgbOyRmTH3mtQvp1DmNNm7U7xq/YA3YiHGA==
      "]]}, 
    {RGBColor[0.28917801818181815`, 0.1238447709090909, 0.6566290727272728], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7PWsFLZU3LtmDxVwiOiPfGzy4iqUz+GgZPv4
dHzcaShfwMH3lcO0HqP9UL6Ig0Lbjr1Lj3RA+RIODdKbjSzSXPdD+DIOJxef
Evl+7xZUXsHBymjjeRcPGF/JoSfPb1ab8QUoX8WhwK2+9bbiZShfzUHjd9x9
/3MwvobDDa3vunbxD6B8LYe/iQsfsr94COXrOIQ0H6pz8X8C5es5lM7+Xz3v
2yMo38Ahfr2YxSKWx1C+oYN2YVhLrR1M3siBJ/DP8Y0nYeYZOzTOkj3JeQ9m
n4mDyPKq6UFz70P5pg72P/vLzn64A+WbOZRP7Njtfe0mlG/ucL/PleOwMSx8
LRw6Xkk8XCh/Ccq3dPi+oXir7DRY+Fo5lCvdDYwTOAzlWzsUHXNpPli+Dcq3
cWiZJ/Hs7YmFUL6tQ4j4p8XWLU3Q8LZzSJQvMdsktWw/ACgSiWA=
      "]]}, 
    {RGBColor[0.28405925454545455`, 0.14325479272727273`, 0.6734540181818183],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Llsvi1gunzEHirgwNS9QVQs8AKUz+HAMdXm
40q9G1C+gENAZ/72quqnUL6Iwx79eqWKtvdQvoSD9YEfOsprP0D5Mg4Pgo51
7Hj2FcpXcHh06cdEZqsfUL6Sg+DVS7NXJ/2C8lUczi1SVolv/A3lqzl4Xn4r
cvD9Hyhfw+HIj7Y/ke1/oXwth2sBkRJ3v8P4Og6uqzSOef6A8fUc/kY/8pI/
CeMbOHS0ilZHLYTxDR1uB5//ztYG4xs5pPSv2CZeBOMbO/jvjY/8nwLjmzio
ib6O/pcI45s6tHW12i5Mg/HNHJKWN876UgzjmztsPSp0bDPcvRYOB6ZHGHxf
AONbOjyMeKJ4YjeMb+VgzZO+r+8KjG/t4HEw9WXNcxjfxuFiw73XCZ9gfFuH
n/73OHi/wPh2Ds2asjO13/y1BwD8N5Lm
      "]]}, 
    {RGBColor[0.2789404909090909, 0.16266481454545456`, 0.6902789636363637], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7N897czcte+EPVTAoeD9E7fmWe+gfA4HT+e/
joY/fkL5Ag5fbJI6Npf+hvJFHORNBWbdCvwB5Us4FD5L9ra5B+PLOMg+W/N4
6uqvUL6Cw6eYZDn2S9+hfCWHKa6Vs1qmwORVHJ6/MRJ6O+kzlK/mwPG8k8+g
4ROUr+HAfae97ujqj1C+lsPb9wEvky/A+DoOX/dYKv66AuPrOZQUSLc/04Lp
N3AousFX3FAN4xs6XI+8vWcvC8w+I4eP92z3ik6A8Y0dPHpOzyxU/wLlmzjM
rDz2IXU5jG/q8LFjx5I//DD3mzks2rNi4iZfGN/cwTPp8GH5BBjfwkF2yjn+
364wvqVDyhn+swycML6VwxkJtpUum2HmWzvs+GKXk+QP49s4bAl6c+H/E5j7
bB3cSldzT66E8e0cZt/e8jFF4LM9AKnJk0U=
      "]]}, 
    {RGBColor[0.27382172727272724`, 0.18207483636363636`, 0.7071039090909091],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7LVuLGN8Yn7DHirg4N1rxTrr6hMon8Phf6jD
rxfrXkP5Ag6HuvdvClwI44s4bBD23J3o/wDKl3DY+SiY7VfqFyhfxmFutIT8
Luv3UL6CQ9Jesxf7D8P4Sg4tgfwzxflgfBUH9cbKfT28n6B8NQfeS5eDrPtg
fA2HJ9O2MR10gZmv5eA1ucPuguZXKF/HYYHHTZH9rN+gfD2H507bXt3oh/EN
HDpenO0V3AzjGzr0Hhf5V7kYxjdyWMP+78/FChjf2OEPr5dRviuMb+KgHNe3
01AIxjd1aGR3MzJ5CLPfzGHhX59TjdtgfHOHCI6EbVsmw/gWDg6HequlKmF8
S4fozPcvCtJgfCuHlYLzdqZHwfjWDoZPGeyCQmB8G4fepLylbsEwvq3D284D
Ek1hML6dQ6XC1jj12K/2AJpSido=
      "]]}, 
    {RGBColor[0.26870296363636365`, 0.20148485818181816`, 0.7239288545454545],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7DlWLvz7IOu9PVTAYc5p5b8rlD5A+RwODXrq
U9cWvoLyBRz47zPrVLh+hPJFHM5wzPZxXP0Eypdw6GaeJnVwI0y9jENbfJPB
6k0PoXwFhxQNaaud4S+gfCWHulcLT3zc+BzKV3GwOmh//MK+p1C+msPJPUWN
f/geQ/kaDvcqc7rq8mHmaTmUmz7+UnLlHpSv4zDp7p0jrHvvQPl6Dkcenli5
SOg2lG/gYHkzIsF3+y0o39DhDOfzEvs/N6F8IwcV2aN6hi9uQPnGDqeWnFr9
WP46lG/ioF96LFxE+SqUb+rQu061VMHoMpRv5rAiW3HOvxUXoXxzB/HuxWKd
0y5A+RYOvDt+uMq/OA/lWzpc8n+sJWcA41s5fN8pVBm65xyUb+3wa2/DY70o
GN/GQdTVaaPE37NQvq3Du3lHLrCsgfHtHHr4HE4+LDlrDwC/Tovz
      "]]}, 
    {RGBColor[0.2635842, 0.22089488000000002`, 0.7407538], PointSize[
     0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7M8V3IutrnhgDxVwqI7d9ep83iMon8PBWy1O
e3csjC/gcCl+5y2ppMdQvohDkec043dVL6B8CQfpYNYb32+/g/JlHFoWb7q8
Uf8DlK/g4JzQJJy46ROUr+QQfjyOV/L7ZyhfxYGt5ZVznMdXKF/NoXAe879Z
RTC+hoP4len/lv6A8bUcut4pzXZU+Abl6zj45DTuMQuB8fUcLtrXrF9QBuMb
OLBpydZMmQbjGzrorjXvEFgN4xs5nMyu6GbZD+MbO6Sk6y78dAHGN3G455+1
mu0ZjG/qUG82xUbsH4xv5mAvbfTsqMx3KN/c4UbxHq4iJxjfwoH5mdmHLfkw
vqXDm+7zz/UWwfhWDlNXeh3QvQ7jWzscOeSzfCn3DyjfxsGQsefkclsY39bh
AtudVUo5ML6dQ9ePlX5bp/2wBwBOJov8
      "]]}, 
    {RGBColor[0.25846543636363634`, 0.24030490181818182`, 0.7575787454545455],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7L9aZr2743vYHirgoDZ/T5bh1ztQPoeDygbJ
4jnXr0D5Ag6Xli589lz/FJQv4hA0N/GE/K6LUL6EA8PJy1lbFgbth/BlHJp9
LbT+8q2Cyis4/JywcY2o5DKovJLDj0e6xjK/a6DyKg5na9wK1pZMhvLVHDwW
bjyxTLgfytdw6PGfZl2yZgqUr+WwIOHe71MX/aB8HYcftwvfJGbUQs3Xc3jA
Z95neGQKlG/gwDDBpaDQfyGUb+iwabkS38XTK6B8I4cbk5bv5ny4Dso3dkjw
ti7hWLMByjdxmL06oGibwnoo39QheXMz+9mJMP+YOVxx/xqyclI/lG/usIi9
RzZvxwyo+ywcTvHOetZquQnKt3TwmbHG8Gv6fijfyuHbknVf2iqOQfnWDr0T
+JP8jc5C+TYOOz86RXc+gYW3rQOL5LQd5xWuQvl2Dh+vBB9MDL1hDwD17Y19

      "]]}, 
    {RGBColor[0.25334667272727274`, 0.25971492363636367`, 0.7744036909090909],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7GV2RXJ/WHTNHirg0N9b2/J592Uon8PBW3SP
tJjjKShfwGGaRlWGlOYlKF/E4ab0Hslt+WehfAmHg+cW7ZWcchHKl3EwqTq9
q3/bYihfwaFCuvuq9/oV+yF8JQc9+acC9U4HoHwVB4nPrkeymE9C+WoOaq+9
3zz7fhHK13B4cf2x3N/3V6F8LYcKcbuM7OKbUL6OQ+vqKdVZ525D+XoObpMW
F8/tvAflGzjUZy08MDfiAZRv6LBSR9Vgh8VDKN/I4alRR/jXfTC+scPMg53N
ZjKPoHwTh1pji12vEmF8U4c3v1ZXqm+C8c0c8v1DXdskHkP55g67TOSVLsyF
8S0cqitnvFW0fwLlWzrwcVVdavgC41s53Go7XVS7+SmUb+3wSvzui7tFz6B8
G4cdijNF5XSfQ/m2Dp5BNm9tHsD4dg62qrwnH/S82A8A9ryUIg==
      "]]}, 
    {RGBColor[0.24822790909090908`, 0.27912494545454547`, 0.7912286363636364],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7KdZuej4xR6xhwo4OJt/fCqisgnK53C4cubs
Uq7yg1C+gENBdr/W08NnoHwRh2Oxzaz/Kh5B+RIOUQwaJe17X0D5Mg4PXH02
LHd4DeUrOOw3Z3om3AzjKznEn32/nOXTSyhfxaHs6ES94jV3oHw1B52Xnf39
O+9D+RoOd66treY58xDK13IQuSlituXcYyhfx2HbUcFZGyRgfD2HXcvzzwTf
gKk3cCh2nVHRtvsBlG/o4LhI/pWpB4xv5MB5V3uObSyMb+zAm/qPf+FjGN/E
4fiP7i9Kq2HmmTp8+zpnh+oEmP/NHOZl6t+fnQ+z39xh3+5vPH/snkD5Fg4u
xr/MZH/B+JYOk1t3/vBa9RTKt3I4v/3uLrawZ1C+tUOXyd+DO5meQ/k2DpsC
9yWzbITxbR3ab+W9TE6Ahbedw90Peam7+F/aAwAVB46L
      "]]}, 
    {RGBColor[0.24310914545454546`, 0.29853496727272727`, 0.8080535818181818],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7D36z10z2PDIHirgEHfQtkf1K4zP4bDropLm
mqBnUL6AQ0Zx8pXdIg+gfBGHfUIM9wr8YfISDlt8dvhe4XsD5cs4KO5b437g
wAcoX8FB6aH284RJH6F8JYcVbFKF25s+QfkqDqVbf506KvQZyldzUNjB2Mc5
H8bXcDBZnJA15wWMr+Ug7XQgh0XrC5Sv43BQL782yA7G13Ng2d/iU+8H4xs4
nNz+oO2yN4xv6MBSoeSm4wLjGzlInSsp8dWD8Y0dfPwrZfvFYXwTB9v4vt0h
v2D2mzr0des9/XQbxjdzKPWQfi+wC8Y3d5CqTJrgMQPGt3BYl7Brxd0KGN/S
QTMmfbJeAoxv5TBhRW8TUyCMb+0w8/O3tz98YHwbh+oAW4WjwTC+rcPdmerv
pVJgfDsHx2K51TI1n+0BMIOGWQ==
      "]]}, 
    {RGBColor[0.23799038181818183`, 0.31794498909090907`, 0.8248785272727273],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Hut5mq1b31mDxVwcDBu+L2pC8bncNAPZFMs
zX0B5Qs4GC272XF61XsoX8Th7tPqHRUrHkH5Eg7cLBEq+zo/QPkyDt+6r527
9+E2lK/gsCOivNrpx3UoX8lh92OfKV+Xw+RVHDZlR7C/2PEEyldz4JeXkW+4
/BjK13BY8+qS8Nn451C+lkMQF8OSii8voXwdhz0L1f+0ZbyF8vUc9qxi6drl
DHOPgcM19zaH/KqPUL6hwwI9i++z3T9B+UYO6usV+fX2w/jGDqs7qxI//oXx
TRw+691fKS/+Gco3dXAN1Gf+pwjjmznIfnn900wbxjd3uJ3z3OimDYxv4TDz
EEMqVzSMb+lQ9OydxJtWGN/K4cdfn8k7d8D41g4520qe73kD49s4dLVXXc+T
/gLl2zqk2kv8jXeA8e0cNBV79zlGfrEHAMfTjcA=
      "]]}, 
    {RGBColor[0.23713623636363637`, 0.3398033818181818, 0.838374309090909], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7PdYsuu8T71vDxVwiLr/U/ragQdQPofD4vBL
s4NKYPICDjrzQ6ftPnsPyhdx4Jq17/uuexehfAmHBQ7f1rYF74LyZRwCjp7h
yss9COUrOOxNZbX+dH87lK/k8M2zPMzF4yiUr+Ige1KCZ+riQ1C+msOEGZc+
1LfC+BoOMnlBVj7LdkD5Wg5pC7nkdE5sg/J1HH4pRGQfkdkC5es53C2YdrH3
Gky9gYOd3UllIb09UL6hw/e5PmY3g2DuM3LIXpBUq3f6MJRv7LBM43rDkcJj
UL6Jw8LetuX+5SegfFMHs8urL0fXnYLyzRx2X9BMjyo6A+WbO8zKq3RfPecc
lG/hsL7ymtXusgtQvqXDul+N3fkbYOFn5cDh/fX7xg+XoHxrBw63jRczTa5A
+TYOdytiWrmqrkL5tg6390VoaB++BuXbOWx44/hKXfCGPQArN4nJ
      "]]}, 
    {RGBColor[0.24054670909090908`, 0.36411014545454545`, 0.8485409272727272],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7E8FHZmjtui6PVTAIbfzq0L0x3tQPofDY5NX
TSqrYXwBh9onn9qb1z2A8kUcXm3OskkWfQLlSzg81V08ac3rd1C+jEMdb94q
bZFvUL6CwybHDn2+dEYHCF/JofygvLe5FCuUr+JwpOrtjv4cDihfzWHa09bw
Y2+5oHwNh0frtfluXeOB8rUcdvmdV19rywfl6zi4GfzwjN/BD+XrOVyexT2F
q1UAyjdwEKpJmnQ0VRDKN3RYZC/1+riWEJRv5HA6cc2RhwdgfGOHSn6GvGxJ
YSjfxCFmZvNEj1AY39ShsentvthGGN/MQUhlzaX5i2F8c4cHro8vLdsO41s4
hEjm//u5E8a3dKjUCpS+tBLGt3IILA99o9UN41s77DdTUJyYDOPbOPCef5X8
zRzGt3XYs27+6fXcML6dg/+8q5PPPhByAABBAnre
      "]]}, 
    {RGBColor[0.24395718181818182`, 0.3884169090909091, 0.8587075454545454], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7G0uPXq0Z9Ere6iAg/BO03IF2SdQPofDDk6x
vYv23oPyBRzWvOhmm/RsK5QvAuTf3FnyfxuUL+Gw5nRyT0H8cShfxmGGuxOD
YsUpKF/BIfO22/6s5rNQvpKDTXbp0TdCF6B8FYc6R63ma50XoXw1Bz7nkBcr
2i5B+RoOly60L/xuA+NrOcy5a6V14OJlKF/HIUc066iI0lUoX8+hs2RnkPvF
a1C+gcME7Zjr2buvQ/mGDtcq+fvZJt2A8o0c2voy7FtYbkL5xg4y4Vl+RqEw
vonDnJ3frNdkw/imDg0aiu2O8TC+mQOX63TrHZYwvrmD2KpVOxxEYXwLh4IZ
0zJsuGB8S4fFfRflFmnC+FYOclry3LWlML61g9Ajo4TQxzC+jUPBypIbfqm3
oHxbB6Ep1oXr3sP4dg5RQqWaL6tu2wMA5BeC2A==
      "]]}, 
    {RGBColor[0.24736765454545454`, 0.41272367272727273`, 0.8688741636363636],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7It69W6bnPpoDxVwOOD82/tf2Qcon8OB8c/s
De9efILyBRyiwmtiU4x+QvkiDpueVVfk//kD5Us4MO213rdY5R+UL+OwZO1p
4UXX/kP5Cg6RFod/J5oxOkD4Sg6H82JCHy1khvJVHMLser17DrFC+WoO/5wu
qL7x54DyNRyUmRp+aJ/kgvK1HEJOf3omZsgL5es4KEuUOD7p4oPy9Rym2VvV
Lgvih/INHOpt9W61n4TxDR0SYhkPTBcTgPKNHHa4rFNZ7gzjGztcmbnwWmkG
jG/icPSMWMvtbhjf1OHO3/JWxrUwvpmD3ZWAFIWLML65g+T8K4xiP2F8C4cA
+3yvOlVBKN/SwXP69DbxYBjfykGm+PP0DbUwvrWDu9iEKq+FML6Ng+1+BfaL
u2F8W4cv6p1XDpyB8e0c4jOe/V59RdABAOfQeas=
      "]]}, 
    {RGBColor[0.25077812727272725`, 0.43703043636363637`, 0.8790407818181818],
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7KfY7PM4e+aBPVTAwa6gOER3+gUon8MhwyMu
tE/9IpQv4KAX8amm5MtVKF/EIWj3dKVsYRhfwkGT05hTSuculC/j0PZPzlPF
+RaUr+CQ/WtR7LZ/d6B8JYcWLe0zjAowvoqD0Y55PSILYHw1hxv8j741JMDM
03CI89LaP/8PjK/lIBYvcOdPzj0oX8fhhhc716R6GF/PIeLqWp7ARhjfwIFN
fotU9yEY39DBemvI19uK96F8I4fdN6c94VoD4xs7fFALOdUoBwsfE4dN62L2
b66C8U0dpm/vZat8B+ObOdS+Kp9+tuYhlG/u8HzWdZ4ipUdQvoWDywUOo9tX
YXxLh/5onY5t3Y+hfCuHhLV21xQsn0D51g6OQe5WxddhfBsHUfUoyeXJT6F8
W4cr3eoeh+7C+HYOD0+/uu/s/sweABLjhZw=
      "]]}, 
    {RGBColor[0.2541886, 0.4613372, 0.8892074], PointSize[
     0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7PO8JzLuVPtoDxVw2Ob29Vts9Dcon8PB+MyE
25XNX6B8AYejfzf+9fT+DuWLOMS1GGhMP/4bypdw2Luu5PoVPRhfxuHBvYc/
P7v+g/IVHB5HSXbev/ELyldyeKR5sJ899Q+Ur+IgaPgwoKgSpl7NgX3dRXsm
6/9QvoaDgzvL23c6DA4QvpaDj796sacKjK/j8Ezzx1FnQxhfz+E/ux1j1wOY
fgMHzS8XtEvSYHxDBw6ZS8c0NsLsM3LgWpMsy8EJ4xs77BBrUxIO+wvlmzg8
z1H/rL0b5l5ThzsWIbVqxjC+mQP77fk2Iedg/jd3YOTke/CpG8a3cOC/1JLw
NwfGt3TgM5k+4UMmjG/lsJS9y1+xBsa3dtj3+iVnxFwY38ZBN/wV64mTML6t
w7ng5H13/sH4dg5FgiuMf1j9sQcAECyHBA==
      "]]}, 
    {RGBColor[0.2575990727272727, 0.48564396363636364`, 0.8993740181818182], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Nf8KYn/XfHOHirgoHLvROz/D9ehfA4HcY+a
3J1Cl6B8AQcjz0Tz+TZXoHwRh0MLr9xeeBMmL+EQpfXQO/wYTL+Mw9abCSsP
bbgG5Ss4CJytXKVtdxvKV3JY8dWUo9XoHpSv4rA4tG/h6RUwvppDjcldPo+l
96F8DYel06J272J9AOVrOYjw751XYAXj6zjkumgu0psK4+s5+JyMPBot8BDK
N3DYrVKsU1EB4xs6KOy3t5m0HsY3cqhdZ1Qpvw/GN3YQFNTukd4C45s4pLvU
XRJaBeObOsQrTFRKXALjmzk0uvj2aKyB8c0dZnBwzGU9DONbOGjf4uBoeAfj
WzrsuFXyL0j3EZRv5WC6VpqjsgrGt3a48nLaxsdnYHwbh5NlWs+XyTyG8m0d
jlte4+dPgfHtHPaZVGkpLnhsDwD8lIRh
      "]]}, 
    {RGBColor[0.26100954545454547`, 0.5099507272727273, 0.9095406363636364], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7F1aH/Ke0ri4Hyrg8ECwMeym6xUon8NBaaKu
klvPNihfwMHNS6l+1YYD9hC+iIN0wm9RlWuHoHwJB3vvsLppQeehfBkHlerL
h57OuQDlKzi02uzi8Sk7DOUrOVjd1Du/KOMGlK/iUBD15uPxqCtQvpoD37yQ
N6/VbkL5Gg4pIj5tehLXoHwthzMmP8pz58D4Og6v9GT/3Xx7CcrXc7C6dan2
pzDMfgOHdY/u57i1nYDyDR0c1wSc2tN6BMo3cvhS3bybQfoglG/swB28+F+b
2n4o38ThibtN1axne6B8U4fNN4TPub6E8c0cBPu6In7I7YPyzR2ctl8q8m2B
hZeFw6tFq9oznWHhZemwl6/qqs1nWHhYObDMrZynoHkUyrd2cHLP4a86DePb
OJxyV9J7cxHGt3Vo7am8f8INxrdzCPo2tSPQ5Ig9APljh+I=
      "]]}, 
    {RGBColor[0.26442001818181815`, 0.5342574909090909, 0.9197072545454545], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7JdE56dP4Tm3HyrgYLbjI2fzgptQPocDy7IT
6m7ft0P5Ag4OizM32DddsYfwRRzUnni/iqi9B+VLOMge6PjLNPsplC/jkBfk
2nUj+hmUr+Dwt+7iFO4bH6B8JYe8ZNUnUoxvoXwVB8vaVZqNTK+hfDWH3Ji9
+eeOwfRrONRFTvt8+9wTKF/LoSV9mtEzmcdQvo5Dh0jp2/TAR1C+nsPGg7NT
+Hc+hPINHD5si5Ta6grjGzqkcloJfrnxAMo3cvhhMPfokTYY39iBdcetifdC
YHwThzkmF79eNoHxTR2+3LOfayQH45s5sO2/mTuHEcY3d6jZ0Gwruek+lG/h
EPiXpTbKBca3dJh1MeHn2qOw8LNyuOvta3PHEca3dmBlz2YrP3gXyrdxUOKr
9n7sBuPbOtx+eYFj16U7UL6dw5tZf+x2pd6xBwDs5Iv8
      "]]}, 
    {RGBColor[0.2678304909090909, 0.5585642545454546, 0.9298738727272727], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7K/opPZfU3ppDxVwcPETcZGu+wzlczhEaJj9
+SH7DcoXcJhyLH6P+sKvUL6Iw4Uq3ie+C19A+RIOExbcfZW6/D2UL+Nw7ZeU
W+2lO1C+goOyV5pCwJ+7UL6Sw20fta62pTC+ikNx1INfs/ffh/LVHNYonuxo
v/0EytdwsLF3fiu5GWaflsPf3xMy7s14A+XrODQznA14dfsdlK/noMc4ybEk
8wOUb+Cwb9+tXSs8P0L5hg5Sds+uufF+gvKNHH7IaDxp2QzjGzs4+klV31GB
hYeJg/6FVda782F8U4cZdw+s8e+G8c0cmJN52l1aYXxzB6OPHIWCiTC+hcOn
XW37vmvC+JYOTbw31219DLPPykGh/bLq/0kwvrXD7TdqjNMsYHwbh41fFp8U
ugpzv63DBTbeTWfSYXw7BznvK49NP3ywBwA64Y5y
      "]]}, 
    {RGBColor[0.27124096363636363`, 0.5828710181818182, 0.9400404909090909], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7O26TZX3W920hwo4fJjX+PDx2ydQPofDd4+Y
J39/vITyBRw+CG5f+ortM5Qv4iBTvjd6kimML+EwfVqLQUPgVyhfxmHdlg/u
d3d+gfIVHP4HGlvedf0O5Ss5TDQ0uc7pAOOrOEw9xpe63foHlK/mcM8tSt98
D0xew+G6Bsd8exmYvJYDq8Aro0J9GF/HoYVv0+9HhTC+nkPv8VtT1BfD+AYO
Z51eRp0/CeMbOjAvWLbd7hqMb+SgsOKpYMA5GN/YgSv0rILNThjfxOHoc0sW
prkwvqmDtvpZ4+pGGN/MwXVGKNfKLBjf3MFmw3TfXdEwvoXDpZb9PMtCYXxL
hwffs/2uhMP4Vg6r0z+nGifA+NYORVx/Pf9kw/g2DiZiPFfXVcD4tg6HNf5U
T22B8e0csmZfMTrb98MeALSrjK4=
      "]]}, 
    {RGBColor[0.27465143636363637`, 0.6071777818181818, 0.9502071090909091], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7KMOXuRfM++nPVTAYUGQxauMPV+hfA6HCevE
vrj9egflCzg8Z94hdJX9A5Qv4rDQNcLy0z6YvISDUk4Ry/Upr6B8GYeMmmsX
+U9/g/IVHK4E9rGt9oDZp+RQqePQmpT7G8pXcbh03iPCUesPlK/mwHRv/lrG
rP9QvoaDBRfzp3gbGF/L4VGt74H12TC+jsNkTumXr1pgfD2HMwzX64IuwvgG
Dvs+/3My42VwgPANHTLle3qFtGB8IwcG3+VJdt4wvrHD7LuT/57JhPFNHBT7
dHh39sL4pg7rWrfHPN8C45s53J73+mf+Ixjf3OFZy81Hn4QZoXwLhzMuxezH
3GF8Swfbef5z26tgfCuHC1Hxk91XwfjWDk8/CP45chXGt3G4O9f34Is/ML6t
g/l0qSYBBSYo387hdHZo7AN7JgcA/JWAdg==
      "]]}, 
    {RGBColor[0.2780619090909091, 0.6314845454545455, 0.9603737272727273], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7A/sDnyw6chme6iAQ5jJ1IQPAQegfA6HGSW7
7il77twP4Qs4mOgXz7Zq2Q3lizgsmKwuf/PfNihfwmGejI6aqMhxqH4Zhy+V
NTM2TzgN5Ss4POlgW8xlfg3KV3LYvuDBrx2ZV6F8FYeLFad3eWXcgvLVHOyz
8tZPq78P5Ws4MFtcua/49CGUr+VgmG/H2aj+GMrXcZgdduXz33oYX89hllzv
L907ML6Bg7b2k+szw59A+YYOjn9vfQt8BuMbOUhsm+erF/4Uyjd2qJ6cv1l/
D4xv4nB/p66ojPAzKN/U4WNQ3nuXFBjfzOHZ1had9m0wvrmDT8v3LfP5n0P5
Fg4Hzv1/8agIxrd04PkfPV3wAYxv5ZAnOVEwLvwFlG/t0MUQtmbzDRjfxkH8
bSnj/eSXUL6tw/HcW8+av8P4dg6vBP7Fr5z4yh4ATiCPAw==
      "]]}, 
    {RGBColor[0.2814723818181818, 0.6557913090909091, 0.9705403454545455], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Bd18FYd3PjZHirgUHlToC/tB4zP4XBy3/ka
+Y3foHwBB5HtL80Yrn2H8kUcYtKOb5vT/RbKl3DY1LPy8KtZML6MQ1764T++
5z5C+QoOe8I3ruBV/wrlKzmIRWkdm/LzE5Sv4uB0PcU8Q+IDlK/mMGfxmjdl
Cu+hfA2Hxtc2ZrzzX0P5Wg61KsdijZpfQPk6DusZn/39/u8JlK/ncGrWmstX
nz2E8g0cdqw77Jr97T6Ub+jwRJQzjif0HpRv5HBl7c0tZ9tgfGMH9RCh+mvb
YOpNHB44+xS93fQAyjd12LrtgmheC8x8M4d5MekTvHQeQfnmDns9krm+98P4
Fg6lyRNmNa6E8S0drFT3COc0wvhWDovC272P6cH41g4nbgiKFp6GmW/jMOtu
Xt3PHBjf1qHs/IFDLAowvp1DOWOH6t2XD+wBcdCQTw==
      "]]}, 
    {RGBColor[0.30903787272727273`, 0.6761999272727273, 0.9744795090909091], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Hc9O8jx5s45e6iAQ8Pm+QcfProM5XM4lG94
v0j0wREoX8Bhruuq9XlvDu2H8EUcmH7dedDvfwvKl3B46S27xO3fKyhfxiGv
+96sO9ZPoHwFh7dektl1i19A+UoOKfVdjJ8LH0L5Kg5JPI9WnVCHyas5PLZ2
N+CsfwrlazhImMsF73z4EsrXcsh4dbs1u/U1lK/jsGhvkP/dZ2+gfD2HmNdn
bR/7vYXyDRyq1uTvt/0D4xs6ZN/416Oz+B2Ub+SwdK6kRUzLeyjf2GGL5prI
dfofoHwTh8ZlV2+zroTxTR36cp+/OKz1Eco3c7ikl7748jYY39xhU+J7vnLn
T1C+hcNjthhn9+MwvqWDklexbbzFZyjfymHd/aIbBpNgfGuH7jMSp0uvwPg2
DrzVgXc+MH6B8m0dZKc9eO4uB+PbOXxMWJbgqftlPwBt/57l
      "]]}, 
    {RGBColor[0.34465503636363637`, 0.6953091636363636, 0.9763428545454546], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7IO0I7bEnb66HyrgcCju0r0jljA+h0NOrJbd
1omPoXwBB8PZ/nzeh59B+SIO2pd/Ms2seALlSzj4r+Kz88t+COXLODjHMzwL
2PsCyldw+JF4aF16Noyv5OB3STtE4dYnKF/F4a+NzofL679A+WoO1/LjuZ1z
fkL5Gg4n5/BLClX+gvK1HALPMD9UkPkN5es4uBu4zTWIh8nrOTz/8a7ASwTG
N3CY4bCH+VQ3zDxDhwvFllpu0jC+kUPWtxzX3JQfUL6xg8l05Zm2C79D+SYO
Ly+eLPxx+BuUb+rA4bvhse67r1C+mcOvNZWFJYowvrmDcfKq6w8LYP6xcDD9
805S4/FnKN/S4c/DtnVidTC+lUPe/Z1/N9rD+NYOaivvKRorw/g2Dp6bbwgI
K8H4tg7THy0slTGD8e0cHmX+cJ0R+Xk/AArFmI8=
      "]]}, 
    {RGBColor[0.3802722, 0.7144184, 0.9782062], PointSize[
     0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7BkuBmYtlUnZDxVwkJvTGLCv6wiUz+FwxXzW
kdNMR6F8AYdbvBPMN727B+WLOIQd33Jl+v9HUL6Ew6J8oYjdrQ+hfBmHxl7p
nrzaa1C+gkOb1veu1p4TUL6Sw0tf1y1qy05C+SoOxs4qntKpF6B8NYeNax9M
naR1CcrXcPA6I/dn7UyYeVoOBo4bP3jPvQXl6zhcLZjUvCQAZr+eQ+f+DaXp
ek+gfAOHN5PqnjQFP4fyDR2yRbk1lpW8hPKNHObV/it1sXwN5Rs7uG8SuLEx
6g2Ub+JQpi1mUmX0Fso3dai5vHFB3U4Y38whfpKzR4rQOyjf3GHFAm6BNHsY
38Lh6Bo5nZN+ML6lw8b0H9LX3WF8K4flJWzidy1gfGuH1eeexGbowvg2Dq9O
786T1ofxbR0m7Co8ut4JxrdzSFnK/W5m5rv9AHCPlrc=
      "]]}, 
    {RGBColor[0.41588936363636364`, 0.7335276363636364, 0.9800695454545455], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Ksmv5nZ1nHNHirgcL7l9Mo5DBehfA6HiyEP
Q45ePQvlCziofJo1rdhpC5Qv4qBi82q6ANdOKF/CYdOZbXP2PT4I5cs41Mjv
uL7B9DCUr+DQIC3+/6zgnv0QvpLDlZDZ6sXBZ6F8FYcdrCKX50o+hPLVHKo6
xHZNF34J5Ws4bFOI3PTV7BOUr+UgEco7+eG7r1C+joMdh5/WVK4fUL6eQ83c
UytXvv0O5Rs4VDkqz8nug/ENHRil5zYdu/INyjdyWBjAJuBsCeMbO6hw+FZW
psHMN3EoWqPl83DiFyjf1KF18f3135Z8hvLNHDYKbny64CDMfeYOh++uZf7z
+iOUb+EQyLnre5oJjG/pEPhlSt/JOR+gfCsHH3ev4/NUYHxrh+9u3OVfOt9D
+TYOhZ8fPuJ//w7Kt3U4d121XCcPxrdzYF2WrO/F9G4/AIYBlg8=
      "]]}, 
    {RGBColor[0.4515065272727273, 0.7526368727272728, 0.9819328909090909], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Jdt++Q6r2aPPVTA4cKGOiZr401QPodD5KGc
7Y4dF6B8AQeHG3OEY7MeQPkiDiEGV4NbO19A+RIOmild32cIw/gyDj3TXp4I
OPYByldw8KxvfiN48SOUr+RgLXxk50LHz1C+ioOiDgsD7yMYX83BQrTQwFD4
K5Sv4dDh+eCVnw2Mr+UQ0bFlWo89jK/jcFvepPPUvS9Qvp6D6+rEp5WpML6B
g1KL9UsWbhjf0GFTbnjX29sw+4wcLPVn72p+AOMbO5g94HI0l4CpN3H4+GN9
pnwrjG/qoDvB52yjOMx+M4fr1XvVrY/A+OYO1xZUGdyo/AblWzhcjvS3zNL/
DuVbOjyt/ftm2h0Y38qB0bZ6HW/dDyjf2uFWzqPJVwR+Qvk2DncUGOUmTYbx
bR3+XlJ678r6C8q3cwiLzX45O/WXPQDk94hf
      "]]}, 
    {RGBColor[0.4871236909090909, 0.7717461090909091, 0.9837962363636363], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Be8j0w8KdltDxVw4OF321ww8fl+CJfD4T6H
/7w7ke+gfAGHFzO2Cj9S+Ablizgcjqx5rG8G40s4WDcc73505AeUL+PwODf5
7+Gcn1C+gkPzsl4/Gy2YvJLD4it7FtxUhMmrOLhJaFeduAjjqzksUT/3LZ79
N5Sv4dDLmPB+yjwYX8uBY32w99neP1C+jsM27Z/Onf9gfD0HMWeu9Kv6f6F8
A4fbdS7LqzVhfEOHV2Vuy5apwfhGDr/K/bgVlWF8Ywdr/5nOP/RgfBOHezYt
u1+6wvimDhJvlrBq58L4Zg5b/+zUezsHxjd3mBXF5ux6Aca3cAiO2sV59Q+M
b+kQISDFai7zD8q3cgjnm6a0RRvGt3aYaO8QO0cXxrdx+M6sXcOgBuPbOggV
xTickoDx7RxKGf+8mMXxbz8Aq8KUwQ==
      "]]}, 
    {RGBColor[0.5227408545454546, 0.7908553454545455, 0.9856595818181818], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7F+8/vTd5dR2e6iAg4jO01/9L2dC+RwOO0WW
b/t/6MJ+CF/AgfX28SlTvl6F8kUcLvw1f5G3YjmUL+FgX+Lm4191FKpfxuH0
xMhFr/JOQPkKDlJr+mXVa65C+UoON744/vhqchvKV3EIyUu8zfX5DpSv5lB2
8Hqq77N7UL6Gg4yjWxKj930oX8vhropg4i44X8eh3qt4b7cvTL2eQ71s67E4
37tQvoGDu6z3NL3XMPMNHeL/dLfPbIbxjRx29X7a9uktzD3GDkesWl+ZCMP4
Jg4bD9fHt0vdgvJNHb7ceHqXT+8mlG/m8Oqw3eqOxBtQvrlDxHb7Sxv2X4fy
LRxOW/wxuusB41s6HG2rjH395RqUb+VQbf17od8uGN/a4YT0l4BFvTC+jUPs
aTedlnQY39Yh9n9XQLIzjG/nIDHTYEOf/DV7AFLgkV0=
      "]]}, 
    {RGBColor[0.5583580181818182, 0.8099645818181818, 0.9875229272727273], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7D+o2r9O7HloDxVwmPb8QcM69sdQPofDkj0v
Ns8IfA3lCzi0Jeznf272FMoXcVh3dpLs9u9PoHwJh+6SN9oHFsP0yzi0vWy0
qPF4DuUrODyYtPyHRiaMr+QgKFBUWFryAMpXcQhpzL9jdB/mHjWHjE3Ooom+
MHkNh98WU3jVXGHyWg5PPJh2PdkA4+s4pAkx3sxcCbNfzyG5ckW0ewzMvQYO
ry/l35FsgNlv6LBxxlS5lYYvoXwjB3XWL1/Oc8D8a+zALF7soL31DZRv4vDz
fluch887KN/U4QaHdsiV6vdQvpnDGWcNwXyZD1C+ucOtj3HTZSxgfAuH2KeH
309Vg/EtHXY6cLTP/A/Tb+Vw13nyneidML61g86bc9VNk2B8G4ezTkqZSlNg
fFsH/fBzhTZ7YHw7h41RloJXmD7YAwCmzIn1
      "]]}, 
    {RGBColor[0.5939751818181818, 0.8290738181818182, 0.9893862727272728], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Hees5tcFPXBHirgcKDb/PHvJ8+hfA4HgTj1
Y3NWv4TyBRysNghGHngBkxdxODnnPmfS1UdQvoTD5PvO4Yxv7kD5Mg7HVU8s
UFp2A8pXcIjoNQp2m3kdyldyCAt34j3sD+OrOMwuLvX+dBKmXs1h8QqZ8P4L
N6F8DQe+n3OKrwjBzNdycEzffWWz/j0oX8dh0oow7ZnSD6B8PQdL2Zmezhth
fAMHsY8Nt+VEH0L5hg6n51/K8jCE8Y0cFi+VieLXgvGNHaLWfLX4+h2m38Qh
e9u/illrYHxTh6tfCjXkgmF8Mwfeif01W/7fh/LNHSbO3LDNvB7Gt3A4dPGE
VIgFjG/pwPeifMk2PRjfyiEp4KDwszgY39rBtPx6dcc+GN/G4aHcGm5GJZh9
tg4R0zS/Hi+G8e0c+PdoXmq59MAeAGS1ikg=
      "]]}, 
    {RGBColor[0.6295923454545455, 0.8481830545454545, 0.9912496181818182], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7C1bV/617ThmDxVwYFRaqsR758R+CJfDQcTi
T+/dxGVQvoDDBK0ZlgrbjkDVizjMu6fA1GL7CMqXcHBW840+kf8YypdxWLNg
XszqnA9QvoJDwYn3OUIcn6B8JYdFjJeC7gXC+CoOn77nmmiu+Ajlqzn4HM1L
WxvwDsrXcAizm+wYIvoKytdyMH25ZLLYjGdQvo5Dzp6U4BnNT6B8PYcnG579
cNOCucfAIVeBuSNWDeZeQ4fbLZlZrTkPoXwjh++rqjgq9z6A8o0dds2O0F2o
DeObODApbWKv4LkP5Zs61J1b/4p73V0o38zh7Zy5UpGSd6B8cwf+L++mzU27
BeVbONTu1UjeO+8GlG/pENXN80j88TUo38phqvKT6UreV6F8awfL2z0fL7y+
DOXbOBjwdy50OX0Jyrd1qPS5LmTz4iKUb+cww+FviorNRXsArriF7A==
      "]]}, 
    {RGBColor[0.6652095090909091, 0.8672922909090909, 0.9931129636363636], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7GPM/n3uVnhpDxVw0Dgq9F118yMon8NhTWjm
mtgV16F8AYeQH9OrDytdgPJFHM6oszD3vtoF5Us4cLDqsYZMPbEfwpdxEK3T
jMtROADlKzhMlZ3G5hR0GcpXcnizdbULf+QVKF/FoSbq1+dnU65B+WoODt/z
33sL3oXyNRwS1uTGrmJ4COVrOSxj1HfakP4Eytdx8Nhy4dO3M8+gfD2Hq9Ee
mt/VXkL5Bg56Zd/Nt+x8BeUbOiyIPtB1/OVrKN/IIbG376nohDdQvrFDcUXE
+bM/YHwTBwtt4+hLdm+hfFMH41NJQUcmwvhmDovlxLtLmd5B+eYOn+R1LN/N
gvEtHLYtrfq3KPA9lG/p4Gx9MS2W+wOUb+XwMleHWSYHxrd2CPuy5dKWIzC+
jcNK/QeRdwU/Qvm2DtE+VfNvB8H4dg6Vz5yOFXV83A8AEh+UiQ==
      "]]}, 
    {RGBColor[0.7008266727272727, 0.8864015272727273, 0.9949763090909091], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7L2OcPYK3Dm5HyrgcKH6j3PH95VQPofDvfK8
OXLz9kD5Ag5MXRGbjJWOQfkiDs+W/ErYrHMGypdwWKQfctDb4QKUL+NwxP/g
piu/X0L5Cg4JBlp/GDo/QvlKDrbLpD9dF/8C5as4/E5WW8Qj+BXKV3N4H8PB
PrvmB5Sv4eAQbnQwVhvG13L48Xq+6PoJML6Og7XzI60rn2F8PYd9r+08F137
CeUbOKxIMlPL2P0Lyjd02KHknR8/6zeUb+SQzNY8s6TsD5Rv7JD/4Wv4Ra+/
UL6Jg5KPk8Ma5X9QvqnD+X7ppNrvML6ZQ6fxxwOXj/+H8s0deIwtDmm6MRyA
8C0cVqRelupeCONbOiztVOX78RnGt3JQbMla0mbLCOVbO3zzKQiZVAfj2zic
YOz/m70Dxrd1YNn00DD9DYxv53CUN1PygTTTAQCr5ZFT
      "]]}, 
    {RGBColor[0.7364438363636363, 0.9055107636363636, 0.9968396545454545], 
     PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7KsieMLv5j63hwo4GK0y4Tlz6RmUz+Hw4Yv8
NKGqDVC+gMPRKKbbSbFX9kP4Ig569VWccXZ3oXwJB5lklgP8M95A+TIO72Z9
nNe79AOUr+Cw/3SUpJncFyhfySH3d7a1itZXKF/FIeJxJ1OF5jcoX83h3Lci
86iI71C+hsOVRXO+lOj+gPK1HOyiYufFRf6E8nUcyg59XFDH/wvK13NYzPzD
beYWGN/AQVXk946TP2B8Q4dbz865bZP4DeUbOeiGec20+A2TN3bYNelR/aND
ML6Jg4Xtb4ephTC+qYNTpSTbcSkY38zhbJavfdlRmHvMHYyv1ay1rIbxLRy+
qHZrrrSD8S0dgpw9nbsEYHwrB26LT15y72H+s3ZIbdVMm3sDxrdxaD/7+1Pa
aRjf1uGsy4IrZsdgfDuHtXzFEawnfuwHAIPdlsw=
      "]]}, 
    {RGBColor[0.772061, 0.92462, 0.998703], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7FkNVTTSQ7baQwUc9JpCblVsOQXlczg0HFw0
95rcCihfwMGkMWVGMMua/RC+iMPxxn3uQnPeQ+UlHCb7m9cn7L0P5cs45Pao
8u0/9BbKV3D4dPJqL8/EJ1C+ksMGF/9WJ6EXUL6Kw9qFD2oYnj+F8tUcFnRc
mMV1/SWUr+GwZfXSwEjOV1C+loMsg/xDi6LXUL6Og13uTjamojdQvp5D+Ao3
ftbVMPsNHC56OJlXfX4H5Rs6lG81+3VZ6QOUb+SQHKczOfYIjG/s4PdrSdwB
n49QvonDxEWPlr3fDOObOlTmn/bL+Azjmzk8uXrmhRHPJyjf3IFfe/6PNcww
voVDTOy5tuRHMPWWDs17XQNrN8H4Vg4yx+YHTqqB8a0drF1tGbTcYXwbh7qT
i47+FIXxbR0U/GI0N7yCudfOITgt+PLEox/sASpYh0Y=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.0000000000000022`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 30.}, {-3.8583922644817203`, 4.931617713480893}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.91425791336479*^9, 3.914258010545829*^9}, 
   3.914258224978258*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"1af183cf-20b8-4553-9cdf-206ffa9888f2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{720, 807},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"733c1581-2aa4-4fc3-9355-377332e8d0ad"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "analytic"->{
  Cell[2980, 92, 313, 4, 67, "Section",ExpressionUUID->"f6394066-03e0-4e47-80b1-708163891250",
   CellTags->"analytic"]},
 "gradient"->{
  Cell[285801, 5119, 229, 3, 67, "Section",ExpressionUUID->"ab27abfe-b923-4d81-a7bb-e3c903453b8d",
   CellTags->"gradient"]},
 "natural"->{
  Cell[433418, 8341, 279, 4, 67, "Section",ExpressionUUID->"cb5b0c12-556e-4836-9491-747ba7025457",
   CellTags->"natural"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"analytic", 596361, 11847},
 {"gradient", 596498, 11850},
 {"natural", 596638, 11853}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 216, 4, 98, "Title",ExpressionUUID->"0efa4d2f-656d-49de-986c-5612e5acc271"],
Cell[799, 28, 431, 8, 74, "Text",ExpressionUUID->"45b3a7b1-65dc-4831-a87d-a3f36749d27a"],
Cell[1233, 38, 779, 28, 120, "Text",ExpressionUUID->"7963f175-4e7a-40e0-9b62-1886ddc0beae"],
Cell[2015, 68, 278, 7, 97, "Text",ExpressionUUID->"09294e81-d942-4816-9797-ec3183353ba9"],
Cell[2296, 77, 659, 11, 52, "Input",ExpressionUUID->"8235bd07-0b24-4f7b-90cc-0c4cf5665ccf"],
Cell[CellGroupData[{
Cell[2980, 92, 313, 4, 67, "Section",ExpressionUUID->"f6394066-03e0-4e47-80b1-708163891250",
 CellTags->"analytic"],
Cell[3296, 98, 1459, 37, 111, "Text",ExpressionUUID->"f3712918-2795-4932-be87-ad4de1ee935e"],
Cell[CellGroupData[{
Cell[4780, 139, 1148, 29, 73, "Input",ExpressionUUID->"0f66e853-9d54-4cc7-8e16-918b2872049e"],
Cell[5931, 170, 2313, 42, 119, "Output",ExpressionUUID->"93503eab-6ad1-48d6-bbbc-a03e0d0a7384"]
}, Open  ]],
Cell[8259, 215, 679, 18, 57, "Text",ExpressionUUID->"baa75348-35a5-4ec3-bd2b-7759739eae28"],
Cell[CellGroupData[{
Cell[8963, 237, 350, 7, 34, "Input",ExpressionUUID->"7d88a256-9884-411d-bd5c-876cb49a32c3"],
Cell[9316, 246, 646, 11, 34, "Output",ExpressionUUID->"cddbd871-3fd0-433d-b6ae-5ed56f60d64d"]
}, Open  ]],
Cell[9977, 260, 846, 23, 59, "Text",ExpressionUUID->"0707daf7-4648-4d80-8a1d-834e8acf0563"],
Cell[CellGroupData[{
Cell[10848, 287, 435, 9, 30, "Input",ExpressionUUID->"d2ab11cb-cbc8-42d7-98d8-ade15c3f0ad9"],
Cell[11286, 298, 2849, 86, 123, "Output",ExpressionUUID->"29e20321-a308-49e4-ae55-9b4f1c7c20bc"]
}, Open  ]],
Cell[14150, 387, 1184, 31, 103, "Text",ExpressionUUID->"1853ccba-c55a-42b0-810f-a8bf6cbe27b9"],
Cell[CellGroupData[{
Cell[15359, 422, 826, 22, 84, "Input",ExpressionUUID->"8dff8e2c-3eac-4005-827e-7bb2123a32a2"],
Cell[16188, 446, 743, 15, 50, "Output",ExpressionUUID->"17949871-c815-4c49-ab46-538ba6f8dda1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16968, 466, 684, 17, 33, "Input",ExpressionUUID->"01a6a919-47da-44ed-8bd4-45bf152099b4"],
Cell[17655, 485, 16981, 298, 260, "Output",ExpressionUUID->"969b0e1d-dfec-43e0-b590-389c6e3de039"]
}, Open  ]],
Cell[34651, 786, 886, 15, 74, "Text",ExpressionUUID->"6fee807d-849f-4451-8174-224183b35ed4"],
Cell[35540, 803, 509, 14, 30, "Input",ExpressionUUID->"51eca869-2964-430f-9361-0e23d4c6b183"],
Cell[36052, 819, 764, 11, 51, "Text",ExpressionUUID->"e36f8fb4-773c-4ce1-871f-f9f345f0cece"],
Cell[CellGroupData[{
Cell[36841, 834, 462, 10, 52, "Input",ExpressionUUID->"b627eaf2-577d-49c4-83a1-60decac59489"],
Cell[37306, 846, 1704, 42, 151, "Output",ExpressionUUID->"5aee4448-05b0-448b-8989-e195b12b8717"]
}, Open  ]],
Cell[39025, 891, 1046, 17, 74, "Text",ExpressionUUID->"e296633d-0b90-403a-9381-fb5ce66d9a7a"],
Cell[CellGroupData[{
Cell[40096, 912, 647, 16, 52, "Input",ExpressionUUID->"e8110feb-07ff-41d9-aa40-8650b5377d9f"],
Cell[40746, 930, 701, 14, 34, "Output",ExpressionUUID->"387bfe8d-f0bf-4440-a9f9-13fc75a1dae5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41484, 949, 758, 21, 30, "Input",ExpressionUUID->"e9b35077-cee5-4230-997a-21ba94009c8d"],
Cell[42245, 972, 229894, 3819, 324, "Output",ExpressionUUID->"7360fe82-ce04-4854-8c31-9389d980c481"]
}, Open  ]],
Cell[272154, 4794, 1055, 19, 74, "Text",ExpressionUUID->"ec7b25bb-513a-49cb-a9eb-dd8f12f87f91"],
Cell[CellGroupData[{
Cell[273234, 4817, 250, 4, 30, "Input",ExpressionUUID->"d9bb83e6-c084-4cc5-b036-f2621d4fa2d4"],
Cell[273487, 4823, 423, 7, 35, "Output",ExpressionUUID->"1e5112d6-e710-4278-ac42-b7c2928c9017"]
}, Open  ]],
Cell[273925, 4833, 1414, 26, 82, "Text",ExpressionUUID->"19cc4069-4064-4f22-92fb-2481423a0add"],
Cell[CellGroupData[{
Cell[275364, 4863, 329, 7, 30, "Input",ExpressionUUID->"7dbe3228-0101-4efa-adf9-416766a4e1a7"],
Cell[275696, 4872, 443, 8, 35, "Output",ExpressionUUID->"d3e2619f-0093-439c-a862-9f80429cd53b"]
}, Open  ]],
Cell[276154, 4883, 815, 20, 74, "Text",ExpressionUUID->"1b7bf369-8d13-4100-b886-bec931e7bad4"],
Cell[CellGroupData[{
Cell[276994, 4907, 991, 23, 52, "Input",ExpressionUUID->"c06dfd65-3858-4fe8-96ca-b059c7ea2cb9"],
Cell[277988, 4932, 2760, 51, 114, "Output",ExpressionUUID->"12ff5d5f-1533-42ec-8606-d9d52a436654"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280785, 4988, 790, 20, 73, "Input",ExpressionUUID->"095c394c-b384-4eec-adf8-b6be198256a6"],
Cell[281578, 5010, 1048, 27, 50, "Output",ExpressionUUID->"22882494-08b2-444a-ad47-212d34e1e83c"]
}, Open  ]],
Cell[282641, 5040, 827, 19, 52, "Text",ExpressionUUID->"2061b5b1-1ab8-4487-840c-5568db58903e"],
Cell[CellGroupData[{
Cell[283493, 5063, 492, 10, 30, "Input",ExpressionUUID->"03fe8dfb-e386-4299-964c-594310a88f7a"],
Cell[283988, 5075, 889, 19, 34, "Output",ExpressionUUID->"eb365651-7979-4704-846e-bff15bfabc99"]
}, Open  ]],
Cell[284892, 5097, 872, 17, 97, "Text",ExpressionUUID->"c4936721-56c0-481c-93ae-e13992bed2cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285801, 5119, 229, 3, 67, "Section",ExpressionUUID->"ab27abfe-b923-4d81-a7bb-e3c903453b8d",
 CellTags->"gradient"],
Cell[286033, 5124, 839, 21, 51, "Text",ExpressionUUID->"a0239bf2-b6ec-4785-9acb-bdc1775c1fd2"],
Cell[CellGroupData[{
Cell[286897, 5149, 453, 10, 52, "Input",ExpressionUUID->"a6e250ec-d34b-49be-9bd7-6af84db9f101"],
Cell[287353, 5161, 7025, 201, 224, "Output",ExpressionUUID->"cb91e2f3-3225-46f3-9e74-9e2fa4214b16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294415, 5367, 258, 4, 30, "Input",ExpressionUUID->"385dc3d8-0e3f-4548-950a-977b557a6a65"],
Cell[294676, 5373, 376, 6, 34, "Output",ExpressionUUID->"f1fccbf3-2a0d-406a-8715-e1d22802f432"]
}, Open  ]],
Cell[295067, 5382, 1296, 34, 106, "Text",ExpressionUUID->"abdb6009-b7c5-41a3-aa06-c8dcfbd04faa"],
Cell[CellGroupData[{
Cell[296388, 5420, 588, 11, 52, "Input",ExpressionUUID->"684fb696-00f8-47d8-8e5d-463cac923f1d"],
Cell[296979, 5433, 13988, 263, 233, "Output",ExpressionUUID->"dbc2264a-3db8-4568-acb4-f3cb15893cfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311004, 5701, 408, 9, 30, "Input",ExpressionUUID->"7457a19e-4cdd-4c20-8cfe-8495641efbe5"],
Cell[311415, 5712, 396, 5, 34, "Output",ExpressionUUID->"2eb23b9c-428a-485c-9559-d19547125c8c"]
}, Open  ]],
Cell[311826, 5720, 815, 16, 74, "Text",ExpressionUUID->"d48378b8-3a60-419b-9953-ffabfbb05083"],
Cell[312644, 5738, 603, 12, 52, "Input",ExpressionUUID->"261bab34-330a-4909-8d68-b0d88388bac5"],
Cell[313250, 5752, 2088, 56, 113, "Text",ExpressionUUID->"7a215cb3-6cf9-4ee8-b97e-637918f717b7"],
Cell[315341, 5810, 287, 6, 30, "Input",ExpressionUUID->"304909e4-8dbe-4d8e-a06a-4e1ce00f4d3c"],
Cell[CellGroupData[{
Cell[315653, 5820, 359, 7, 30, "Input",ExpressionUUID->"adf5fadb-e968-45b6-a821-b7a30f35bbd2"],
Cell[316015, 5829, 6889, 184, 309, "Output",ExpressionUUID->"97a4e4c9-c489-4dc5-bb0c-1ec8d520b196"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322941, 6018, 391, 7, 52, "Input",ExpressionUUID->"e843fd2f-16d6-4c8b-ac98-4cfd68598566"],
Cell[323335, 6027, 379, 6, 34, "Output",ExpressionUUID->"a3eab702-9c2f-45df-964b-b0e4b57b47e1"]
}, Open  ]],
Cell[323729, 6036, 1176, 27, 74, "Text",ExpressionUUID->"3048d111-630e-4d1c-b542-84042eba1de0"],
Cell[CellGroupData[{
Cell[324930, 6067, 939, 21, 136, "Input",ExpressionUUID->"ca45b8da-7793-4a77-97f2-bbd61d61afc3"],
Cell[325872, 6090, 1036, 18, 77, "Output",ExpressionUUID->"ec527c3d-f112-413b-9362-1f0db4ecf6a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326945, 6113, 887, 24, 73, "Input",ExpressionUUID->"fff9eb2e-4705-4e52-b002-12fa0c3000f2"],
Cell[327835, 6139, 2032, 49, 232, "Output",ExpressionUUID->"2984592c-f7da-470c-8de9-bb63d6922f47"]
}, Open  ]],
Cell[329882, 6191, 3316, 63, 128, "Text",ExpressionUUID->"e38ee419-f33a-4258-9807-eb94e2f97218"],
Cell[333201, 6256, 3309, 99, 156, "Text",ExpressionUUID->"99ac382f-c29c-44e8-b190-ffc93474fd5e"],
Cell[336513, 6357, 4178, 94, 154, "Text",ExpressionUUID->"a2aaf9a5-0ee9-463f-8e47-5b2490740ff9"],
Cell[340694, 6453, 2624, 62, 346, "Input",ExpressionUUID->"b0af15a5-e513-46cb-8bc0-808032364b41"],
Cell[343321, 6517, 2559, 37, 51, "Text",ExpressionUUID->"e68ca110-9169-4231-a68e-0e629a127cd6"],
Cell[CellGroupData[{
Cell[345905, 6558, 627, 14, 52, "Input",ExpressionUUID->"421fdb56-079c-48f5-9826-07aa5fa5108f"],
Cell[346535, 6574, 5993, 175, 308, "Output",ExpressionUUID->"838c15c5-5fed-4914-9f1a-09a4328f02e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352565, 6754, 552, 12, 73, "Input",ExpressionUUID->"1afb23f0-01de-41f8-be34-7a2dd9c03f00"],
Cell[353120, 6768, 333, 4, 34, "Output",ExpressionUUID->"15b1efb1-8351-4f09-a349-69214782306a"]
}, Open  ]],
Cell[353468, 6775, 3146, 57, 58, "Text",ExpressionUUID->"262388ab-3621-4c66-a924-dd6320d56a95"],
Cell[CellGroupData[{
Cell[356639, 6836, 425, 7, 30, "Input",ExpressionUUID->"48a10217-edb3-480b-9c22-c669bda718af"],
Cell[357067, 6845, 365, 5, 34, "Output",ExpressionUUID->"079ab715-8638-470e-99e7-b4f1028fbd69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357469, 6855, 374, 6, 30, "Input",ExpressionUUID->"e38a486e-1910-40dc-bfd9-c3984d93ad7e"],
Cell[357846, 6863, 323, 5, 34, "Output",ExpressionUUID->"d887062a-ed4b-4c69-9cdf-c039465c1b39"]
}, Open  ]],
Cell[358184, 6871, 2547, 40, 74, "Text",ExpressionUUID->"da0e947f-04b2-4816-8451-f9b22b91dceb"],
Cell[CellGroupData[{
Cell[360756, 6915, 683, 14, 94, "Input",ExpressionUUID->"91d5e9d2-c7fa-4081-ab8a-14957b9b07c1"],
Cell[361442, 6931, 2635, 45, 203, "Output",ExpressionUUID->"89de514e-6ce9-4722-ad4b-7c97a7bc4115"]
}, Open  ]],
Cell[364092, 6979, 3288, 54, 105, "Text",ExpressionUUID->"4d08d565-d43c-4935-80bc-af2e8e216403"],
Cell[367383, 7035, 505, 12, 52, "Input",ExpressionUUID->"1f501584-068e-4bf4-8c05-890fc0960dcd"],
Cell[CellGroupData[{
Cell[367913, 7051, 484, 11, 73, "Input",ExpressionUUID->"5d413a62-e498-40e2-aa8f-bf7e2938e04e"],
Cell[368400, 7064, 285, 4, 34, "Output",ExpressionUUID->"a66c1344-7943-4e40-b39f-68b65f83503d"]
}, Open  ]],
Cell[368700, 7071, 2655, 38, 74, "Text",ExpressionUUID->"7ab3588e-df25-4ee2-9601-5c26c6e89575"],
Cell[371358, 7111, 1701, 39, 199, "Input",ExpressionUUID->"736ce2e9-3093-4427-879c-62e08a209322"],
Cell[CellGroupData[{
Cell[373084, 7154, 1016, 25, 94, "Input",ExpressionUUID->"26846209-5cd6-493e-9215-fb0cc416cab1"],
Cell[374103, 7181, 2075, 50, 230, "Output",ExpressionUUID->"c3e66a88-04cf-4c34-9ffe-d808db4c37a9"]
}, Open  ]],
Cell[376193, 7234, 2845, 41, 97, "Text",ExpressionUUID->"685bfc71-a9bb-4a48-bc77-cae2556876ca"],
Cell[CellGroupData[{
Cell[379063, 7279, 1367, 35, 122, "Input",ExpressionUUID->"68e1b1fb-ecd0-4fc4-b941-842e00ddc86c"],
Cell[380433, 7316, 26983, 501, 228, "Output",ExpressionUUID->"2f5a1248-192a-4098-af5e-00733db5f299"]
}, Open  ]],
Cell[407431, 7820, 2639, 36, 51, "Text",ExpressionUUID->"5fefef26-fb2f-4398-be1d-752d6bdfe10e"],
Cell[410073, 7858, 707, 14, 52, "Input",ExpressionUUID->"8af1b17c-a4b5-49a4-861d-9d2b6ec85ad6"],
Cell[410783, 7874, 2755, 39, 51, "Text",ExpressionUUID->"2e24cc0d-6db6-4691-b6ca-a47d45bf58f3"],
Cell[CellGroupData[{
Cell[413563, 7917, 550, 12, 73, "Input",ExpressionUUID->"d8db5bea-ad9a-4241-835d-e1f8bbe5b3d9"],
Cell[414116, 7931, 351, 5, 34, "Output",ExpressionUUID->"734597f3-5ef4-4157-897a-b85e23e17295"]
}, Open  ]],
Cell[414482, 7939, 2825, 41, 51, "Text",ExpressionUUID->"c526e1a7-c2f2-480d-9f96-7c93ebc87000"],
Cell[CellGroupData[{
Cell[417332, 7984, 214, 3, 30, "Input",ExpressionUUID->"96955e8a-d606-4712-9075-31cafdcd9030"],
Cell[417549, 7989, 312, 4, 34, "Output",ExpressionUUID->"269ca69a-4877-46fc-a03e-be7b8cc835b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417898, 7998, 243, 4, 30, "Input",ExpressionUUID->"582af4b4-f7f2-4b48-98ed-b0c382219aeb"],
Cell[418144, 8004, 286, 4, 34, "Output",ExpressionUUID->"6bf3d070-0126-454d-a9ff-6710eaea0ae4"]
}, Open  ]],
Cell[418445, 8011, 2810, 40, 74, "Text",ExpressionUUID->"289c0686-b7b6-428a-b6a0-f64e83afe0f8"],
Cell[421258, 8053, 1873, 42, 199, "Input",ExpressionUUID->"810503d7-abdf-4ce6-9b4c-aa8d18d7db12"],
Cell[CellGroupData[{
Cell[423156, 8099, 1305, 32, 115, "Input",ExpressionUUID->"b7b60270-8c42-49c7-9863-626907f976f6"],
Cell[424464, 8133, 8905, 202, 232, "Output",ExpressionUUID->"49454e92-bb35-4ecc-9217-a31332635aea"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[433418, 8341, 279, 4, 67, "Section",ExpressionUUID->"cb5b0c12-556e-4836-9491-747ba7025457",
 CellTags->"natural"],
Cell[433700, 8347, 4371, 116, 378, "Text",ExpressionUUID->"d54e14a4-f00b-4b92-bd82-f0597900b580"],
Cell[CellGroupData[{
Cell[438096, 8467, 204, 3, 30, "Input",ExpressionUUID->"d57850a5-46ac-4da7-9f58-28ef0d1920fc"],
Cell[438303, 8472, 20035, 427, 503, "Output",ExpressionUUID->"33639f4e-edd4-45c7-858b-f5f4d823c99c"]
}, Open  ]],
Cell[458353, 8902, 2830, 41, 51, "Text",ExpressionUUID->"a99319ef-9672-4f07-842c-7c3546311f2b"],
Cell[461186, 8945, 603, 12, 52, "Input",ExpressionUUID->"cc0ac56c-f31a-49f1-aefe-a494d9faafec"],
Cell[CellGroupData[{
Cell[461814, 8961, 365, 9, 30, "Input",ExpressionUUID->"a80f61bd-064d-49c0-a4db-6dee11091e73"],
Cell[462182, 8972, 5829, 173, 308, "Output",ExpressionUUID->"d3cf6bb3-1b06-4af4-bce5-818065e2f105"]
}, Open  ]],
Cell[468026, 9148, 2826, 38, 51, "Text",ExpressionUUID->"4874ef81-8493-46de-8424-03de84a64ce6"],
Cell[CellGroupData[{
Cell[470877, 9190, 902, 21, 52, "Input",ExpressionUUID->"9eb92ff5-ba9d-4dad-843a-c40b31421f16"],
Cell[471782, 9213, 2456, 51, 139, "Output",ExpressionUUID->"3810ccd4-b58c-4e71-aaf5-98b9b8d29de0"]
}, Open  ]],
Cell[474253, 9267, 3325, 48, 120, "Text",ExpressionUUID->"a64900d8-3b20-47c1-8fde-ac1dad35bd1c"],
Cell[CellGroupData[{
Cell[477603, 9319, 216, 3, 30, "Input",ExpressionUUID->"8eaec11c-0696-4ea3-afce-dfa5b45477c5"],
Cell[477822, 9324, 22793, 494, 407, "Output",ExpressionUUID->"b4a9624d-f92d-4088-928d-e91faa7d9843"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500652, 9823, 383, 7, 30, "Input",ExpressionUUID->"39405214-f535-468e-baef-d3b47c2c3142"],
Cell[501038, 9832, 2356, 43, 203, "Output",ExpressionUUID->"01c5f8ab-8b6d-4978-aeeb-5615b94a5931"]
}, Open  ]],
Cell[503409, 9878, 2802, 78, 193, "Text",ExpressionUUID->"362bfe12-2ea5-468f-80a6-14e001ff4dd7"],
Cell[CellGroupData[{
Cell[506236, 9960, 201, 3, 30, "Input",ExpressionUUID->"1e7d53ff-a487-48eb-b4bb-4de08275ce5a"],
Cell[506440, 9965, 244, 3, 34, "Output",ExpressionUUID->"f0075c34-0a20-4936-bb53-5ffcb1a47eca"]
}, Open  ]],
Cell[506699, 9971, 801, 13, 51, "Text",ExpressionUUID->"94dd79cf-3a62-4ef5-8e1e-ba0cf67c8a7b"],
Cell[CellGroupData[{
Cell[507525, 9988, 405, 8, 30, "Input",ExpressionUUID->"ae683262-500d-47af-ab3c-c8d7d14debbc"],
Cell[507933, 9998, 2375, 44, 182, "Output",ExpressionUUID->"c33c2125-3ff4-4890-8a69-8f9e330dc34b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510345, 10047, 422, 9, 30, "Input",ExpressionUUID->"2eef2b6b-0b05-45b7-a354-2e69516407a6"],
Cell[510770, 10058, 2431, 44, 182, "Output",ExpressionUUID->"cfb1486b-f5c8-413f-9c9a-a00695227213"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513238, 10107, 583, 14, 33, "Input",ExpressionUUID->"39c2966c-2411-4083-8ec3-05b28a9e7635"],
Cell[513824, 10123, 2391, 44, 182, "Output",ExpressionUUID->"8b3ce464-e6d5-4166-9933-3ac0c772704c"]
}, Open  ]],
Cell[516230, 10170, 2523, 59, 107, "Text",ExpressionUUID->"43efbf72-ee6c-4ab6-8d1b-01066d933f14"],
Cell[518756, 10231, 1130, 18, 74, "Text",ExpressionUUID->"51b2915b-84bf-4c0b-b7a8-838689c6f5c6"],
Cell[519889, 10251, 2289, 52, 247, "Input",ExpressionUUID->"1d91acfc-3975-444e-9969-52c3bfe7a89a"],
Cell[CellGroupData[{
Cell[522203, 10307, 1183, 31, 115, "Input",ExpressionUUID->"9ad1f5df-2c5d-47a7-9619-681649d89ff7"],
Cell[523389, 10340, 8853, 199, 232, "Output",ExpressionUUID->"f8e6ef91-7ba5-48e7-bb4b-eec65fd4f323"]
}, Open  ]],
Cell[532257, 10542, 600, 13, 51, "Text",ExpressionUUID->"e384b687-92e5-4134-8b06-ace2eae1010f"],
Cell[532860, 10557, 707, 14, 52, "Input",ExpressionUUID->"263131bd-e611-4808-bc4e-e96b095e353e"],
Cell[533570, 10573, 2346, 53, 247, "Input",ExpressionUUID->"a764c137-ac91-43ee-87a3-2ab9ac572843"],
Cell[535919, 10628, 560, 10, 51, "Text",ExpressionUUID->"42d42462-1d15-482a-bb13-561703c8fab2"],
Cell[CellGroupData[{
Cell[536504, 10642, 1521, 36, 199, "Input",ExpressionUUID->"2845a856-844a-4ac9-b589-792aa8f9fe5d"],
Cell[538028, 10680, 13506, 304, 232, "Output",ExpressionUUID->"57212d45-271c-4001-bbf1-9d01c7e44de7"]
}, Open  ]],
Cell[551549, 10987, 827, 16, 120, "Text",ExpressionUUID->"540a513e-cc72-4fc5-a08d-cad050fb57a3"],
Cell[552379, 11005, 2790, 40, 74, "Text",ExpressionUUID->"f6d91712-d288-41e7-ae33-947044b8c92d"],
Cell[555172, 11047, 2366, 56, 205, "Input",ExpressionUUID->"51c0fe58-4c43-422c-b142-6faa585c31ae"],
Cell[CellGroupData[{
Cell[557563, 11107, 521, 12, 30, "Input",ExpressionUUID->"82819e38-05b6-475e-aac8-fed768434c84"],
Cell[558087, 11121, 37836, 708, 231, "Output",ExpressionUUID->"1af183cf-20b8-4553-9cdf-206ffa9888f2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

