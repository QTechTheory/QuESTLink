(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    113297,       2621]
NotebookOptionsPosition[    103868,       2462]
NotebookOutlinePosition[    104316,       2480]
CellTagsIndexPosition[    104273,       2477]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ApplyPauliTransferMap", "Title",
 CellChangeTimes->{{3.913273690088934*^9, 3.913273712038406*^9}, {
   3.915199103735641*^9, 3.915199106675872*^9}, {3.917086155647716*^9, 
   3.917086158759173*^9}, {3.9171594220183487`*^9, 3.917159422219205*^9}, {
   3.917274433487973*^9, 3.917274435404172*^9}, 3.917277665796289*^9, {
   3.917280864184389*^9, 3.9172808649949007`*^9}, {3.9172828199639874`*^9, 
   3.9172828467690277`*^9}, {3.917341838255602*^9, 3.917341850354156*^9}, {
   3.91745168386106*^9, 
   3.917451684259018*^9}},ExpressionUUID->"77f009f4-2175-44a8-80e3-\
db58a43dd7eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", " ", "@", " ", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Import", "[", "\"\<../Link/QuESTlink.m\>\"", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.917451655155184*^9, 3.9174517069438953`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"96dc3e19-ba26-4783-b8c5-af8507883921"],

Cell[CellGroupData[{

Cell["Doc", "Chapter",
 CellChangeTimes->{{3.912849421029387*^9, 3.912849426146103*^9}, {
  3.912849785066738*^9, 3.912849790979604*^9}, {3.912878442788628*^9, 
  3.912878443004286*^9}, {3.9151991784358664`*^9, 
  3.9151991786465263`*^9}},ExpressionUUID->"2a8ec798-ae11-4a87-9bc0-\
81ab84d2fff7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ApplyPauliTransferMap"}]], "Input",
 CellChangeTimes->{{3.9174516956311903`*^9, 3.917451699011285*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"fba5918a-c879-4e52-a985-86426b9044bd"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ApplyPauliTransferMap[pauliString, ptMap] returns \
the Pauli string produced by the given PTMap acting upon the given initial \
Pauli string.\\nApplyPauliTransferMap[pauliString, circuit] automatically \
transforms the given circuit (composed of gates, channels, and PTMs, possibly \
intermixed) into PTMaps before applying them to the given Pauli \
string.\\nThis method uses automatic caching to avoid needless re-computation \
of an operator's PTMap, agnostic to the targeted and controlled qubits, at \
the cost of additional memory usage. Caching behaviour can be controlled \
using option \\\"CacheMaps\\\":\\n\[Bullet] \\\"CacheMaps\\\" -> \
\\\"UntilCallEnd\\\" (default) caches all computed PTMaps but clears the \
cache when ApplyPauliTransferMap[] returns.\\n\[Bullet] \\\"CacheMaps\\\" -> \
\\\"Forever\\\" maintains the cache even between multiple calls to \
ApplyPauliTransferMap[].\\n\[Bullet] \\\"CacheMaps\\\" -> \\\"Never\\\" \
disables caching (and clears the existing cache before computation), \
re-computing each operqtors' PTMap when encountered in the \
circuit.\\nApplyPauliTransferMap also accepts all options of \
CalcPauliTransferMap, like AssertValidChannels. See \
?AssertValidChannels.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ApplyPauliTransferMap", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "QuEST`Private`pauliStr_", "?", 
                    "QuEST`Private`isValidSymbolicPauliString"}], ",", 
                    RowBox[{"QuEST`Private`map", ":", 
                    RowBox[{
                    SubscriptBox["PTMap", "__Integer"], "[", "__Rule", 
                    "]"}]}], ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Check", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`validatePauliTransferMapOptions", 
                    "[", 
                    
                    RowBox[{"ApplyPauliTransferMap", ",", 
                    "QuEST`Private`opts"}], "]"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"Plus", "@@", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`inState", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}], " ", 
                    
                    RowBox[{"QuEST`Private`outState", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"GetPauliString", "[", 
                    
                    RowBox[{"QuEST`Private`outState", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`inState", ",", 
                    
                    RowBox[{
                    "QuEST`Private`getPauliStringInitStatesForPTMapSim", "[", 
                    
                    RowBox[{"QuEST`Private`pauliStr", ",", 
                    RowBox[{"{", "QuEST`Private`map", "}"}]}], "]"}]}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`outState", ",", 
                    RowBox[{"QuEST`Private`applyPTMapToPauliState", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`inState", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], ",", 
                    "QuEST`Private`map"}], "]"}]}], "}"}]}], "]"}], ",", 
                    "1"}], "]"}]}]}], ")"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyPauliTransferMap", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "QuEST`Private`pauliStr_", "?", 
                    "QuEST`Private`isValidSymbolicPauliString"}], ",", 
                    RowBox[{"QuEST`Private`maps", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["PTMap", "__Integer"], "[", "__Rule", "]"}], 
                    ".."}], "}"}]}], ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Check", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`validatePauliTransferMapOptions", 
                    "[", 
                    
                    RowBox[{"ApplyPauliTransferMap", ",", 
                    "QuEST`Private`opts"}], "]"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"SimplifyPaulis", "[", 
                    RowBox[{"Fold", "[", 
                    
                    RowBox[{"ApplyPauliTransferMap", ",", 
                    "QuEST`Private`pauliStr", ",", "QuEST`Private`maps"}], 
                    "]"}], "]"}]}], ")"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyPauliTransferMap", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "QuEST`Private`pauliStr_", "?", 
                    "QuEST`Private`isValidSymbolicPauliString"}], ",", 
                    RowBox[{"QuEST`Private`mixed", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"_", "?", "QuEST`Private`isGateFormat"}], "|", 
                    RowBox[{
                    SubscriptBox["PTM", "__Integer"], "[", 
                    RowBox[{"_", "?", "SquareMatrixQ"}], "]"}], "|", 
                    RowBox[{
                    SubscriptBox["PTMap", "__Integer"], "[", "__Rule", 
                    "]"}]}], ")"}], ".."}], "}"}]}], ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "QuEST`Private`maps", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"QuEST`Private`validatePauliTransferMapOptions", 
                    "[", 
                    
                    RowBox[{"ApplyPauliTransferMap", ",", 
                    "QuEST`Private`opts"}], "]"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"QuEST`Private`maps", "=", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`getAndValidateAllGatesAsPTMaps", 
                    "[", 
                    
                    RowBox[{"QuEST`Private`mixed", ",", 
                    "ApplyPauliTransferMap", ",", "QuEST`Private`opts"}], 
                    "]"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}]}], ";", 
                    RowBox[{"ApplyPauliTransferMap", "[", 
                    
                    RowBox[{"QuEST`Private`pauliStr", ",", 
                    "QuEST`Private`maps"}], "]"}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyPauliTransferMap", "[", 
                    RowBox[{"QuEST`Private`pauliStr_", ",", 
                    
                    RowBox[{
                    "QuEST`Private`gate_", "?", 
                    "QuEST`Private`isGateFormat"}], ",", 
                    "QuEST`Private`opts___"}], "]"}], ":=", 
                    RowBox[{"ApplyPauliTransferMap", "[", 
                    RowBox[{"QuEST`Private`pauliStr", ",", 
                    RowBox[{"{", "QuEST`Private`gate", "}"}], ",", 
                    "QuEST`Private`opts"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyPauliTransferMap", "[", "___", "]"}], ":=", 
                    
                    
                    RowBox[{
                    "QuEST`Private`invalidArgError", "[", 
                    "ApplyPauliTransferMap", "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   
                   RowBox[{"\<\"CacheMaps\"\>", 
                    "\[Rule]", "\<\"UntilCallEnd\"\>"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QuEST`ApplyPauliTransferMap\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ApplyPauliTransferMap[pauliString, ptMap] returns \
the Pauli string produced by the given PTMap acting upon the given initial \
Pauli string.\\nApplyPauliTransferMap[pauliString, circuit] automatically \
transforms the given circuit (composed of gates, channels, and PTMs, possibly \
intermixed) into PTMaps before applying them to the given Pauli \
string.\\nThis method uses automatic caching to avoid needless re-computation \
of an operator's PTMap, agnostic to the targeted and controlled qubits, at \
the cost of additional memory usage. Caching behaviour can be controlled \
using option \\\"CacheMaps\\\":\\n\[Bullet] \\\"CacheMaps\\\" -> \
\\\"UntilCallEnd\\\" (default) caches all computed PTMaps but clears the \
cache when ApplyPauliTransferMap[] returns.\\n\[Bullet] \\\"CacheMaps\\\" -> \
\\\"Forever\\\" maintains the cache even between multiple calls to \
ApplyPauliTransferMap[].\\n\[Bullet] \\\"CacheMaps\\\" -> \\\"Never\\\" \
disables caching (and clears the existing cache before computation), \
re-computing each operqtors' PTMap when encountered in the \
circuit.\\nApplyPauliTransferMap also accepts all options of \
CalcPauliTransferMap, like AssertValidChannels. See \
?AssertValidChannels.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ApplyPauliTransferMap[pauliString, ptMap] returns the Pauli string \
produced by the given PTMap acting upon the given initial Pauli string.\n\
ApplyPauliTransferMap[pauliString, circuit] automatically transforms the \
given circuit (composed of gates, channels, and PTMs, possibly intermixed) \
into PTMaps before applying them to the given Pauli string.\nThis method uses \
automatic caching to avoid needless re-computation of an operator's PTMap, \
agnostic to the targeted and controlled qubits, at the cost of additional \
memory usage. Caching behaviour can be controlled using option \"CacheMaps\":\
\n\[Bullet] \"CacheMaps\" -> \"UntilCallEnd\" (default) caches all computed \
PTMaps but clears the cache when ApplyPauliTransferMap[] returns.\n\[Bullet] \
\"CacheMaps\" -> \"Forever\" maintains the cache even between multiple calls \
to ApplyPauliTransferMap[].\n\[Bullet] \"CacheMaps\" -> \"Never\" disables \
caching (and clears the existing cache before computation), re-computing each \
operqtors' PTMap when encountered in the circuit.\nApplyPauliTransferMap also \
accepts all options of CalcPauliTransferMap, like AssertValidChannels. See \
?AssertValidChannels.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, QuEST`ApplyPauliTransferMap, {QuEST`ApplyPauliTransferMap[
         PatternTest[
          Pattern[QuEST`Private`pauliStr, 
           Blank[]], QuEST`Private`isValidSymbolicPauliString], 
         Pattern[QuEST`Private`map, 
          Subscript[QuEST`Gate`PTMap, 
           BlankSequence[Integer]][
           BlankSequence[Rule]]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[]]] :> (Check[
          QuEST`Private`validatePauliTransferMapOptions[
          QuEST`ApplyPauliTransferMap, QuEST`Private`opts], 
          Return[$Failed]]; Apply[Plus, 
          Flatten[
           Table[
           Part[QuEST`Private`inState, 2] Part[QuEST`Private`outState, 2] 
            QuEST`GetPauliString[
              Part[QuEST`Private`outState, 1]], {QuEST`Private`inState, 
             QuEST`Private`getPauliStringInitStatesForPTMapSim[
             QuEST`Private`pauliStr, {QuEST`Private`map}]}, {
            QuEST`Private`outState, 
             QuEST`Private`applyPTMapToPauliState[
              Part[QuEST`Private`inState, 1], QuEST`Private`map]}], 1]]), 
       QuEST`ApplyPauliTransferMap[
         PatternTest[
          Pattern[QuEST`Private`pauliStr, 
           Blank[]], QuEST`Private`isValidSymbolicPauliString], 
         Pattern[QuEST`Private`maps, {
           Repeated[
            Subscript[QuEST`Gate`PTMap, 
             BlankSequence[Integer]][
             BlankSequence[Rule]]]}], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[]]] :> (Check[
          QuEST`Private`validatePauliTransferMapOptions[
          QuEST`ApplyPauliTransferMap, QuEST`Private`opts], 
          Return[$Failed]]; QuEST`SimplifyPaulis[
          Fold[
          QuEST`ApplyPauliTransferMap, QuEST`Private`pauliStr, 
           QuEST`Private`maps]]), QuEST`ApplyPauliTransferMap[
         PatternTest[
          Pattern[QuEST`Private`pauliStr, 
           Blank[]], QuEST`Private`isValidSymbolicPauliString], 
         Pattern[QuEST`Private`mixed, {
           Repeated[
            Alternatives[
             PatternTest[
              Blank[], QuEST`Private`isGateFormat], 
             Subscript[QuEST`Gate`PTM, 
              BlankSequence[Integer]][
              PatternTest[
               Blank[], SquareMatrixQ]], 
             Subscript[QuEST`Gate`PTMap, 
              BlankSequence[Integer]][
              BlankSequence[Rule]]]]}], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[]]] :> Module[{QuEST`Private`maps}, Check[
           QuEST`Private`validatePauliTransferMapOptions[
           QuEST`ApplyPauliTransferMap, QuEST`Private`opts], 
           Return[$Failed]]; QuEST`Private`maps = Check[
            QuEST`Private`getAndValidateAllGatesAsPTMaps[
            QuEST`Private`mixed, QuEST`ApplyPauliTransferMap, 
             QuEST`Private`opts], 
            Return[$Failed]]; 
         QuEST`ApplyPauliTransferMap[
          QuEST`Private`pauliStr, QuEST`Private`maps]], 
       QuEST`ApplyPauliTransferMap[
         Pattern[QuEST`Private`pauliStr, 
          Blank[]], 
         PatternTest[
          Pattern[QuEST`Private`gate, 
           Blank[]], QuEST`Private`isGateFormat], 
         Pattern[QuEST`Private`opts, 
          BlankNullSequence[]]] :> 
       QuEST`ApplyPauliTransferMap[
        QuEST`Private`pauliStr, {QuEST`Private`gate}, QuEST`Private`opts], 
       QuEST`ApplyPauliTransferMap[
         BlankNullSequence[]] :> 
       QuEST`Private`invalidArgError[QuEST`ApplyPauliTransferMap]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> {"CacheMaps" -> "UntilCallEnd"}, 
    "Attributes" -> {}, "FullName" -> "QuEST`ApplyPauliTransferMap"|>, 
   False]]], "Output",
 CellChangeTimes->{3.917451701158464*^9, 3.917454532568006*^9, 
  3.917454562618086*^9, 3.917507010817315*^9, 3.9175152289542427`*^9, 
  3.917516864749501*^9, 3.9175170679452877`*^9, 3.917517875270945*^9, 
  3.918112302188231*^9, 3.920956144795432*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"a6f8c793-a839-4cfb-b0bc-8764ac20ec72"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Correctness", "Chapter",
 CellChangeTimes->{{3.912849421029387*^9, 3.912849426146103*^9}, {
  3.912849785066738*^9, 3.912849790979604*^9}, {3.912878442788628*^9, 
  3.912878443004286*^9}, {3.9151991784358664`*^9, 3.9151991786465263`*^9}, {
  3.9173418805860863`*^9, 3.917341881626457*^9}, {3.917451715663147*^9, 
  3.917451718096586*^9}, {3.917459998504846*^9, 
  3.9174600016077023`*^9}},ExpressionUUID->"02bdf378-83ae-4892-994c-\
456dd1665801"],

Cell[CellGroupData[{

Cell["Maps", "Section",
 CellChangeTimes->{{3.91746001775187*^9, 
  3.91746001813144*^9}},ExpressionUUID->"3046ef3e-0cb3-4f31-95ea-\
17cc025e6c77"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"map", " ", "=", " ", 
   RowBox[{"CalcPauliTransferMap", " ", "@", " ", 
    RowBox[{"Circuit", "[", 
     RowBox[{
      SubscriptBox["H", "0"], 
      RowBox[{
       SubscriptBox["Rx", "0"], "[", "x", "]"}], 
      RowBox[{
       SubscriptBox["C", "0"], "[", 
       SubscriptBox["X", "1"], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawPauliTransferMap", "[", "map", "]"}]}], "Input",
 CellChangeTimes->{{3.917451729108605*^9, 3.917451750355792*^9}, {
   3.917451903687724*^9, 3.917451980751376*^9}, {3.917452196456861*^9, 
   3.917452196639022*^9}, {3.917452448788712*^9, 3.9174524997417727`*^9}, 
   3.917460005483941*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"45ff0713-8931-405a-ae53-38ff226ea5a8"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{0, 1, 3, 6, 2, 5, 4, 7, 8, 11, 9, 13, 10, 14, 12, 
      15}, {{{1, 1}, {2, 3}, {2, 4}, {5, 3}, {5, 4}, {3, 6}, {7, 7}, {6, 5}, {
       6, 8}, {4, 5}, {4, 8}, {8, 2}, {9, 10}, {11, 9}, {11, 12}, {13, 9}, {
       13, 12}, {10, 14}, {15, 16}, {12, 11}, {12, 15}, {14, 11}, {14, 15}, {
       16, 13}}, Null}, {
      EdgeLabels -> {
        DirectedEdge[14, 9] -> -Cos[$CellContext`x], DirectedEdge[1, 3] -> 
         Cos[$CellContext`x], DirectedEdge[5, 7] -> Cos[$CellContext`x], 
         DirectedEdge[4, 4] -> 1, DirectedEdge[3, 5] -> 1, 
         DirectedEdge[2, 6] -> -Cos[$CellContext`x], 
         DirectedEdge[1, 6] -> -Sin[$CellContext`x], DirectedEdge[12, 15] -> 
         1, DirectedEdge[6, 2] -> -Cos[$CellContext`x], 
         DirectedEdge[5, 2] -> -Sin[$CellContext`x], 
         DirectedEdge[2, 3] -> -Sin[$CellContext`x], 
         DirectedEdge[6, 7] -> -Sin[$CellContext`x], DirectedEdge[0, 0] -> 1, 
         DirectedEdge[8, 11] -> 1, 
         DirectedEdge[14, 12] -> -Sin[$CellContext`x], DirectedEdge[11, 14] -> 
         1, DirectedEdge[10, 13] -> Cos[$CellContext`x], DirectedEdge[9, 8] -> 
         Cos[$CellContext`x], DirectedEdge[13, 12] -> Cos[$CellContext`x], 
         DirectedEdge[7, 1] -> 1, DirectedEdge[9, 13] -> Sin[$CellContext`x], 
         DirectedEdge[10, 8] -> -Sin[$CellContext`x], 
         DirectedEdge[13, 9] -> -Sin[$CellContext`x], 
         DirectedEdge[15, 10] -> -1}, 
       EdgeStyle -> {
        DirectedEdge[6, 7] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[2, 3] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[10, 8] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[2, 6] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[15, 10] -> RGBColor[0.761959, 0.470832, 0.940597], 
         DirectedEdge[13, 9] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[8, 11] -> RGBColor[0.761959, 0.470832, 0.940597], 
         DirectedEdge[5, 2] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[13, 12] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[10, 13] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[7, 1] -> RGBColor[0.761959, 0.470832, 0.940597], 
         DirectedEdge[0, 0] -> RGBColor[0.761959, 0.470832, 0.940597], 
         DirectedEdge[1, 6] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[11, 14] -> RGBColor[0.761959, 0.470832, 0.940597], 
         DirectedEdge[9, 8] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[9, 13] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[12, 15] -> RGBColor[0.761959, 0.470832, 0.940597], 
         DirectedEdge[5, 7] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[14, 12] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[1, 3] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[3, 5] -> RGBColor[0.761959, 0.470832, 0.940597], 
         DirectedEdge[14, 9] -> RGBColor[0.431296, 0.709773, 0.927077], 
         DirectedEdge[4, 4] -> RGBColor[0.761959, 0.470832, 0.940597], 
         DirectedEdge[6, 2] -> RGBColor[0.431296, 0.709773, 0.927077]}, 
       VertexLabels -> {
        0 -> Subscript[QuEST`Gate`Id, 0] Subscript[QuEST`Gate`Id, 1], 9 -> 
         Subscript[QuEST`Gate`X, 0] Subscript[QuEST`Gate`Y, 1], 14 -> 
         Subscript[QuEST`Gate`Y, 0] Subscript[QuEST`Gate`Z, 1], 5 -> 
         Subscript[QuEST`Gate`X, 0] Subscript[QuEST`Gate`X, 1], 6 -> 
         Subscript[QuEST`Gate`X, 1] Subscript[QuEST`Gate`Y, 0], 13 -> 
         Subscript[QuEST`Gate`X, 0] Subscript[QuEST`Gate`Z, 1], 4 -> 
         Subscript[QuEST`Gate`Id, 0] Subscript[QuEST`Gate`X, 1], 15 -> 
         Subscript[QuEST`Gate`Z, 0] Subscript[QuEST`Gate`Z, 1], 12 -> 
         Subscript[QuEST`Gate`Id, 0] Subscript[QuEST`Gate`Z, 1], 8 -> 
         Subscript[QuEST`Gate`Id, 0] Subscript[QuEST`Gate`Y, 1], 7 -> 
         Subscript[QuEST`Gate`X, 1] Subscript[QuEST`Gate`Z, 0], 1 -> 
         Subscript[QuEST`Gate`Id, 1] Subscript[QuEST`Gate`X, 0], 10 -> 
         Subscript[QuEST`Gate`Y, 0] Subscript[QuEST`Gate`Y, 1], 2 -> 
         Subscript[QuEST`Gate`Id, 1] Subscript[QuEST`Gate`Y, 0], 3 -> 
         Subscript[QuEST`Gate`Id, 1] Subscript[QuEST`Gate`Z, 0], 11 -> 
         Subscript[QuEST`Gate`Y, 1] Subscript[QuEST`Gate`Z, 0]}, VertexStyle -> {
         GrayLevel[1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
         {RGBColor[0.761959, 0.470832, 0.940597], 
          ArrowBox[BezierCurveBox[{{4.332543236723847, -0.8497226396476774}, {
           4.244063981256087, -1.0405061720329796`}, {
           4.045185503718495, -1.0969024144935737`}, {
           3.9180148792440384`, -1.0379453357187005`}, {
           3.9180148792440384`, -0.6614999435766542}, {
           4.045185503718495, -0.602542864801781}, {
           4.244063981256087, -0.658939107262375}, {
           4.332543236723847, -0.8497226396476774}},
           SplineDegree->7], 0.036895872238239105`]}, 
         InsetBox["1", {3.832543236723847, -0.8497226396476772}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{2.042935216448903, -2.662190241220531}, {
           0.9198434548795635, -2.6088164362690476`}}, 
           0.036895872238239105`]}, InsetBox[
          RowBox[{"cos", "(", "x", ")"}], {1.4813893356642334, -2.6355033387447895},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{2.042935216448903, -2.662190241220531}, {
           2.042077166307198, -3.7102177124841713`}}, 0.036895872238239105`]},
          InsetBox[
          RowBox[{"-", 
           RowBox[{"sin", "(", "x", ")"}]}], {2.0425061913780507, -3.186203976852351},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.761959, 0.470832, 0.940597], 
          ArrowBox[{{0.9198434548795635, -2.6088164362690476`}, {
           0.34972263964767736`, -3.185091380394349}}, 
           0.036895872238239105`]}, 
         InsetBox["1", {0.6347830472636204, -2.896953908331698}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[BezierCurveBox[{{
           2.042077166307198, -3.7102177124841713`}, {
           1.4891357634311524`, -3.9215286378979415`}, {
           0.9187087902998579, -3.7633844930866704`}}], 
           0.036895872238239105`]}, InsetBox[
          RowBox[{"-", 
           RowBox[{"cos", "(", "x", ")"}]}], {1.4841146529457032, -3.8154368891059356},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{2.042077166307198, -3.7102177124841713`}, {
           1.4815965000637132`, -3.1860901957166594`}}, 
           0.036895872238239105`]}, InsetBox[
          RowBox[{"-", 
           RowBox[{"sin", "(", "x", ")"}]}], {1.7618368331854557, -3.448153954100415},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{0.9187087902998579, -3.7633844930866704`}, {
           0.9198434548795635, -2.6088164362690476`}}, 
           0.036895872238239105`]}, InsetBox[
          RowBox[{"-", 
           RowBox[{"sin", "(", "x", ")"}]}], {0.9192761225897107, -3.186100464677859},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[BezierCurveBox[{{
           0.9187087902998579, -3.7633844930866704`}, {
           1.471650193175917, -3.5520735676728816`}, {
           2.042077166307198, -3.7102177124841713`}}], 
           0.036895872238239105`]}, InsetBox[
          RowBox[{"-", 
           RowBox[{"cos", "(", "x", ")"}]}], {1.476671303661353, -3.6581653164649075},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{0.34972263964767736`, -3.185091380394349}, {
           0.9187087902998579, -3.7633844930866704`}}, 
           0.036895872238239105`]}, InsetBox[
          RowBox[{"-", 
           RowBox[{"sin", "(", "x", ")"}]}], {0.6342157149737676, -3.4742379367405096},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{0.34972263964767736`, -3.185091380394349}, {
           1.4815965000637132`, -3.1860901957166594`}}, 
           0.036895872238239105`]}, InsetBox[
          RowBox[{"cos", "(", "x", ")"}], {0.9156595698556953, -3.185590788055504},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.761959, 0.470832, 0.940597], 
          ArrowBox[BezierCurveBox[{{4.332543236723847, -2.906276206014851}, {
           4.244063981256087, -3.0970597384001533`}, {
           4.045185503718495, -3.1534559808607474`}, {
           3.9180148792440384`, -3.094498902085874}, {
           3.9180148792440384`, -2.718053509943828}, {
           4.045185503718495, -2.6590964311689547`}, {
           4.244063981256087, -2.715492673629549}, {
           4.332543236723847, -2.906276206014851}},
           SplineDegree->7], 0.036895872238239105`]}, 
         InsetBox["1", {3.832543236723847, -2.906276206014851}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.761959, 0.470832, 0.940597], 
          ArrowBox[{{1.4815965000637132`, -3.1860901957166594`}, {
           2.042935216448903, -2.662190241220531}}, 0.036895872238239105`]}, 
         InsetBox["1", {1.7622658582563082, -2.924140218468595}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.761959, 0.470832, 0.940597], 
          ArrowBox[{{1.1308587938522643`, -0.3500196004075349}, {
           0.34972263964767736`, -1.1306058238963357`}}, 
           0.036895872238239105`]}, 
         InsetBox["1", {0.7402907167499708, -0.7403127121519353}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.761959, 0.470832, 0.940597], 
          ArrowBox[{{0.34972263964767736`, -1.1306058238963357`}, {
           1.1324441770459008`, -1.9091800083603345`}}, 
           0.036895872238239105`]}, 
         InsetBox["1", {0.7410834083467891, -1.519892916128335}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{1.29241463509122, -1.1299428776037768`}, {
           1.1308587938522643`, -0.3500196004075349}}, 
           0.036895872238239105`]}, InsetBox[
          RowBox[{"cos", "(", "x", ")"}], {1.2116367144717421, -0.7399812390056558},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[BezierCurveBox[{{1.29241463509122, -1.1299428776037768`}, {
           1.7415521904393236`, -0.9821866157613682}, {
           2.190715406322687, -1.1298648539518923`}}], 
           0.036895872238239105`]}, InsetBox[
          RowBox[{"sin", "(", "x", ")"}], {1.7415595590513215, -1.0670228117916318},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[BezierCurveBox[{{
           2.190715406322687, -1.1298648539518923`}, {
           1.7415778509745754`, -1.2776211157943056`}, {
           1.29241463509122, -1.1299428776037768`}}], 0.036895872238239105`]},
          InsetBox[
          RowBox[{"-", 
           RowBox[{"sin", "(", "x", ")"}]}], {1.7415704823625853, -1.1927849197640374},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{2.190715406322687, -1.1298648539518923`}, {
           2.352110094838154, -1.9093711569736929`}}, 0.036895872238239105`]},
          InsetBox[
          RowBox[{"cos", "(", "x", ")"}], {2.2714127505804207, -1.5196180054627926},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{2.349671844773058, -0.34972263964767736`}, {
           1.1308587938522643`, -0.3500196004075349}}, 
           0.036895872238239105`]}, InsetBox[
          RowBox[{"-", 
           RowBox[{"sin", "(", "x", ")"}]}], {1.7402653193126612, -0.3498711200276061},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{2.349671844773058, -0.34972263964767736`}, {
           2.190715406322687, -1.1298648539518923`}}, 0.036895872238239105`]},
          InsetBox[
          RowBox[{"cos", "(", "x", ")"}], {2.2701936255478725, -0.7397937467997848},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{1.1324441770459008`, -1.9091800083603345`}, {
           1.29241463509122, -1.1299428776037768`}}, 0.036895872238239105`]}, 
         InsetBox[
          RowBox[{"-", 
           RowBox[{"cos", "(", "x", ")"}]}], {1.2124294060685603, -1.5195614429820556},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.431296, 0.709773, 0.927077], 
          ArrowBox[{{1.1324441770459008`, -1.9091800083603345`}, {
           2.352110094838154, -1.9093711569736929`}}, 0.036895872238239105`]},
          InsetBox[
          RowBox[{"-", 
           RowBox[{"sin", "(", "x", ")"}]}], {1.7422771359420275, -1.9092755826670138},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.761959, 0.470832, 0.940597], 
          ArrowBox[{{2.352110094838154, -1.9093711569736929`}, {
           3.133097957428492, -1.1284229279073104`}}, 0.036895872238239105`]},
          InsetBox["1", {2.742604026133323, -1.5188970424405017}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.761959, 0.470832, 0.940597], 
          ArrowBox[{{3.133097957428492, -1.1284229279073104`}, {
           2.349671844773058, -0.34972263964767736`}}, 
           0.036895872238239105`]}, InsetBox[
          RowBox[{"-", "1"}], {2.741384901100775, -0.7390727837774939}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{4.332543236723847, -0.8497226396476774}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["Id", "0"], " ", 
           SubscriptBox["Id", "1"]}], 
          Offset[{2, 2}, {4.369439108962086, -0.8128267674094383}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.042935216448903, -2.662190241220531}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["Id", "1"], " ", 
           SubscriptBox["X", "0"]}], 
          Offset[{2, 2}, {2.0798310886871425, -2.6252943689822916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9198434548795635, -2.6088164362690476}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["Id", "1"], " ", 
           SubscriptBox["Z", "0"]}], 
          Offset[{2, 2}, {0.9567393271178026, -2.5719205640308083}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.042077166307198, -3.7102177124841713}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["X", "1"], " ", 
           SubscriptBox["Y", "0"]}], 
          Offset[{2, 2}, {2.0789730385454375, -3.673321840245932}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9187087902998579, -3.7633844930866704}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["Id", "1"], " ", 
           SubscriptBox["Y", "0"]}], 
          Offset[{2, 2}, {0.955604662538097, -3.726488620848431}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.34972263964767736, -3.185091380394349}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["X", "0"], " ", 
           SubscriptBox["X", "1"]}], 
          Offset[{2, 2}, {0.38661851188591645, -3.1481955081561095}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.332543236723847, -2.906276206014851}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["Id", "0"], " ", 
           SubscriptBox["X", "1"]}], 
          Offset[{2, 2}, {4.369439108962086, -2.8693803337766117}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.4815965000637132, -3.1860901957166594}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["X", "1"], " ", 
           SubscriptBox["Z", "0"]}], 
          Offset[{2, 2}, {1.5184923723019523, -3.14919432347842}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1308587938522643, -0.3500196004075349}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["Id", "0"], " ", 
           SubscriptBox["Y", "1"]}], 
          Offset[{2, 2}, {1.1677546660905034, -0.3131237281692958}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.34972263964767736, -1.1306058238963357}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["Y", "1"], " ", 
           SubscriptBox["Z", "0"]}], 
          Offset[{2, 2}, {0.38661851188591645, -1.0937099516580966}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.29241463509122, -1.1299428776037768}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["X", "0"], " ", 
           SubscriptBox["Y", "1"]}], 
          Offset[{2, 2}, {1.329310507329459, -1.0930470053655377}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.190715406322687, -1.1298648539518923}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["X", "0"], " ", 
           SubscriptBox["Z", "1"]}], 
          Offset[{2, 2}, {2.2276112785609263, -1.0929689817136532}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.349671844773058, -0.34972263964767736}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["Y", "0"], " ", 
           SubscriptBox["Y", "1"]}], 
          Offset[{2, 2}, {2.3865677170112973, -0.31282676740943827}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1324441770459008, -1.9091800083603345}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["Y", "0"], " ", 
           SubscriptBox["Z", "1"]}], 
          Offset[{2, 2}, {1.16934004928414, -1.8722841361220954}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.352110094838154, -1.9093711569736929}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["Id", "0"], " ", 
           SubscriptBox["Z", "1"]}], 
          Offset[{2, 2}, {2.3890059670763932, -1.8724752847354538}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.133097957428492, -1.1284229279073104}, 
          0.036895872238239105], InsetBox[
          RowBox[{
           SubscriptBox["Z", "0"], " ", 
           SubscriptBox["Z", "1"]}], 
          Offset[{2, 2}, {3.169993829666731, -1.0915270556690713}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.9174519152028522`*^9, 3.917451995198167*^9}, 
   3.917452034586043*^9, {3.917452078586602*^9, 3.9174520868446217`*^9}, {
   3.917452124887361*^9, 3.917452154230504*^9}, 3.917452197089319*^9, {
   3.917452240357188*^9, 3.9174522654106894`*^9}, {3.917452409410787*^9, 
   3.9174525001885977`*^9}, {3.917453049516478*^9, 3.9174530526159573`*^9}, {
   3.917453174699645*^9, 3.917453232438211*^9}, {3.917453342864962*^9, 
   3.9174534258228083`*^9}, 3.917454225310288*^9, 3.9174542952236567`*^9, {
   3.91745453423775*^9, 3.917454563284504*^9}, 3.917456631254158*^9, 
   3.917457413396549*^9, 3.917457985095026*^9, 3.9174585929197283`*^9, {
   3.917458646597783*^9, 3.9174586963072853`*^9}, 3.917460005821741*^9, 
   3.917461144209161*^9, 3.917507028938574*^9, 3.917515231523415*^9, 
   3.9175163034895697`*^9, 3.9175166629961147`*^9, 3.917516864884962*^9, 
   3.917517876768662*^9, 3.9175184082695827`*^9, 3.9181123050441437`*^9, 
   3.920956146358494*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"dd3c3482-a574-41dd-8912-fd7840948d14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["X", "1"], 
    SubscriptBox["Z", "0"]}], ",", " ", "map"}], "]"}]], "Input",
 CellChangeTimes->{3.9174531187136*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"b0f0c915-3d90-428b-9c6e-5d706e32165a"],

Cell[BoxData[
 SubscriptBox["X", "0"]], "Output",
 CellChangeTimes->{
  3.9174531190544367`*^9, {3.917453189775435*^9, 3.917453206089733*^9}, 
   3.917453238836151*^9, {3.91745334517416*^9, 3.917453441687667*^9}, {
   3.9174535219233017`*^9, 3.9174535300928497`*^9}, 3.917454227153264*^9, {
   3.917454534476717*^9, 3.91745456331047*^9}, 3.917456633479869*^9, 
   3.9174600080463343`*^9, 3.917507030469411*^9, 3.917515232293313*^9, 
   3.917516304012504*^9, 3.917516664197063*^9, 3.9175168649089403`*^9, 
   3.9175178774895067`*^9, 3.917518408982277*^9, 3.917518447452375*^9, {
   3.917518487939612*^9, 3.9175184968071833`*^9}, 3.918112306524921*^9, 
   3.920956146559574*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"526e0dbc-604d-4cba-a2a9-96983fa933bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SubscriptBox["X", "0"], 
     SubscriptBox["Z", "1"]}], " ", "+", " ", 
    RowBox[{"b", " ", 
     SubscriptBox["X", "1"]}], " ", "+", " ", 
    RowBox[{"c", " ", 
     SubscriptBox["X", "1"], 
     SubscriptBox["Z", "0"]}]}], ",", " ", "map"}], "]"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"f9352ffb-345e-452e-921e-fcc508f30748"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", " ", 
   SubscriptBox["X", "0"]}], "+", 
  RowBox[{"b", " ", 
   SubscriptBox["X", "1"]}], "-", 
  RowBox[{"a", " ", 
   RowBox[{"Sin", "[", "x", "]"}], " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["Y", "1"]}], "+", 
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   SubscriptBox["Z", "1"]}]}]], "Output",
 CellChangeTimes->{
  3.917452501728819*^9, {3.9174530508456717`*^9, 3.917453053992408*^9}, {
   3.9174531885321712`*^9, 3.917453233712591*^9}, {3.917453347027017*^9, 
   3.9174534404219837`*^9}, 3.917453520697776*^9, 3.917453942914403*^9, {
   3.9174542003496*^9, 3.917454228255208*^9}, {3.917454534519415*^9, 
   3.9174545633595257`*^9}, 3.917456634896838*^9, 3.917457986033613*^9, 
   3.917458156853607*^9, 3.917460009319839*^9, 3.917507031681406*^9, 
   3.91751523333121*^9, 3.917516304159246*^9, 3.917516665623067*^9, 
   3.917516864940338*^9, 3.91751787849496*^9, 3.9175184981954536`*^9, 
   3.918112308169059*^9, 3.920956146571047*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"032f4a3a-f98d-44c0-a6a3-7338f14de7d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SubscriptBox["X", "0"], 
     SubscriptBox["Z", "1"]}], " ", "+", " ", 
    RowBox[{"b", " ", 
     SubscriptBox["X", "1"]}], " ", "+", " ", 
    RowBox[{"c", " ", 
     SubscriptBox["X", "1"], 
     SubscriptBox["Z", "0"]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "map", ",", "map", ",", "map", ",", "map", ",", "map", ",", "map", ",", 
     " ", "map"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9174539356498213`*^9, 3.9174539907407017`*^9}, {
  3.917459353951787*^9, 3.9174593548380117`*^9}, {3.9174600558205442`*^9, 
  3.917460059668232*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b9b6b16b-a31e-4949-bc33-edc7a5f79b1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", "c", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"3", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
   SubscriptBox["X", "0"]}], "+", 
  RowBox[{"b", " ", 
   SubscriptBox["X", "1"]}], "+", 
  RowBox[{"c", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "x", "]"}], "5"], " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["X", "1"]}], "+", 
  RowBox[{"c", " ", 
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   RowBox[{"Sin", "[", "x", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "4"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}], " ", 
   SubscriptBox["Y", "0"]}], "+", 
  RowBox[{"c", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "x", "]"}], " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["Y", "0"]}], "+", 
  RowBox[{"a", " ", 
   RowBox[{"Sin", "[", "x", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "x", "]"}], "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "6"], "-", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "x"}], "]"}], "2"]}], ")"}], " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["Y", "1"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", "a", " ", 
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"3", "-", 
     RowBox[{"12", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], ")"}], " ", 
   SubscriptBox["Y", "0"], " ", 
   SubscriptBox["Y", "1"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "c", " ", 
   RowBox[{"Sin", "[", "x", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "x"}], "]"}], " ", 
   SubscriptBox["Z", "0"]}], "+", 
  RowBox[{"c", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"3", "+", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
   SubscriptBox["X", "1"], " ", 
   SubscriptBox["Z", "0"]}], "-", 
  RowBox[{
   FractionBox["1", "16"], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"16", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}], " ", 
   SubscriptBox["Y", "1"], " ", 
   SubscriptBox["Z", "0"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", "a", " ", 
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"3", "-", 
     RowBox[{"20", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
   SubscriptBox["Z", "1"]}]}]], "Output",
 CellChangeTimes->{{3.917453937920855*^9, 3.9174539911353617`*^9}, 
   3.917454198933056*^9, 3.917454229556137*^9, {3.917454534566804*^9, 
   3.917454563393841*^9}, 3.917456636397143*^9, 3.917457414240629*^9, {
   3.9174579872025127`*^9, 3.917458015913816*^9}, 3.91745815864894*^9, 
   3.917458700921907*^9, {3.917459349729644*^9, 3.917459355071506*^9}, 
   3.917459975306988*^9, {3.917460057221919*^9, 3.917460059913226*^9}, {
   3.9174605038398237`*^9, 3.917460506569315*^9}, 3.917507032835535*^9, 
   3.917515234560711*^9, 3.9175163052254457`*^9, 3.917516667292967*^9, 
   3.917516864991753*^9, 3.9175178797686977`*^9, 3.9175184993496103`*^9, 
   3.91811231011373*^9, 3.920956146917536*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"45371541-2afb-413f-bbff-075c728b054c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"4", " ", "^", " ", "2"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"str", " ", "=", " ", 
   RowBox[{
    SubscriptBox["Z", "0"], "+", 
    SubscriptBox["Y", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"Length", " ", "@", " ", 
    RowBox[{"ApplyPauliTransferMap", "[", 
     RowBox[{"str", ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"map", ",", "reps"}], "]"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"{", 
    RowBox[{"reps", ",", "1", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9174600436176033`*^9, 3.917460098755002*^9}, {
  3.917460179069696*^9, 3.917460276621868*^9}, {3.917460346607806*^9, 
  3.917460390532221*^9}, {3.917460420846076*^9, 3.9174604746370487`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"cc66c4e6-f6e0-43ac-949d-f5632a4f07ab"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{{3.9174600944523563`*^9, 3.917460119252994*^9}, {
   3.91746017767889*^9, 3.9174602103333406`*^9}, {3.9174602683231916`*^9, 
   3.917460276872353*^9}, {3.9174603480588083`*^9, 3.917460373576211*^9}, {
   3.917460414217537*^9, 3.917460487360366*^9}, 3.917507035502042*^9, 
   3.917515236205113*^9, 3.917516306760253*^9, 3.91751666918964*^9, 
   3.917516865004713*^9, 3.917517881087676*^9, 3.9175185007736187`*^9, 
   3.918112311700078*^9, 3.920956146930595*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"d82ff715-e08a-4df7-84c7-f1a8ca5aefa1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "8", ",", "10", ",", "10", ",", "10", ",", 
   "10", ",", "10", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{{3.9174600944523563`*^9, 3.917460119252994*^9}, {
   3.91746017767889*^9, 3.9174602103333406`*^9}, {3.9174602683231916`*^9, 
   3.917460276872353*^9}, {3.9174603480588083`*^9, 3.917460373576211*^9}, {
   3.917460414217537*^9, 3.917460487360366*^9}, 3.917507035502042*^9, 
   3.917515236205113*^9, 3.917516306760253*^9, 3.91751666918964*^9, 
   3.917516865004713*^9, 3.917517881087676*^9, 3.9175185007736187`*^9, 
   3.918112311700078*^9, 3.920956147987824*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"6ae80273-ffc1-41bc-b087-2fec2d39fb40"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Circuits", "Section",
 CellChangeTimes->{{3.91746001775187*^9, 
  3.917460026325035*^9}},ExpressionUUID->"be433be5-a593-4f0e-94b5-\
06232378443c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SubscriptBox["X", "0"], 
     SubscriptBox["Z", "1"]}], " ", "+", " ", 
    RowBox[{"b", " ", 
     SubscriptBox["X", "1"]}], " ", "+", " ", 
    RowBox[{"c", " ", 
     SubscriptBox["X", "1"], 
     SubscriptBox["Z", "0"]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"map", ",", 
     RowBox[{
      SubscriptBox["C", "0"], "[", 
      SubscriptBox["X", "1"], "]"}], ",", " ", 
     RowBox[{
      SubscriptBox["PTM", "0"], "@", 
      RowBox[{"DiagonalMatrix", "@", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}]}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.917459655857753*^9, 3.917459675512998*^9}, {
   3.917515279873742*^9, 3.9175152802673407`*^9}, 3.9175153229305267`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"206050ce-a38f-4434-aa5b-1095c656662c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "b", " ", 
   SubscriptBox["X", "1"]}], "+", 
  RowBox[{"b", " ", "c", " ", 
   SubscriptBox["X", "0"], " ", 
   SubscriptBox["X", "1"]}], "-", 
  RowBox[{"a", " ", "c", " ", 
   RowBox[{"Sin", "[", "x", "]"}], " ", 
   SubscriptBox["Y", "0"], " ", 
   SubscriptBox["Z", "1"]}], "+", 
  RowBox[{"a", " ", "d", " ", 
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   SubscriptBox["Z", "0"], " ", 
   SubscriptBox["Z", "1"]}]}]], "Output",
 CellChangeTimes->{
  3.917459675911574*^9, 3.917459989239286*^9, 3.917460030473641*^9, 
   3.917460527854394*^9, 3.917507039951338*^9, {3.917515240430358*^9, 
   3.917515245533806*^9}, 3.9175152806032248`*^9, {3.917515316445847*^9, 
   3.917515323201984*^9}, {3.9175163086784277`*^9, 3.917516313489792*^9}, 
   3.917516384645462*^9, 3.9175164230251503`*^9, {3.91751665134566*^9, 
   3.917516696379381*^9}, 3.9175168652133713`*^9, 3.9175178834773483`*^9, 
   3.917518502008109*^9, 3.918112314233473*^9, 3.9209561480736837`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"d19d4139-0f36-4dd8-ba13-68ca5df226c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"GetKnownCircuit", "[", 
    RowBox[{"\"\<QFT\>\"", ",", " ", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m", " ", "=", " ", 
    RowBox[{"CalcCircuitMatrix", "[", "u", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]in", " ", "=", " ", 
   RowBox[{"RandomComplex", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ",", 
       RowBox[{"1", "+", "\[ImaginaryI]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "^", "n"}], ",", " ", 
       RowBox[{"2", "^", "n"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]out", " ", "=", " ", 
    RowBox[{"m", " ", ".", " ", "\[Rho]in", " ", ".", " ", 
     RowBox[{"ConjugateTranspose", "[", "m", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]in", " ", "=", " ", 
   RowBox[{"GetPauliString", "[", "\[Rho]in", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]out", " ", "=", " ", 
    RowBox[{"ApplyPauliTransferMap", "[", 
     RowBox[{"\[Sigma]in", ",", " ", "u"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CalcPauliExpressionMatrix", "[", "\[Sigma]out", "]"}], " ", "-", 
    " ", "\[Rho]out"}], " ", "//", " ", "Abs"}], " ", "//", " ", 
  "Max"}]}], "Input",
 CellChangeTimes->{{3.917459740096459*^9, 3.917459817886847*^9}, {
  3.917459923533111*^9, 3.917459953681367*^9}, {3.917460560583748*^9, 
  3.9174607418227882`*^9}, {3.917460786430973*^9, 3.917460842807624*^9}, {
  3.917507061273583*^9, 3.9175070930871553`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"9b5a2ad9-abfb-455a-8b91-beb517e651e9"],

Cell[BoxData["6.753223014464258`*^-16"], "Output",
 CellChangeTimes->{{3.917460716773138*^9, 3.9174607421906767`*^9}, {
   3.917460791336006*^9, 3.917460846512599*^9}, 3.917507043008361*^9, 
   3.917507094741065*^9, 3.9175153263323593`*^9, 3.917516700004157*^9, 
   3.917516866608144*^9, 3.917517886780745*^9, 3.917518504638226*^9, 
   3.918112316833701*^9, 3.920956149686572*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"3c875549-7f20-4c20-b6c9-e0cec8f38608"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fully-mixing channels", "Section",
 CellChangeTimes->{{3.91746001775187*^9, 3.917460026325035*^9}, {
  3.920956183428007*^9, 
  3.920956185296023*^9}},ExpressionUUID->"d511aed7-3357-4797-88d1-\
43dc0a7bfc96"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{
    SubscriptBox["Deph", "0"], "[", ".4", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{
    SubscriptBox["Deph", "0"], "[", ".5", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{
    SubscriptBox["Deph", "0"], "[", ".6", "]"}], ",", " ", 
   RowBox[{"AssertValidChannels", "->", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9209561873159657`*^9, 3.920956210658267*^9}, {
  3.9209562574567547`*^9, 3.920956262545772*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"58b93675-da58-4ede-9231-b57778f18b10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"0.20000000000000007`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
  SubscriptBox["X", "0"]}]], "Output",
 CellChangeTimes->{{3.920956194910901*^9, 3.92095621096066*^9}, 
   3.9209562627976627`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"fe337b04-6c1b-4051-a36b-379829ac2692"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.920956194910901*^9, 3.92095621096066*^9}, 
   3.9209562627995653`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"d9ea0f96-044b-4523-99bf-114078d4d27c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "0.20000000000000007`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
  SubscriptBox["X", "0"]}]], "Output",
 CellChangeTimes->{{3.920956194910901*^9, 3.92095621096066*^9}, 
   3.920956262802273*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"ffbefb11-1e09-4cbf-b3f7-074ef30e2ff4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{
    SubscriptBox["Deph", 
     RowBox[{"0", ",", "1"}]], "[", 
    RowBox[{"3", "/", "4"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{
    SubscriptBox["Depol", "0"], "[", 
    RowBox[{"3", "/", "4"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{
    SubscriptBox["Depol", 
     RowBox[{"0", ",", "1"}]], "[", 
    RowBox[{"15", "/", "16"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.920956274307872*^9, 3.920956306310894*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"de6ce778-79ab-452a-8010-385ff3b5677d"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.920956280640526*^9, 3.9209563066563997`*^9}},
 CellLabel->"Out[65]=",ExpressionUUID->"615106bc-be1d-4d7a-861c-96df2bca6d72"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.920956280640526*^9, 3.920956306659466*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"09706821-bdbf-4bb3-954f-29b19e61ac2a"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.920956280640526*^9, 3.920956306666463*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"f6e83c81-b345-4a09-8119-5cf6a5e44189"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{
    SubscriptBox["Damp", "0"], "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.920956313717255*^9, 3.920956318987383*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"5484a5d2-d63d-41c4-bcae-aaf4671c0cbd"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.9209563177496*^9, 3.92095631925294*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"a0532fa5-36a4-4025-baa6-fb04933e272a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Section",
 CellChangeTimes->{{3.91746001775187*^9, 3.917460026325035*^9}, {
  3.9175167761365967`*^9, 
  3.9175167767463913`*^9}},ExpressionUUID->"97df6472-d787-4f5a-8287-\
e61d2d52d187"],

Cell[CellGroupData[{

Cell["Caching", "Subsection",
 CellChangeTimes->{{3.917459393716526*^9, 
  3.9174593942976837`*^9}},ExpressionUUID->"4cf09147-19b7-4bc9-98fb-\
a74a6426f3a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"circ", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["C", "0"], "[", 
      SubscriptBox["X", "1"], "]"}], ",", " ", "500"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", " ", "@", " ", 
  RowBox[{"ApplyPauliTransferMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      SubscriptBox["X", "0"], 
      SubscriptBox["Z", "1"]}], " ", "+", " ", 
     RowBox[{"b", " ", 
      SubscriptBox["X", "1"]}], " ", "+", " ", 
     RowBox[{"c", " ", 
      SubscriptBox["X", "1"], 
      SubscriptBox["Z", "0"]}], " ", "+", " ", 
     SubscriptBox["Y", "2"]}], ",", " ", "circ", ",", " ", 
    RowBox[{"\"\<CacheMaps\>\"", "->", "\"\<Never\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Timing", " ", "@", " ", 
  RowBox[{"ApplyPauliTransferMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      SubscriptBox["X", "0"], 
      SubscriptBox["Z", "1"]}], " ", "+", " ", 
     RowBox[{"b", " ", 
      SubscriptBox["X", "1"]}], " ", "+", " ", 
     RowBox[{"c", " ", 
      SubscriptBox["X", "1"], 
      SubscriptBox["Z", "0"]}], " ", "+", " ", 
     SubscriptBox["Y", "2"]}], ",", " ", "circ", ",", " ", 
    RowBox[{"\"\<CacheMaps\>\"", "->", "\"\<Forever\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.917459413590646*^9, {3.917459458831615*^9, 3.917459461318143*^9}, {
   3.917459529606936*^9, 3.917459532454756*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"65f79189-1c3f-4635-80d7-8bc7ade43f68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.499391`", ",", 
   RowBox[{
    RowBox[{"b", " ", 
     SubscriptBox["X", "1"]}], "+", 
    SubscriptBox["Y", "2"], "+", 
    RowBox[{"c", " ", 
     SubscriptBox["X", "1"], " ", 
     SubscriptBox["Z", "0"]}], "+", 
    RowBox[{"a", " ", 
     SubscriptBox["X", "0"], " ", 
     SubscriptBox["Z", "1"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.917459407043494*^9, 3.917459417134858*^9}, 
   3.917459464964261*^9, 3.917459536053679*^9, 3.9175071013538017`*^9, 
   3.917515331124797*^9, 3.9175167048775806`*^9, 3.917516870907642*^9, 
   3.917517891188076*^9, 3.91751850822902*^9, 3.920956153248774*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"4f43373e-a60d-4412-9a90-609e4f5184c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.521339`", ",", 
   RowBox[{
    RowBox[{"b", " ", 
     SubscriptBox["X", "1"]}], "+", 
    SubscriptBox["Y", "2"], "+", 
    RowBox[{"c", " ", 
     SubscriptBox["X", "1"], " ", 
     SubscriptBox["Z", "0"]}], "+", 
    RowBox[{"a", " ", 
     SubscriptBox["X", "0"], " ", 
     SubscriptBox["Z", "1"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.917459407043494*^9, 3.917459417134858*^9}, 
   3.917459464964261*^9, 3.917459536053679*^9, 3.9175071013538017`*^9, 
   3.917515331124797*^9, 3.9175167048775806`*^9, 3.917516870907642*^9, 
   3.917517891188076*^9, 3.91751850822902*^9, 3.920956153772162*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"3683b3b1-65eb-46a2-a65a-443f5cc0847e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ApplyPauliTransferMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      SubscriptBox["X", "0"], 
      SubscriptBox["Z", "1"]}], " ", "+", " ", 
     RowBox[{"b", " ", 
      SubscriptBox["X", "1"]}], " ", "+", " ", 
     RowBox[{"c", " ", 
      SubscriptBox["X", "1"], 
      SubscriptBox["Z", "0"]}], " ", "+", " ", 
     SubscriptBox["Y", "2"]}], ",", " ", "circ", ",", " ", 
    RowBox[{"\"\<CacheMaps\>\"", "->", "\"\<Forever\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DownValues", "[", "QuEST`Private`obtainCachedPTMap", "]"}], " ", "//",
    " ", "First"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyPauliTransferMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      SubscriptBox["X", "0"], 
      SubscriptBox["Z", "1"]}], " ", "+", " ", 
     RowBox[{"b", " ", 
      SubscriptBox["X", "1"]}], " ", "+", " ", 
     RowBox[{"c", " ", 
      SubscriptBox["X", "1"], 
      SubscriptBox["Z", "0"]}], " ", "+", " ", 
     SubscriptBox["Y", "2"]}], ",", " ", "circ", ",", " ", 
    RowBox[{"\"\<CacheMaps\>\"", "->", "\"\<Never\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DownValues", "[", "QuEST`Private`obtainCachedPTMap", "]"}], " ", "//",
    " ", "First"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyPauliTransferMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      SubscriptBox["X", "0"], 
      SubscriptBox["Z", "1"]}], " ", "+", " ", 
     RowBox[{"b", " ", 
      SubscriptBox["X", "1"]}], " ", "+", " ", 
     RowBox[{"c", " ", 
      SubscriptBox["X", "1"], 
      SubscriptBox["Z", "0"]}], " ", "+", " ", 
     SubscriptBox["Y", "2"]}], ",", " ", "circ", ",", " ", 
    RowBox[{"\"\<CacheMaps\>\"", "->", "\"\<UntilCallEnd\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DownValues", "[", "QuEST`Private`obtainCachedPTMap", "]"}], " ", "//",
   " ", "First"}]}], "Input",
 CellChangeTimes->{{3.917459545717206*^9, 3.917459608152986*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"bb5acbce-ae6f-4fda-9515-d95f2367d25e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "[", 
   RowBox[{"QuEST`Private`obtainCachedPTMap", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["C", "1"], "[", 
       SubscriptBox["X", "0"], "]"}], "}"}], ",", 
     RowBox[{"\<\"CacheMaps\"\>", "\[Rule]", "\<\"Forever\"\>"}]}], "]"}], 
   "]"}], "\[RuleDelayed]", 
  RowBox[{
   SubscriptBox["PTMap", 
    RowBox[{"0", ",", "1"}]], "[", 
   RowBox[{
    RowBox[{"0", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"1", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"2", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"14", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"3", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"15", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"4", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"5", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"5", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"4", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"6", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"11", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"7", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"10", ",", 
        RowBox[{"-", "1"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"8", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"9", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"9", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"8", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"10", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"7", ",", 
        RowBox[{"-", "1"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"11", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"6", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"12", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"12", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"13", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"13", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"14", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], "}"}]}], ",", 
    RowBox[{"15", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], "}"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.917459547832879*^9, 3.917459608774901*^9}, 
   3.917507102216659*^9, 3.917515332017851*^9, 3.917516705814657*^9, 
   3.917516872122065*^9, 3.917517892589231*^9, 3.9175185092574863`*^9, 
   3.9209561544109297`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"b6d2a8f3-5f72-45c5-8d12-780eefd0dd86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "[", 
   RowBox[{"QuEST`Private`obtainCachedPTMap", "[", 
    RowBox[{"QuEST`Private`compGate_", ",", "QuEST`Private`opts___"}], "]"}], 
   "]"}], "\[RuleDelayed]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"QuEST`Private`obtainCachedPTMap", "[", 
     RowBox[{"QuEST`Private`compGate", ",", "QuEST`Private`opts"}], "]"}], 
    "=", 
    RowBox[{"CalcPauliTransferMap", "[", 
     RowBox[{"QuEST`Private`compGate", ",", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "QuEST`Private`opts", "}"}], ",", 
         RowBox[{"Options", "[", "CalcPauliTransferMap", "]"}]}], "]"}]}]}], 
     "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.917459547832879*^9, 3.917459608774901*^9}, 
   3.917507102216659*^9, 3.917515332017851*^9, 3.917516705814657*^9, 
   3.917516872122065*^9, 3.917517892589231*^9, 3.9175185092574863`*^9, 
   3.920956158015791*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"ab59de54-ca36-4fc4-8ca8-23bda9dcf56e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "[", 
   RowBox[{"QuEST`Private`obtainCachedPTMap", "[", 
    RowBox[{"QuEST`Private`compGate_", ",", "QuEST`Private`opts___"}], "]"}], 
   "]"}], "\[RuleDelayed]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"QuEST`Private`obtainCachedPTMap", "[", 
     RowBox[{"QuEST`Private`compGate", ",", "QuEST`Private`opts"}], "]"}], 
    "=", 
    RowBox[{"CalcPauliTransferMap", "[", 
     RowBox[{"QuEST`Private`compGate", ",", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "QuEST`Private`opts", "}"}], ",", 
         RowBox[{"Options", "[", "CalcPauliTransferMap", "]"}]}], "]"}]}]}], 
     "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.917459547832879*^9, 3.917459608774901*^9}, 
   3.917507102216659*^9, 3.917515332017851*^9, 3.917516705814657*^9, 
   3.917516872122065*^9, 3.917517892589231*^9, 3.9175185092574863`*^9, 
   3.920956158539937*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"1e1f33ee-4ffa-42d7-9793-899559eb2790"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AssertValidChannels", "Subsection",
 CellChangeTimes->{{3.917459393716526*^9, 3.9174593942976837`*^9}, {
  3.917516788627759*^9, 
  3.917516790712275*^9}},ExpressionUUID->"4bbd4d88-d588-49ff-9cc7-\
972de201b1c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["X", "0"], 
    SubscriptBox["Y", "1"]}], ",", " ", 
   RowBox[{
    SubscriptBox["Depol", 
     RowBox[{"0", ",", "1"}]], "[", "x", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["X", "0"], 
    SubscriptBox["Y", "1"]}], ",", " ", 
   RowBox[{
    SubscriptBox["Depol", 
     RowBox[{"0", ",", "1"}]], "[", "x", "]"}], ",", " ", 
   RowBox[{"AssertValidChannels", "->", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.917516964124177*^9, 3.917516989115457*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"a2fb38da-aa8a-47b2-bbe4-58e580d9a788"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "15"], " ", 
  RowBox[{"(", 
   RowBox[{"15", "-", 
    RowBox[{"16", " ", "x"}]}], ")"}], " ", 
  SubscriptBox["X", "0"], " ", 
  SubscriptBox["Y", "1"]}]], "Output",
 CellChangeTimes->{{3.917516976646902*^9, 3.917516989381826*^9}, 
   3.91751789663098*^9, 3.917518513274592*^9, 3.9209561587363367`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"a9b68a0c-c3df-458b-b538-aef29258d111"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "15"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"15", " ", 
     SqrtBox[
      RowBox[{"1", "-", "x"}]], " ", 
     RowBox[{"Conjugate", "[", 
      SqrtBox[
       RowBox[{"1", "-", "x"}]], "]"}]}], "-", 
    RowBox[{
     SqrtBox["x"], " ", 
     RowBox[{"Conjugate", "[", 
      SqrtBox["x"], "]"}]}]}], ")"}], " ", 
  SubscriptBox["X", "0"], " ", 
  SubscriptBox["Y", "1"]}]], "Output",
 CellChangeTimes->{{3.917516976646902*^9, 3.917516989381826*^9}, 
   3.91751789663098*^9, 3.917518513274592*^9, 3.920956158770273*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"430ff3d8-8e26-416d-93d8-3c34652a76b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Errors", "Chapter",
 CellChangeTimes->{{3.912849421029387*^9, 3.912849426146103*^9}, {
  3.912849785066738*^9, 3.912849790979604*^9}, {3.912878442788628*^9, 
  3.912878443004286*^9}, {3.9151991784358664`*^9, 3.9151991786465263`*^9}, {
  3.9173418805860863`*^9, 3.917341881626457*^9}, {3.917451715663147*^9, 
  3.9174517252876453`*^9}},ExpressionUUID->"5524d7f6-8b97-42e4-861f-\
3caad3568fb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{
    SubscriptBox["Deph", "0"], "[", ".6", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.920956242966518*^9, 3.920956249499556*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"189cd6f5-3fa7-454e-9d2f-9740c605f59a"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Could not pre-compute the Pauli transfer \
maps due to the below error:\\\\\\\"\\\"}]\\)\"", 2, 54, 20, 
   32460273476938174805, "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.9209562497560177`*^9},
 CellLabel->
  "During evaluation of \
In[54]:=",ExpressionUUID->"41455712-b358-461d-b697-93c242335858"],

Cell[BoxData[
 TemplateBox[{
  "CalcPauliTransferMatrix", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"The channels could not be asserted as \
completely positive trace-preserving maps and hence were not simplified. Hide \
this warning with AssertValidChannels -> False, or use Quiet[].\\\\\\\"\\\"}]\
\\)\"", 2, 54, 21, 32460273476938174805, "Local", 
   "QuEST`CalcPauliTransferMatrix"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.920956249764944*^9},
 CellLabel->
  "During evaluation of \
In[54]:=",ExpressionUUID->"d6f8e8ba-9ff7-4de2-82c0-269fca8ef15d"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.920956237099985*^9, 3.920956249772935*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"a98b2f7c-9b19-41b0-8746-4130c3caf3f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{"{", 
    SubscriptBox["blob", "0"], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.917460876952343*^9, 3.917460880917201*^9}, {
  3.917461150937204*^9, 3.917461187659659*^9}, {3.917461261034843*^9, 
  3.917461281555908*^9}, {3.918112324508513*^9, 3.918112325187296*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"ad62fa39-7002-46c3-8a53-8db709830815"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Could not pre-compute the Pauli transfer \
maps due to the below error:\\\\\\\"\\\"}]\\)\"", 2, 32, 2, 
   32460273476938174805, "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.917461188073743*^9, {3.9174612631969624`*^9, 3.917461282087612*^9}, 
   3.917461339124713*^9, 3.917507108844516*^9, 3.917515339925696*^9, 
   3.917515772183557*^9, 3.9175158086916447`*^9, 3.917516721710568*^9, 
   3.917516876611145*^9, 3.91751789700596*^9, 3.917518516168346*^9, 
   3.918112326234578*^9, 3.920956159014847*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"62764aeb-27fa-433f-b60d-2eddf9cc3a33"],

Cell[BoxData[
 TemplateBox[{
  "CalcPauliTransferMatrix", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Circuit contained an unrecognised or \
unsupported gate: \
\\\\\\\\!\\\\\\\\(\\\\\\\\*SubscriptBox[\\\\\\\\\\\\\\\"blob\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\"}]\\)\"", 2, 32, 3, 
   32460273476938174805, "Local", "QuEST`CalcPauliTransferMatrix"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.917461188073743*^9, {3.9174612631969624`*^9, 3.917461282087612*^9}, 
   3.917461339124713*^9, 3.917507108844516*^9, 3.917515339925696*^9, 
   3.917515772183557*^9, 3.9175158086916447`*^9, 3.917516721710568*^9, 
   3.917516876611145*^9, 3.91751789700596*^9, 3.917518516168346*^9, 
   3.918112326234578*^9, 3.920956159022634*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"93ac7365-ce19-4cbb-a09b-eaa40430abf4"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.9174608779756927`*^9, 3.917460881147822*^9}, 
   3.917461108522272*^9, {3.917461147699191*^9, 3.91746118832498*^9}, {
   3.917461263220297*^9, 3.9174612821067257`*^9}, 3.9174613391446733`*^9, 
   3.9175071088661346`*^9, 3.917515339942129*^9, 3.91751577223343*^9, 
   3.917515808734118*^9, 3.917516721728702*^9, 3.9175168766292343`*^9, 
   3.917517897023177*^9, 3.91751851618517*^9, 3.918112326260564*^9, 
   3.920956159030162*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"367895ce-ab0e-424e-abb3-60c06d06014e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{"\"\<CacheMaps\>\"", "->", "\"\<Spaghetti\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{"{", 
    SubscriptBox["X", "0"], "}"}], ",", " ", 
   RowBox[{"\"\<CacheMaps\>\"", "->", "\"\<Spaghetti\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{
    SubscriptBox["PTM", "0"], "[", "x", "]"}], ",", " ", 
   RowBox[{"\"\<CacheMaps\>\"", "->", "\"\<Spaghetti\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["PTM", "0"], "[", "x", "]"}], "}"}], ",", " ", 
   RowBox[{"\"\<CacheMaps\>\"", "->", "\"\<Spaghetti\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{
    SubscriptBox["PTMap", "0"], "[", "x", "]"}], ",", " ", 
   RowBox[{"\"\<CacheMaps\>\"", "->", "\"\<Spaghetti\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["PTMap", "0"], "[", "x", "]"}], "}"}], ",", " ", 
   RowBox[{"\"\<CacheMaps\>\"", "->", "\"\<Spaghetti\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9174587485848503`*^9, 3.917458758040655*^9}, {
  3.917516908522738*^9, 3.917516942514306*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"830f3f61-dea7-4f53-9f6b-d7ac57b1de9f"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Option \\\\\\\\\\\\\\\"CacheMaps\\\\\\\\\\\
\\\\\" must be one of \\\\\\\\\\\\\\\"Forever\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\
\"UntilCallEnd\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\"Never\\\\\\\\\\\\\\\". See \
?ApplyPauliTransferMap.\\\\\\\"\\\"}]\\)\"", 2, 33, 4, 32460273476938174805, 
   "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917458751257202*^9, 3.917458758224103*^9}, 
   3.9174608690750732`*^9, 3.917461181608604*^9, 3.9175071102211723`*^9, 
   3.917515344659976*^9, 3.917515810993991*^9, 3.917516728154141*^9, 
   3.917516876659955*^9, {3.917516913515593*^9, 3.917516942751635*^9}, 
   3.917517897170616*^9, 3.917518517252955*^9, 3.918112328879951*^9, 
   3.920956159040224*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"58a6cf58-f5c0-4851-9f42-3f6124e5eabf"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.917458751269355*^9, 3.917458758234292*^9}, 
   3.9174608690881968`*^9, 3.917461181635681*^9, 3.917507110236259*^9, 
   3.917515344669443*^9, 3.917515811003214*^9, 3.91751672816315*^9, 
   3.917516876670767*^9, {3.917516913526849*^9, 3.917516942764234*^9}, 
   3.9175178971820087`*^9, 3.9175185172615213`*^9, 3.9181123289280767`*^9, 
   3.920956159048543*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"a4a53f59-ba43-41cf-acd0-8086801fbdbc"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Option \\\\\\\\\\\\\\\"CacheMaps\\\\\\\\\\\
\\\\\" must be one of \\\\\\\\\\\\\\\"Forever\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\
\"UntilCallEnd\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\"Never\\\\\\\\\\\\\\\". See \
?ApplyPauliTransferMap.\\\\\\\"\\\"}]\\)\"", 2, 34, 5, 32460273476938174805, 
   "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917458751257202*^9, 3.917458758224103*^9}, 
   3.9174608690750732`*^9, 3.917461181608604*^9, 3.9175071102211723`*^9, 
   3.917515344659976*^9, 3.917515810993991*^9, 3.917516728154141*^9, 
   3.917516876659955*^9, {3.917516913515593*^9, 3.917516942751635*^9}, 
   3.917517897170616*^9, 3.917518517252955*^9, 3.918112328879951*^9, 
   3.9209561590501204`*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"0c808c46-af6c-4908-933f-366803cbd5e7"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.917458751269355*^9, 3.917458758234292*^9}, 
   3.9174608690881968`*^9, 3.917461181635681*^9, 3.917507110236259*^9, 
   3.917515344669443*^9, 3.917515811003214*^9, 3.91751672816315*^9, 
   3.917516876670767*^9, {3.917516913526849*^9, 3.917516942764234*^9}, 
   3.9175178971820087`*^9, 3.9175185172615213`*^9, 3.9181123289280767`*^9, 
   3.9209561590581627`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"8e8cde88-2db6-4b90-ac68-3e7087b47ebe"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Option \\\\\\\\\\\\\\\"CacheMaps\\\\\\\\\\\
\\\\\" must be one of \\\\\\\\\\\\\\\"Forever\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\
\"UntilCallEnd\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\"Never\\\\\\\\\\\\\\\". See \
?ApplyPauliTransferMap.\\\\\\\"\\\"}]\\)\"", 2, 35, 6, 32460273476938174805, 
   "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917458751257202*^9, 3.917458758224103*^9}, 
   3.9174608690750732`*^9, 3.917461181608604*^9, 3.9175071102211723`*^9, 
   3.917515344659976*^9, 3.917515810993991*^9, 3.917516728154141*^9, 
   3.917516876659955*^9, {3.917516913515593*^9, 3.917516942751635*^9}, 
   3.917517897170616*^9, 3.917518517252955*^9, 3.918112328879951*^9, 
   3.9209561590598793`*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"d99ee1c8-cd0d-4ffd-84bc-e6741d29ed50"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.917458751269355*^9, 3.917458758234292*^9}, 
   3.9174608690881968`*^9, 3.917461181635681*^9, 3.917507110236259*^9, 
   3.917515344669443*^9, 3.917515811003214*^9, 3.91751672816315*^9, 
   3.917516876670767*^9, {3.917516913526849*^9, 3.917516942764234*^9}, 
   3.9175178971820087`*^9, 3.9175185172615213`*^9, 3.9181123289280767`*^9, 
   3.920956159067465*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"99a5262a-4ea0-4959-a852-cbf77804c3d2"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Option \\\\\\\\\\\\\\\"CacheMaps\\\\\\\\\\\
\\\\\" must be one of \\\\\\\\\\\\\\\"Forever\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\
\"UntilCallEnd\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\"Never\\\\\\\\\\\\\\\". See \
?ApplyPauliTransferMap.\\\\\\\"\\\"}]\\)\"", 2, 36, 7, 32460273476938174805, 
   "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917458751257202*^9, 3.917458758224103*^9}, 
   3.9174608690750732`*^9, 3.917461181608604*^9, 3.9175071102211723`*^9, 
   3.917515344659976*^9, 3.917515810993991*^9, 3.917516728154141*^9, 
   3.917516876659955*^9, {3.917516913515593*^9, 3.917516942751635*^9}, 
   3.917517897170616*^9, 3.917518517252955*^9, 3.918112328879951*^9, 
   3.920956159069002*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"454d20c2-8554-42ff-82e6-f77ded724bad"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.917458751269355*^9, 3.917458758234292*^9}, 
   3.9174608690881968`*^9, 3.917461181635681*^9, 3.917507110236259*^9, 
   3.917515344669443*^9, 3.917515811003214*^9, 3.91751672816315*^9, 
   3.917516876670767*^9, {3.917516913526849*^9, 3.917516942764234*^9}, 
   3.9175178971820087`*^9, 3.9175185172615213`*^9, 3.9181123289280767`*^9, 
   3.920956159076342*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"12fae33e-fde8-4e79-81ab-2b15c7d6df3e"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Option \\\\\\\\\\\\\\\"CacheMaps\\\\\\\\\\\
\\\\\" must be one of \\\\\\\\\\\\\\\"Forever\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\
\"UntilCallEnd\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\"Never\\\\\\\\\\\\\\\". See \
?ApplyPauliTransferMap.\\\\\\\"\\\"}]\\)\"", 2, 37, 8, 32460273476938174805, 
   "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917458751257202*^9, 3.917458758224103*^9}, 
   3.9174608690750732`*^9, 3.917461181608604*^9, 3.9175071102211723`*^9, 
   3.917515344659976*^9, 3.917515810993991*^9, 3.917516728154141*^9, 
   3.917516876659955*^9, {3.917516913515593*^9, 3.917516942751635*^9}, 
   3.917517897170616*^9, 3.917518517252955*^9, 3.918112328879951*^9, 
   3.920956159077873*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"c34162d9-8aff-4248-bed2-e7eb54f8a213"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.917458751269355*^9, 3.917458758234292*^9}, 
   3.9174608690881968`*^9, 3.917461181635681*^9, 3.917507110236259*^9, 
   3.917515344669443*^9, 3.917515811003214*^9, 3.91751672816315*^9, 
   3.917516876670767*^9, {3.917516913526849*^9, 3.917516942764234*^9}, 
   3.9175178971820087`*^9, 3.9175185172615213`*^9, 3.9181123289280767`*^9, 
   3.920956159085352*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"662ba908-dcfa-4eeb-8d2d-993b987bffc4"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Option \\\\\\\\\\\\\\\"CacheMaps\\\\\\\\\\\
\\\\\" must be one of \\\\\\\\\\\\\\\"Forever\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\
\"UntilCallEnd\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\"Never\\\\\\\\\\\\\\\". See \
?ApplyPauliTransferMap.\\\\\\\"\\\"}]\\)\"", 2, 38, 9, 32460273476938174805, 
   "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917458751257202*^9, 3.917458758224103*^9}, 
   3.9174608690750732`*^9, 3.917461181608604*^9, 3.9175071102211723`*^9, 
   3.917515344659976*^9, 3.917515810993991*^9, 3.917516728154141*^9, 
   3.917516876659955*^9, {3.917516913515593*^9, 3.917516942751635*^9}, 
   3.917517897170616*^9, 3.917518517252955*^9, 3.918112328879951*^9, 
   3.920956159086895*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"f99e049b-568b-4a18-9dc6-55cfd9e5f116"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.917458751269355*^9, 3.917458758234292*^9}, 
   3.9174608690881968`*^9, 3.917461181635681*^9, 3.917507110236259*^9, 
   3.917515344669443*^9, 3.917515811003214*^9, 3.91751672816315*^9, 
   3.917516876670767*^9, {3.917516913526849*^9, 3.917516942764234*^9}, 
   3.9175178971820087`*^9, 3.9175185172615213`*^9, 3.9181123289280767`*^9, 
   3.9209561590941963`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"b657962c-ed59-451e-b3c0-3d66abcca8ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{"{", 
    SubscriptBox["X", "0"], "}"}], ",", " ", 
   RowBox[{"\"\<BadOption\>\"", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9174587276636*^9, 3.9174587442874928`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"98351ce0-c14b-47d6-bcd0-e5f17d70449a"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "nodef", 
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"BadOption\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"ApplyPauliTransferMap\\\", \
\\\",\\\", \\\"CalcPauliTransferMap\\\"}], \\\"}\\\"}]\\).\"", 2, 39, 10, 
   32460273476938174805, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.917458744573969*^9, 3.917460871183836*^9, 3.917507112551908*^9, 
   3.917515346366869*^9, 3.917516729742825*^9, 3.917516876679636*^9, {
   3.917517897326586*^9, 3.91751789967703*^9}, 3.917518520113069*^9, 
   3.9181123344352303`*^9, 3.92095615915033*^9},
 CellLabel->
  "During evaluation of \
In[39]:=",ExpressionUUID->"3435bae0-2228-4b7a-a55b-491c5bd17b01"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.917458744613175*^9, 3.9174608711931543`*^9, 3.917507112562175*^9, 
   3.917515346375291*^9, 3.917516729750976*^9, 3.9175168766889353`*^9, {
   3.917517897334971*^9, 3.917517899688282*^9}, 3.9175185201216173`*^9, 
   3.918112334465147*^9, 3.920956159159773*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"62494673-ac53-4542-a95b-aff1ed16fc59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", "0"], ",", " ", 
   RowBox[{"{", 
    SubscriptBox["X", "0"], "}"}], ",", " ", 
   RowBox[{
   "\"\<CombineStates\>\"", "->", 
    "\"\<Only valid for CalcPauliTransferEval\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9175203372984467`*^9, 3.9175203599730663`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"9e783753-2034-4818-b52f-4a9c51940ab6"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "nodef", 
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"CombineStates\\\\\\\"\\\"}]\
\\) for \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"ApplyPauliTransferMap\\\", \\\
\",\\\", \\\"CalcPauliTransferMap\\\"}], \\\"}\\\"}]\\).\"", 2, 40, 11, 
   32460273476938174805, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9175203404723053`*^9, 3.917520360238091*^9}, 
   3.918112345298471*^9, 3.92095615916726*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"4f22bece-1469-4dc0-ad6e-79b31ba12884"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.917520340494502*^9, 3.917520360247919*^9}, 
   3.9181123453117113`*^9, 3.9209561591748867`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"dbe5f496-4409-4d36-b9e3-1424f2700a16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{"a", ",", " ", 
   RowBox[{"{", 
    SubscriptBox["H", "0"], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   SubscriptBox["X", 
    RowBox[{"-", "1"}]], ",", " ", 
   RowBox[{"{", 
    SubscriptBox["H", "0"], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["X", "0"], 
    SubscriptBox["X", "0"]}], ",", " ", 
   RowBox[{"{", 
    SubscriptBox["H", "0"], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyPauliTransferMap", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["X", "0"], 
    SubscriptBox["Y", "0"]}], ",", " ", 
   RowBox[{"{", 
    SubscriptBox["H", "0"], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.917461300142507*^9, 3.917461328364315*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"b5411d17-cd2d-4905-a25a-34172b1fa82f"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See \
?ApplyPauliTransferMap\\\\\\\"\\\"}]\\)\"", 2, 41, 12, 32460273476938174805, 
   "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917461302727322*^9, 3.9174613287248507`*^9}, 
   3.917507113612214*^9, 3.917515349014565*^9, 3.91751687672211*^9, 
   3.9175179011267557`*^9, 3.917518518790124*^9, 3.9181123472919083`*^9, 
   3.9209561592044353`*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"5b639ebb-8d2d-4233-bb7b-5958f58ca8f6"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.917461302740288*^9, 3.91746132873555*^9}, 
   3.91750711362396*^9, 3.917515349025381*^9, 3.917516876733272*^9, 
   3.9175179011363373`*^9, 3.9175185187982883`*^9, 3.918112347306365*^9, 
   3.9209561592125*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"d185c9b2-023b-4720-ba02-e09f14c572bc"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See \
?ApplyPauliTransferMap\\\\\\\"\\\"}]\\)\"", 2, 42, 13, 32460273476938174805, 
   "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917461302727322*^9, 3.9174613287248507`*^9}, 
   3.917507113612214*^9, 3.917515349014565*^9, 3.91751687672211*^9, 
   3.9175179011267557`*^9, 3.917518518790124*^9, 3.9181123472919083`*^9, 
   3.920956159214016*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"de3da8e5-b096-4d06-80d4-abaf8a9ecbd3"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.917461302740288*^9, 3.91746132873555*^9}, 
   3.91750711362396*^9, 3.917515349025381*^9, 3.917516876733272*^9, 
   3.9175179011363373`*^9, 3.9175185187982883`*^9, 3.918112347306365*^9, 
   3.9209561592232847`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"4c12ba4c-afb2-4254-b3b2-9142f8d0dbf0"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See \
?ApplyPauliTransferMap\\\\\\\"\\\"}]\\)\"", 2, 43, 14, 32460273476938174805, 
   "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917461302727322*^9, 3.9174613287248507`*^9}, 
   3.917507113612214*^9, 3.917515349014565*^9, 3.91751687672211*^9, 
   3.9175179011267557`*^9, 3.917518518790124*^9, 3.9181123472919083`*^9, 
   3.9209561592249537`*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"6267de03-8692-470a-9db3-97f37770dabb"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.917461302740288*^9, 3.91746132873555*^9}, 
   3.91750711362396*^9, 3.917515349025381*^9, 3.917516876733272*^9, 
   3.9175179011363373`*^9, 3.9175185187982883`*^9, 3.918112347306365*^9, 
   3.9209561592337523`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"c27852c1-9a60-40f9-ab3c-f6c9af0568be"],

Cell[BoxData[
 TemplateBox[{
  "ApplyPauliTransferMap", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See \
?ApplyPauliTransferMap\\\\\\\"\\\"}]\\)\"", 2, 44, 15, 32460273476938174805, 
   "Local", "QuEST`ApplyPauliTransferMap"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917461302727322*^9, 3.9174613287248507`*^9}, 
   3.917507113612214*^9, 3.917515349014565*^9, 3.91751687672211*^9, 
   3.9175179011267557`*^9, 3.917518518790124*^9, 3.9181123472919083`*^9, 
   3.920956159235323*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"b4c2259d-fd40-4175-9132-2132e01ce23d"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.917461302740288*^9, 3.91746132873555*^9}, 
   3.91750711362396*^9, 3.917515349025381*^9, 3.917516876733272*^9, 
   3.9175179011363373`*^9, 3.9175185187982883`*^9, 3.918112347306365*^9, 
   3.920956159242407*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"6f0ee2a1-6271-4bcf-8408-5bda69dc5315"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{720, 806},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"efaffe79-647a-4f23-a4d0-ca12a3fc3daf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 586, 9, 98, "Title",ExpressionUUID->"77f009f4-2175-44a8-80e3-db58a43dd7eb"],
Cell[1169, 33, 383, 8, 52, "Input",ExpressionUUID->"96dc3e19-ba26-4783-b8c5-af8507883921"],
Cell[CellGroupData[{
Cell[1577, 45, 296, 5, 69, "Chapter",ExpressionUUID->"2a8ec798-ae11-4a87-9bc0-81ab84d2fff7"],
Cell[CellGroupData[{
Cell[1898, 54, 210, 3, 30, "Input",ExpressionUUID->"fba5918a-c879-4e52-a985-86426b9044bd"],
Cell[2111, 59, 24481, 536, 453, "Output",ExpressionUUID->"a6f8c793-a839-4cfb-b0bc-8764ac20ec72"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26641, 601, 452, 7, 69, "Chapter",ExpressionUUID->"02bdf378-83ae-4892-994c-456dd1665801"],
Cell[CellGroupData[{
Cell[27118, 612, 147, 3, 67, "Section",ExpressionUUID->"3046ef3e-0cb3-4f31-95ea-17cc025e6c77"],
Cell[CellGroupData[{
Cell[27290, 619, 765, 18, 52, "Input",ExpressionUUID->"45ff0713-8931-405a-ae53-38ff226ea5a8"],
Cell[28058, 639, 21434, 412, 325, "Output",ExpressionUUID->"dd3c3482-a574-41dd-8912-fd7840948d14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49529, 1056, 289, 7, 30, "Input",ExpressionUUID->"b0f0c915-3d90-428b-9c6e-5d706e32165a"],
Cell[49821, 1065, 754, 12, 34, "Output",ExpressionUUID->"526e0dbc-604d-4cba-a2a9-96983fa933bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50612, 1082, 446, 12, 30, "Input",ExpressionUUID->"f9352ffb-345e-452e-921e-fcc508f30748"],
Cell[51061, 1096, 1090, 23, 34, "Output",ExpressionUUID->"032f4a3a-f98d-44c0-a6a3-7338f14de7d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52188, 1124, 745, 19, 52, "Input",ExpressionUUID->"b9b6b16b-a31e-4949-bc33-edc7a5f79b1f"],
Cell[52936, 1145, 4311, 125, 271, "Output",ExpressionUUID->"45371541-2afb-413f-bbff-075c728b054c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57284, 1275, 906, 20, 115, "Input",ExpressionUUID->"cc66c4e6-f6e0-43ac-949d-f5632a4f07ab"],
Cell[58193, 1297, 587, 8, 34, "Output",ExpressionUUID->"d82ff715-e08a-4df7-84c7-f1a8ca5aefa1"],
Cell[58783, 1307, 725, 12, 34, "Output",ExpressionUUID->"6ae80273-ffc1-41bc-b087-2fec2d39fb40"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59557, 1325, 152, 3, 67, "Section",ExpressionUUID->"be433be5-a593-4f0e-94b5-06232378443c"],
Cell[CellGroupData[{
Cell[59734, 1332, 910, 25, 52, "Input",ExpressionUUID->"206050ce-a38f-4434-aa5b-1095c656662c"],
Cell[60647, 1359, 1082, 23, 34, "Output",ExpressionUUID->"d19d4139-0f36-4dd8-ba13-68ca5df226c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61766, 1387, 1985, 53, 241, "Input",ExpressionUUID->"9b5a2ad9-abfb-455a-8b91-beb517e651e9"],
Cell[63754, 1442, 459, 6, 34, "Output",ExpressionUUID->"3c875549-7f20-4c20-b6c9-e0cec8f38608"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64262, 1454, 214, 4, 67, "Section",ExpressionUUID->"d511aed7-3357-4797-88d1-43dc0a7bfc96"],
Cell[CellGroupData[{
Cell[64501, 1462, 816, 21, 74, "Input",ExpressionUUID->"58b93675-da58-4ede-9231-b57778f18b10"],
Cell[65320, 1485, 369, 8, 34, "Output",ExpressionUUID->"fe337b04-6c1b-4051-a36b-379829ac2692"],
Cell[65692, 1495, 200, 3, 34, "Output",ExpressionUUID->"d9ea0f96-044b-4523-99bf-114078d4d27c"],
Cell[65895, 1500, 367, 9, 34, "Output",ExpressionUUID->"ffbefb11-1e09-4cbf-b3f7-074ef30e2ff4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66299, 1514, 823, 22, 80, "Input",ExpressionUUID->"de6ce778-79ab-452a-8010-385ff3b5677d"],
Cell[67125, 1538, 175, 2, 34, "Output",ExpressionUUID->"615106bc-be1d-4d7a-861c-96df2bca6d72"],
Cell[67303, 1542, 173, 2, 34, "Output",ExpressionUUID->"09706821-bdbf-4bb3-954f-29b19e61ac2a"],
Cell[67479, 1546, 173, 2, 34, "Output",ExpressionUUID->"f6e83c81-b345-4a09-8119-5cf6a5e44189"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67689, 1553, 326, 7, 32, "Input",ExpressionUUID->"5484a5d2-d63d-41c4-bcae-aaf4671c0cbd"],
Cell[68018, 1562, 170, 2, 34, "Output",ExpressionUUID->"a0532fa5-36a4-4025-baa6-fb04933e272a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68237, 1570, 204, 4, 67, "Section",ExpressionUUID->"97df6472-d787-4f5a-8287-e61d2d52d187"],
Cell[CellGroupData[{
Cell[68466, 1578, 157, 3, 54, "Subsection",ExpressionUUID->"4cf09147-19b7-4bc9-98fb-a74a6426f3a2"],
Cell[CellGroupData[{
Cell[68648, 1585, 1527, 42, 115, "Input",ExpressionUUID->"65f79189-1c3f-4635-80d7-8bc7ade43f68"],
Cell[70178, 1629, 727, 17, 34, "Output",ExpressionUUID->"4f43373e-a60d-4412-9a90-609e4f5184c4"],
Cell[70908, 1648, 727, 17, 34, "Output",ExpressionUUID->"3683b3b1-65eb-46a2-a65a-443f5cc0847e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71672, 1670, 2181, 58, 241, "Input",ExpressionUUID->"bb5acbce-ae6f-4fda-9515-d95f2367d25e"],
Cell[73856, 1730, 2774, 85, 143, "Output",ExpressionUUID->"b6d2a8f3-5f72-45c5-8d12-780eefd0dd86"],
Cell[76633, 1817, 1036, 23, 140, "Output",ExpressionUUID->"ab59de54-ca36-4fc4-8ca8-23bda9dcf56e"],
Cell[77672, 1842, 1036, 23, 140, "Output",ExpressionUUID->"1e1f33ee-4ffa-42d7-9793-899559eb2790"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78757, 1871, 218, 4, 54, "Subsection",ExpressionUUID->"4bbd4d88-d588-49ff-9cc7-972de201b1c6"],
Cell[CellGroupData[{
Cell[79000, 1879, 717, 20, 58, "Input",ExpressionUUID->"a2fb38da-aa8a-47b2-bbe4-58e580d9a788"],
Cell[79720, 1901, 426, 10, 50, "Output",ExpressionUUID->"a9b68a0c-c3df-458b-b538-aef29258d111"],
Cell[80149, 1913, 653, 19, 50, "Output",ExpressionUUID->"430ff3d8-8e26-416d-93d8-3c34652a76b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80875, 1940, 398, 6, 69, "Chapter",ExpressionUUID->"5524d7f6-8b97-42e4-861f-3caad3568fb8"],
Cell[CellGroupData[{
Cell[81298, 1950, 327, 7, 32, "Input",ExpressionUUID->"189cd6f5-3fa7-454e-9d2f-9740c605f59a"],
Cell[81628, 1959, 462, 10, 28, "Message",ExpressionUUID->"41455712-b358-461d-b697-93c242335858"],
Cell[82093, 1971, 578, 12, 63, "Message",ExpressionUUID->"d6f8e8ba-9ff7-4de2-82c0-269fca8ef15d"],
Cell[82674, 1985, 179, 2, 34, "Output",ExpressionUUID->"a98b2f7c-9b19-41b0-8746-4130c3caf3f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82890, 1992, 465, 9, 30, "Input",ExpressionUUID->"ad62fa39-7002-46c3-8a53-8db709830815"],
Cell[83358, 2003, 769, 15, 28, "Message",ExpressionUUID->"62764aeb-27fa-433f-b60d-2eddf9cc3a33"],
Cell[84130, 2020, 884, 17, 28, "Message",ExpressionUUID->"93ac7365-ce19-4cbb-a09b-eaa40430abf4"],
Cell[85017, 2039, 566, 8, 34, "Output",ExpressionUUID->"367895ce-ab0e-424e-abb3-60c06d06014e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85620, 2052, 1750, 46, 137, "Input",ExpressionUUID->"830f3f61-dea7-4f53-9f6b-d7ac57b1de9f"],
Cell[87373, 2100, 949, 17, 46, "Message",ExpressionUUID->"58a6cf58-f5c0-4851-9f42-3f6124e5eabf"],
Cell[88325, 2119, 494, 7, 34, "Output",ExpressionUUID->"a4a53f59-ba43-41cf-acd0-8086801fbdbc"],
Cell[88822, 2128, 951, 17, 46, "Message",ExpressionUUID->"0c808c46-af6c-4908-933f-366803cbd5e7"],
Cell[89776, 2147, 496, 7, 34, "Output",ExpressionUUID->"8e8cde88-2db6-4b90-ac68-3e7087b47ebe"],
Cell[90275, 2156, 951, 17, 46, "Message",ExpressionUUID->"d99ee1c8-cd0d-4ffd-84bc-e6741d29ed50"],
Cell[91229, 2175, 494, 7, 34, "Output",ExpressionUUID->"99a5262a-4ea0-4959-a852-cbf77804c3d2"],
Cell[91726, 2184, 949, 17, 46, "Message",ExpressionUUID->"454d20c2-8554-42ff-82e6-f77ded724bad"],
Cell[92678, 2203, 494, 7, 34, "Output",ExpressionUUID->"12fae33e-fde8-4e79-81ab-2b15c7d6df3e"],
Cell[93175, 2212, 949, 17, 46, "Message",ExpressionUUID->"c34162d9-8aff-4248-bed2-e7eb54f8a213"],
Cell[94127, 2231, 494, 7, 34, "Output",ExpressionUUID->"662ba908-dcfa-4eeb-8d2d-993b987bffc4"],
Cell[94624, 2240, 949, 17, 46, "Message",ExpressionUUID->"f99e049b-568b-4a18-9dc6-55cfd9e5f116"],
Cell[95576, 2259, 496, 7, 34, "Output",ExpressionUUID->"b657962c-ed59-451e-b3c0-3d66abcca8ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96109, 2271, 377, 8, 30, "Input",ExpressionUUID->"98351ce0-c14b-47d6-bcd0-e5f17d70449a"],
Cell[96489, 2281, 742, 15, 28, "Message",ExpressionUUID->"3435bae0-2228-4b7a-a55b-491c5bd17b01"],
Cell[97234, 2298, 398, 6, 34, "Output",ExpressionUUID->"62494673-ac53-4542-a95b-aff1ed16fc59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97669, 2309, 434, 10, 52, "Input",ExpressionUUID->"9e783753-2034-4818-b52f-4a9c51940ab6"],
Cell[98106, 2321, 582, 12, 28, "Message",ExpressionUUID->"4f22bece-1469-4dc0-ad6e-79b31ba12884"],
Cell[98691, 2335, 231, 3, 34, "Output",ExpressionUUID->"dbe5f496-4409-4d36-b9e3-1424f2700a16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98959, 2343, 927, 26, 94, "Input",ExpressionUUID->"b5411d17-cd2d-4905-a25a-34172b1fa82f"],
Cell[99889, 2371, 633, 13, 28, "Message",ExpressionUUID->"5b639ebb-8d2d-4233-bb7b-5958f58ca8f6"],
Cell[100525, 2386, 345, 5, 34, "Output",ExpressionUUID->"d185c9b2-023b-4720-ba02-e09f14c572bc"],
Cell[100873, 2393, 631, 13, 28, "Message",ExpressionUUID->"de3da8e5-b096-4d06-80d4-abaf8a9ecbd3"],
Cell[101507, 2408, 349, 5, 34, "Output",ExpressionUUID->"4c12ba4c-afb2-4254-b3b2-9142f8d0dbf0"],
Cell[101859, 2415, 633, 13, 28, "Message",ExpressionUUID->"6267de03-8692-470a-9db3-97f37770dabb"],
Cell[102495, 2430, 349, 5, 34, "Output",ExpressionUUID->"c27852c1-9a60-40f9-ab3c-f6c9af0568be"],
Cell[102847, 2437, 631, 13, 28, "Message",ExpressionUUID->"b4c2259d-fd40-4175-9132-2132e01ce23d"],
Cell[103481, 2452, 347, 5, 34, "Output",ExpressionUUID->"6f0ee2a1-6271-4bcf-8408-5bda69dc5315"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

